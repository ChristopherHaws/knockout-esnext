{"version":3,"file":"knockout-latest.debug.js","sources":["../../src/onError.js","../../src/utils.domData.js","../../src/subscribables/observableUtils.js","../../src/subscribables/dependencyDetection.js","../../src/utils.domNodeDisposal.js","../../src/utils.domNodes.js","../../src/virtualElements.js","../../src/options.js","../../src/utils.js","../../src/tasks.js","../../src/subscribables/deferredExtender.js","../../src/subscribables/extenders.js","../../src/subscribables/subscribable.js","../../src/subscribables/dependentObservable.js","../../src/binding/bindingHandlers.js","../../src/binding/expressionRewriting.js","../../src/components/loaderRegistry.js","../../src/utils.domManipulation.js","../../src/components/defaultLoader.js","../../src/components/customElements.js","../../src/binding/bindingProvider.js","../../src/binding/bindingAttributeSyntax.js","../../src/subscribables/observable.js","../../src/binding/editDetection/compareArrays.js","../../src/subscribables/observableArray.changeTracking.js","../../src/subscribables/observableArray.js","../../src/memoization.js","../../src/templating/templateRewriting.js","../../src/subscribables/mappingHelpers.js","../../src/binding/editDetection/arrayToDomNodeChildren.js","../../src/templating/templateSources.js","../../src/templating/templateEngine.js","../../src/templating/templating.js","../../src/templating/native/nativeTemplateEngine.js","../../src/subscribables/when.js","../../src/binding/defaultBindings/attr.js","../../src/binding/defaultBindings/checked.js","../../src/binding/defaultBindings/event.js","../../src/binding/defaultBindings/click.js","../../src/binding/defaultBindings/css.js","../../src/binding/defaultBindings/enableDisable.js","../../src/binding/defaultBindings/foreach.js","../../src/binding/defaultBindings/hasfocus.js","../../src/binding/defaultBindings/html.js","../../src/binding/defaultBindings/ifIfnotWith.js","../../src/binding/defaultBindings/let.js","../../src/binding/selectExtensions.js","../../src/binding/defaultBindings/options.js","../../src/binding/defaultBindings/selectedOptions.js","../../src/binding/defaultBindings/style.js","../../src/binding/defaultBindings/submit.js","../../src/binding/defaultBindings/text.js","../../src/binding/defaultBindings/textInput.js","../../src/binding/defaultBindings/uniqueName.js","../../src/binding/defaultBindings/using.js","../../src/binding/defaultBindings/value.js","../../src/binding/defaultBindings/visibleHidden.js","../../src/components/componentBinding.js","../../src/ko.js"],"sourcesContent":["\n/** @type {function} */\nexport let onError = null;\n\nexport const _overrideOnError = (fnOrNull) => {\n    if (fnOrNull && typeof fnOrNull !== 'function') {\n        throw new Error('ko.onError must be function or nullish');\n    }\n    onError = fnOrNull;\n};\n","const DATASTORE_PROP = Symbol('ko-domdata');\nconst KEY_PREFIX = 'ko_' + Date.now().toString(36) + '_';\n\nlet _keyCount = 0;\n\n\nexport const getDomData = (node, key) => {\n    let dataForNode = node[DATASTORE_PROP];\n    return dataForNode && dataForNode[key];\n};\n\n/**\n * Returns a function that removes a given item from an array located under the node's domData[itemArrayDomDataKey].\n * If the array IS or BECOMES empty, it will be deleted from the domData. \n * @return {function(Node, *): void}\n */\nexport const getCurriedDomDataArrayItemRemovalFunctionForArrayDomDataKey = (itemArrayDomDataKey) => (node, itemToRemove) => {\n    let dataForNode = node[DATASTORE_PROP],\n        itemArray = dataForNode && dataForNode[itemArrayDomDataKey];\n\n    if (itemArray) {\n        let index = itemArray.indexOf(itemToRemove);\n        if (index === 0) {\n            itemArray.shift();\n        } else if (index > 0) {\n            itemArray.splice(index, 1);\n        }\n        if (!itemArray.length) {\n            dataForNode[itemArrayDomDataKey] = undefined;\n        }\n    }\n};\n\n/**\n * Returns a function that adds a given item to an array located under the node's domData[itemArrayDomDataKey].\n * If the domData or the array didn't exist, either will be created.\n * @param {string} itemArrayDomDataKey\n * @return {function(Node, *): void}\n */\nexport const getCurriedDomDataArrayItemAddFunctionForArrayDomDataKey = (itemArrayDomDataKey) => (node, itemToAdd) => {\n    let dataForNode = node[DATASTORE_PROP] || (node[DATASTORE_PROP] = Object.create(null)),\n        itemArray = dataForNode[itemArrayDomDataKey];\n    \n    if (itemArray) {\n        itemArray.push(itemToAdd);\n    } else {\n        dataForNode[itemArrayDomDataKey] = [itemToAdd];\n    }\n}\n\n/**\n * Returns a function that will \n *  (1) run all (function-)items of an array located under the node's domData[itemArrayDomDataKey], passing the node as parameter\n *  (2) clear the node's DOM data\n * @param {string} itemArrayDomDataKey\n * @return {function(Node): void}\n */\nexport const getCurriedDomDataArrayInvokeEachAndClearDomDataFunctionForArrayDomDataKey = (itemArrayDomDataKey) => (node) => {\n    let dataForNode = node[DATASTORE_PROP];\n    if (dataForNode) {\n        let itemArray = dataForNode[itemArrayDomDataKey];\n        if (itemArray) {\n            for (let i = 0, _fns = itemArray.slice(0), len = _fns.length; i < len; i++) {\n                _fns[i](node);\n            }\n        }\n        delete node[DATASTORE_PROP];\n    }    \n}\n\nexport const setDomData = (node, key, value) => {\n    // Make sure we don't actually create a new domData key if we are actually deleting a value\n    let dataForNode = node[DATASTORE_PROP] || (value !== undefined && (node[DATASTORE_PROP] = Object.create(null)));\n    if (dataForNode) {\n        dataForNode[key] = value;\n    }\n};\n\nexport const getOrSetDomData = (node, key, value) => {\n    let dataForNode = node[DATASTORE_PROP] || (node[DATASTORE_PROP] = Object.create(null)),\n        existingValue = dataForNode[key];\n\n    return existingValue || (dataForNode[key] = value);\n};\n\nexport const clearDomData = (node) => {\n    if (node[DATASTORE_PROP]) {\n        delete node[DATASTORE_PROP];\n        return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n    }\n    return false;\n};\n\nexport const nextDomDataKey = () => KEY_PREFIX + (++_keyCount);\n","export const IS_SUBSCRIBABLE = Symbol('IS_SUBSCRIBABLE');\nexport const isSubscribable = (obj) => !!(obj && obj[IS_SUBSCRIBABLE]);\n\nexport const IS_OBSERVABLE = Symbol('IS_OBSERVABLE');\n//export const isObservable = (obj) => !!(obj && obj[IS_OBSERVABLE]);\nexport const isObservable = (obj) => {\n    if (!obj) {\n        return false;\n    }\n    if (obj.__ko_proto__) {\n        // TODO left this only for not breaking the asyncBehaviors.js tests; remove later \n        throw Error(\"Invalid object that looks like an observable; possibly from another Knockout instance\");\n    }\n    return !!obj[IS_OBSERVABLE];\n};\n\nexport const IS_OBSERVABLE_ARRAY = Symbol('IS_OBSERVABLE_ARRAY');\nexport const isObservableArray = (obj) => !!(obj && obj[IS_OBSERVABLE_ARRAY]);\n\nexport const IS_COMPUTED = Symbol('IS_COMPUTED');\nexport const isComputed = (obj) => !!(obj && obj[IS_COMPUTED]);\n\nexport const IS_PURE_COMPUTED = Symbol('IS_PURE_COMPUTED');\nexport const isPureComputed = (obj) => !!(obj && obj[IS_PURE_COMPUTED]);\n\nexport const isWritableObservable = (obj) => !!(obj && (obj[IS_COMPUTED] ? obj.hasWriteFunction : obj[IS_OBSERVABLE]));\nexport const isWriteable = isWritableObservable; \n","import {isSubscribable} from './observableUtils';\n\nconst outerFrames = [];\nlet currentFrame,\n    lastId = 0;\n\nexport const beginDependencyDetection = options => {\n    outerFrames.push(currentFrame);\n    currentFrame = options;\n};\n\nexport const endDependencyDetection = () => currentFrame = outerFrames.pop();\n\nexport const ignoreDependencyDetection = (callback, callbackTarget, callbackArgs) => {\n    try {\n        beginDependencyDetection();\n        // there's a high percentage of calls without callbackTarget and/or callbackArgs, \n        // so let's speed up things by not using `apply` or args in those cases\n        return callbackTarget ? callback.apply(callbackTarget, callbackArgs || []) :\n            callbackArgs ? callback(...callbackArgs) : callback();\n    } finally {\n        endDependencyDetection();\n    }\n};\n\n// Return a unique ID that can be assigned to an observable for dependency tracking.\n// Theoretically, you could eventually overflow the number storage size, resulting\n// in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n// or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n// take over 285 years to reach that number.\n// Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\nconst _getId = () => ++lastId;\n\nexport const registerDependency = (subscribable) => {\n    if (currentFrame) {\n        if (!isSubscribable(subscribable)) {\n            throw new Error('Only subscribable things can act as dependencies');\n        }\n        currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = _getId()));\n    }\n};\n\nexport const getDependenciesCount = () => currentFrame ? currentFrame.computed.getDependenciesCount() : undefined;\nexport const getDependencies = () => currentFrame ? currentFrame.computed.getDependencies() : undefined;\nexport const isInitialDependency = () => currentFrame ? currentFrame.isInitial : undefined;\nexport const getCurrentComputed = () => currentFrame ? currentFrame.computed : undefined;\n","import {nextDomDataKey,\n        getCurriedDomDataArrayInvokeEachAndClearDomDataFunctionForArrayDomDataKey,\n        getCurriedDomDataArrayItemAddFunctionForArrayDomDataKey,\n        getCurriedDomDataArrayItemRemovalFunctionForArrayDomDataKey} from './utils.domData';\nimport {ignoreDependencyDetection} from './subscribables/dependencyDetection';\n\nconst DISPOSE_CALLBACKS_DOM_DATA_KEY = nextDomDataKey();\nconst CLEANABLE_NODE_TYPES = {1: true, 8: true, 9: true};                   // Element, Comment, Document\nconst CLEANABLE_NODE_TYPES_WITH_DESCENDENTS = {1: true, 8: false, 9: true}; // Element, Comment(not), Document\n\n\n/** @type {function} */\nexport let _cleanExternalData = null;\nexport const _overrideCleanExternalData = (fn) => _cleanExternalData = fn;\n\nconst _runDisposalCallbacksAndClearDomData = getCurriedDomDataArrayInvokeEachAndClearDomDataFunctionForArrayDomDataKey(DISPOSE_CALLBACKS_DOM_DATA_KEY);\n\nconst _cleanSingleNode = (node) => {\n    // Run all the dispose callbacks & ease the DOM data\n    _runDisposalCallbacksAndClearDomData(node);\n\n    // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n    if (_cleanExternalData) {\n        _cleanExternalData(node);\n    }\n    \n    // Clear any immediate-child comment nodes, as these wouldn't have been found by\n    // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n    if (CLEANABLE_NODE_TYPES_WITH_DESCENDENTS[node.nodeType]) {\n        let cleanableNodesList = node.childNodes;\n        if (cleanableNodesList.length) {\n            _cleanNodesInList(cleanableNodesList, true /*onlyComments*/);\n        }\n    }\n};\n\n/**\n * @param {HTMLCollection|NodeList} nodeList\n * @param {boolean} [onlyComments]\n * @private\n */\nconst _cleanNodesInList = (nodeList, onlyComments) => {\n    let cleanedNodes = [],\n        cleanedNodesIndex = -1,    \n        lastCleanedNode;\n    \n    for (let i = 0, node; i < nodeList.length; i++) {\n        node = nodeList[i]; \n        if (!onlyComments || node.nodeType === 8) {\n            _cleanSingleNode(cleanedNodes[++cleanedNodesIndex] = lastCleanedNode = node);\n            if (nodeList[i] !== lastCleanedNode) {\n                while (i-- && !cleanedNodes.includes(nodeList[i])) {\n                    // just do\n                }\n            }\n        }\n    }\n};\n\n/** @type {function(Node, Function): void} */\nexport const addDisposeCallback = getCurriedDomDataArrayItemAddFunctionForArrayDomDataKey(DISPOSE_CALLBACKS_DOM_DATA_KEY);\n\n/** @type {function(Node, Function): void} */\nexport const removeDisposeCallback = getCurriedDomDataArrayItemRemovalFunctionForArrayDomDataKey(DISPOSE_CALLBACKS_DOM_DATA_KEY); \n\nexport const cleanNode = (node) => {\n    if (CLEANABLE_NODE_TYPES[node.nodeType]) {\n        ignoreDependencyDetection(() => {\n            // First clean this node, where applicable\n            _cleanSingleNode(node);\n            // ... then its descendants, where applicable\n            if (CLEANABLE_NODE_TYPES_WITH_DESCENDENTS[node.nodeType]) {\n                let cleanableNodesList = node.getElementsByTagName('*');\n                if (cleanableNodesList.length) {\n                    _cleanNodesInList(cleanableNodesList);\n                }\n            }\n        });\n    }\n    return node;\n};\n\nexport const removeNode = (node) => cleanNode(node).remove();\n","import {removeNode} from './utils.domNodeDisposal';\n\nexport const emptyDomNode = (domNode) => {\n    let child;\n    while (child = domNode.firstChild) {\n        removeNode(child);\n    }\n};\n\nexport const setDomNodeChildren = (domNode, childNodes) => {\n    emptyDomNode(domNode);\n    if (childNodes) {\n        for (let i = 0, j = childNodes.length; i < j; i++) {\n            domNode.appendChild(childNodes[i]);\n        }\n    }\n};\n","// \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n// may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n// If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n// of that virtual hierarchy\n//\n// The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n// without having to scatter special cases all over the binding and templating code.\n\nimport {getDomData, setDomData} from './utils.domData';\nimport {emptyDomNode, setDomNodeChildren as utilsSetDomNodeChildren} from './utils.domNodes';\nimport {removeNode} from './utils.domNodeDisposal';\n\nconst START_COMMENT_REGEX = /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\nconst END_COMMENT_REGEX =   /^\\s*\\/ko\\s*$/;\nconst MATCHED_END_COMMENT_DATA_KEY = '__ko_matchedEndComment__';\nconst HTML_TAGS_WITH_OPTIONAL_CLOSING_CHILDREN = {ul: true, ol: true};\n\nexport const allowedBindings = {};\n\nexport const allowedVirtualElementBindings = allowedBindings;\n\nconst _isStartComment = (node) => (node.nodeType === 8) && START_COMMENT_REGEX.test(node.nodeValue);\nexport const hasBindingValue = _isStartComment;\n\nconst _isEndComment = (node) => (node.nodeType === 8) && END_COMMENT_REGEX.test(node.nodeValue);\n\nconst _isUnmatchedEndComment = (node) => _isEndComment(node) && !(getDomData(node, MATCHED_END_COMMENT_DATA_KEY));\n\nconst _getVirtualChildren = (startComment, allowUnbalanced) => {\n        let currentNode = startComment,\n            depth = 1,\n            children = [];\n        \n        while (currentNode = currentNode.nextSibling) {\n            if (_isEndComment(currentNode)) {\n                setDomData(currentNode, MATCHED_END_COMMENT_DATA_KEY, true);\n                depth--;\n                if (depth === 0) {\n                    return children;\n                }\n            }\n\n            children.push(currentNode);\n\n            if (_isStartComment(currentNode)) {\n                depth++;\n            }\n        }\n        if (!allowUnbalanced) {\n            throw new Error('Cannot find closing comment tag to match: ' + startComment.nodeValue);\n        }\n        return null;\n    };\n\nconst _getMatchingEndComment = (startComment, allowUnbalanced) => {\n    let allVirtualChildren = _getVirtualChildren(startComment, allowUnbalanced);\n    if (allVirtualChildren) {\n        if (allVirtualChildren.length > 0) {\n            return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n        }\n        return startComment.nextSibling;\n    }\n    return null; // Must have no matching end comment, and allowUnbalanced is true\n};\n\nconst _getUnbalancedChildTags = (node) => {\n    // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n    //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n    let childNode = node.firstChild, \n        captureRemaining = null;\n    \n    while (childNode) {\n        if (captureRemaining) {\n            // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n            captureRemaining.push(childNode);\n        } else if (_isStartComment(childNode)) {\n            let matchingEndComment = _getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n            if (matchingEndComment) {\n                childNode = matchingEndComment; // It's a balanced tag, so skip immediately to the end of this virtual set\n            } else {\n                captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n            }\n        } else if (_isEndComment(childNode)) {\n            captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n        }\n        childNode = childNode.nextSibling;\n    }\n    return captureRemaining;\n};\n\nexport const childNodes = (node) => _isStartComment(node) ? _getVirtualChildren(node) : node.childNodes;\n\nexport const emptyNode = (node) => {\n    if (!_isStartComment(node)) {\n        emptyDomNode(node);\n        return;\n    }\n    let virtualChildren = childNodes(node);\n    for (let i = 0, j = virtualChildren.length; i < j; i++) {\n        removeNode(virtualChildren[i]);\n    }\n};\n\nexport const setDomNodeChildren = (node, childNodes) => {\n    if (!_isStartComment(node)) {\n        utilsSetDomNodeChildren(node, childNodes);\n        return;\n    }\n    emptyNode(node);\n    let endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n    for (let i = 0, j = childNodes.length; i < j; i++) {\n        endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n    }\n};\n\nexport const prepend = (containerNode, nodeToPrepend) => {\n    let insertBeforeNode;\n\n    if (_isStartComment(containerNode)) {\n        // Start comments must always have a parent and at least one following sibling (the end comment)\n        insertBeforeNode = containerNode.nextSibling;\n        containerNode = containerNode.parentNode;\n    } else {\n        insertBeforeNode = containerNode.firstChild;\n    }\n\n    if (!insertBeforeNode) {\n        containerNode.appendChild(nodeToPrepend);\n    } else if (nodeToPrepend !== insertBeforeNode) {       // IE will sometimes crash if you try to insert a node before itself\n        containerNode.insertBefore(nodeToPrepend, insertBeforeNode);\n    }\n};\n\nexport const insertAfter = (containerNode, nodeToInsert, insertAfterNode) => {\n    if (!insertAfterNode) {\n        prepend(containerNode, nodeToInsert);\n        return;\n    }\n    // Children of start comments must always have a parent and at least one following sibling (the end comment)\n    let insertBeforeNode = insertAfterNode.nextSibling;\n\n    if (_isStartComment(containerNode)) {\n        containerNode = containerNode.parentNode;\n    }\n\n    if (!insertBeforeNode) {\n        containerNode.appendChild(nodeToInsert);\n    } else if (nodeToInsert !== insertBeforeNode) {       // IE will sometimes crash if you try to insert a node before itself\n        containerNode.insertBefore(nodeToInsert, insertBeforeNode);\n    }\n};\n\nexport const firstChild = (node) => {\n    if (!_isStartComment(node)) {\n        let _nodeFirstChild = node.firstChild; \n        if (_nodeFirstChild && _isEndComment(_nodeFirstChild)) {\n            throw new Error('Found invalid end comment, as the first child of ' + node);\n        }\n        return _nodeFirstChild;\n    } \n    let _nodeNextSibling = node.nextSibling;\n    if (!_nodeNextSibling|| _isEndComment(_nodeNextSibling)) {\n        return null;\n    }\n    return _nodeNextSibling;\n};\n\nexport const nextSibling = (node) => {\n    if (_isStartComment(node)) {\n        node = _getMatchingEndComment(node);\n    }\n    let _nodeNextSibling = node.nextSibling;\n    if (_nodeNextSibling && _isEndComment(_nodeNextSibling)) {\n        if (_isUnmatchedEndComment(_nodeNextSibling)) {\n            throw Error('Found end comment without a matching opening comment, as child of ' + node);\n        } \n        return null;\n    }\n    return _nodeNextSibling;\n};\n\nexport const virtualNodeBindingValue = (node) => START_COMMENT_REGEX.test(node.nodeValue) ? RegExp.$1 : null;\n\nexport const normaliseVirtualElementDomStructure = (elementVerified) => {\n    // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n    // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n    // that are direct descendants of <ul> into the preceding <li>)\n    const tagNameLower = elementVerified.tagName && elementVerified.tagName.toLowerCase();\n    if (tagNameLower && !HTML_TAGS_WITH_OPTIONAL_CLOSING_CHILDREN[tagNameLower]) {\n        return;\n    }\n    \n    // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n    // must be intended to appear *after* that child, so move them there.\n    let childNode = elementVerified.firstChild;\n    while (childNode) {\n        if (childNode.nodeType === 1) {\n            let unbalancedTags = _getUnbalancedChildTags(childNode);\n            if (unbalancedTags) {\n                // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n                let nodeToInsertBefore = childNode.nextSibling;\n                 for (let i = 0; i < unbalancedTags.length; i++) {\n                    if (nodeToInsertBefore) {\n                        elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n                    } else {\n                        elementVerified.appendChild(unbalancedTags[i]);\n                    }\n                }\n            }\n        }\n        childNode = childNode.nextSibling;\n    }\n};\n","// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\nexport const options = {\n    deferUpdates: false,\n    useOnlyNativeEvents: false,\n    foreachHidesDestroyed: false\n};\n","import {isObservable} from './subscribables/observableUtils';\r\nimport {cleanNode, removeNode} from './utils.domNodeDisposal';\r\nimport {firstChild, nextSibling, setDomNodeChildren as virtualElementsSetDomNodeChildren} from './virtualElements';\r\nimport {onError} from './onError';\r\n\r\n\r\n// For details on the pattern for changing node classes\r\n// see: https://github.com/knockout/knockout/issues/1597\r\nconst CSS_CLASSNAME_REGEX = /\\S+/g;\r\n\r\n// using a map for lookups is 33% faster than plain objects in Chrome 79, and only 5ish % slower in Firefox 72 \r\nconst KNOWN_EVENT_TYPES_BY_EVENT_NAME = new Map();\r\nfor (let eventName of ['keyup', 'keydown', 'keypress']) {\r\n    KNOWN_EVENT_TYPES_BY_EVENT_NAME.set(eventName, 'UIEvents');\r\n}\r\nfor (let eventName of ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave']) {\r\n    KNOWN_EVENT_TYPES_BY_EVENT_NAME.set(eventName, 'MouseEvents');\r\n}\r\n\r\nexport const canSetPrototype = ({__proto__: []} instanceof Array);\r\n    \r\nexport const hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport const objectForEach = (obj, action) => {\r\n    if (obj) {\r\n        for (let prop of Object.keys(obj)) {\r\n            action(prop, obj[prop]);\r\n        }\r\n    }\r\n};\r\n\r\nexport const extend = Object.assign;\r\n\r\nexport const setPrototypeOf = (obj, proto)  => {\r\n    obj.__proto__ = proto;\r\n    return obj;\r\n};\r\n\r\n// shortcut for if (canSetPrototype) ... \r\nexport const trySetPrototypeOf = canSetPrototype ? setPrototypeOf : () => null;\r\n\r\nexport const setPrototypeOfOrExtend = canSetPrototype ? setPrototypeOf : extend;\r\n\r\nexport const toggleObjectClassPropertyString = (obj, prop, classNames, shouldHaveClass) => {\r\n    // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\r\n    let currentClassNames = obj[prop].match(CSS_CLASSNAME_REGEX) || [];\r\n    for (let className of classNames.match(CSS_CLASSNAME_REGEX)) {\r\n        addOrRemoveItem(currentClassNames, className, shouldHaveClass);\r\n    }\r\n    obj[prop] = currentClassNames.join(' ');\r\n};\r\n\r\nexport const toggleDomNodeCssClass = (node, classNames, shouldHaveClass) => {\r\n    if (classNames) {\r\n        if (typeof node.classList === 'object') {\r\n            let addOrRemove = shouldHaveClass ? 'add' : 'remove';\r\n            for (let className of classNames.match(CSS_CLASSNAME_REGEX)) {\r\n                node.classList[addOrRemove](className);\r\n            }\r\n        } else if (typeof node.className['baseVal'] === 'string') {\r\n            // SVG tag .classNames is an SVGAnimatedString instance\r\n            toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\r\n        } else {\r\n            // node.className ought to be a string.\r\n            toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\r\n        }\r\n    }\r\n};\r\n\r\nexport const fieldsIncludedWithJsonPost = ['authenticity_token', /^__RequestVerificationToken(_.*)?$/];\r\n\r\nexport const arrayForEach = (array, action, actionOwner) => {\r\n    for (let i = 0, j = array.length; i < j; i++) {\r\n        action.call(actionOwner, array[i], i, array);\r\n    }\r\n};\r\n\r\nexport const arrayIndexOf = (array, item) => array.indexOf(item);\r\n\r\nexport const arrayFirst = function (array, predicate, predicateOwner) {\r\n    for (let i = 0, j = array.length; i < j; i++) {\r\n        if (predicate.call(predicateOwner, array[i], i, array)) {\r\n            return array[i];\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const arrayRemoveItem = (array, itemToRemove) => {\r\n    let index = (array && array.length) ? array.indexOf(itemToRemove) : -1;\r\n    if (index === 0) {\r\n        array.shift();\r\n    } else if (index > 0) {\r\n        array.splice(index, 1);\r\n    }\r\n};\r\n\r\nexport const arrayGetDistinctValues = (array) => {\r\n    let result = [],\r\n        nextIndex = 0;\r\n    if (array) {\r\n        for (let item of array) {\r\n            if (!result.includes(item)) {\r\n                result[nextIndex++] = item;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const arrayMap = (array, mapping, mappingOwner) => {\r\n    let result = [],\r\n        nextIndex = 0;\r\n    if (array) {\r\n        for (let i = 0, j = array.length; i < j; i++) {\r\n            result[nextIndex++] = mapping.call(mappingOwner, array[i], i);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const arrayFilter = (array, predicate, predicateOwner) => {\r\n    let result = [],\r\n        nextIndex = 0;\r\n    if (array) {\r\n        for (let i = 0, j = array.length; i < j; i++) {\r\n            if (predicate.call(predicateOwner, array[i], i)) {\r\n                result[nextIndex++] = array[i];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const arrayPushAll = (array, valuesToPush) => {\r\n    for (let i = 0, targetIndex = array.length, len = valuesToPush.length; i < len; i++, targetIndex++) {\r\n        array[targetIndex] = valuesToPush[i];\r\n    }\r\n    return array;\r\n};\r\n\r\nexport const peekObservable = (value) => isObservable(value) ? value.peek() : value;\r\n\r\nexport const addOrRemoveItem = (array, value, included) => {\r\n    let existingEntryIndex = peekObservable(array).indexOf(value);\r\n    if (existingEntryIndex < 0) {\r\n        if (included) {\r\n            array.push(value);\r\n        }\r\n    } else if (!included) {\r\n        array.splice(existingEntryIndex, 1);\r\n    }\r\n};\r\n\r\nexport const objectMap = (source, mapping, mappingOwner) => {\r\n    if (!source) {\r\n        return source;\r\n    }\r\n    let target = {};\r\n    for (let prop of Object.keys(source)) {\r\n        target[prop] = mapping.call(mappingOwner, source[prop], prop, source);\r\n    }\r\n    return target;\r\n};\r\n\r\nexport const moveCleanedNodesToContainerElement = (nodes) => {\r\n    // Ensure it's a real array, as we're about to reparent the nodes and\r\n    // we don't want the underlying collection to change while we're doing that.\r\n    let nodesArray = [...nodes],\r\n        templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document,\r\n        container = templateDocument.createElement('div');\r\n    \r\n    for (let i = 0, j = nodesArray.length; i < j; i++) {\r\n        container.appendChild(cleanNode(nodesArray[i]));\r\n    }\r\n    return container;\r\n};\r\n\r\nexport const cloneNodes = (nodesArray, shouldCleanNodes) => {\r\n    let newNodesArray = [];\r\n    for (let i = 0, j = nodesArray.length; i < j; i++) {\r\n        let clonedNode = nodesArray[i].cloneNode(true);\r\n        newNodesArray.push(shouldCleanNodes ? cleanNode(clonedNode) : clonedNode);\r\n    }\r\n    return newNodesArray;\r\n};\r\n\r\nexport const replaceDomNodes = (nodeToReplaceOrNodeArray, newNodesArray) => {\r\n    let nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\r\n    if (nodesToReplaceArray.length > 0) {\r\n        let insertionPoint = nodesToReplaceArray[0];\r\n        let parent = insertionPoint.parentNode;\r\n        for (let i = 0, j = newNodesArray.length; i < j; i++) {\r\n            parent.insertBefore(newNodesArray[i], insertionPoint);\r\n        }\r\n        for (let i = 0, j = nodesToReplaceArray.length; i < j; i++) {\r\n            removeNode(nodesToReplaceArray[i]);\r\n        }\r\n    }\r\n};\r\n\r\nexport const fixUpContinuousNodeArray = (continuousNodeArray, parentNode) => {\r\n    // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\r\n    // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\r\n    // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\r\n    // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\r\n    // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\r\n    //\r\n    // Rules:\r\n    //   [A] Any leading nodes that have been removed should be ignored\r\n    //       These most likely correspond to memoization nodes that were already removed during binding\r\n    //       See https://github.com/knockout/knockout/pull/440\r\n    //   [B] Any trailing nodes that have been remove should be ignored\r\n    //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\r\n    //       See https://github.com/knockout/knockout/pull/1903\r\n    //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\r\n    //       and include any nodes that have been inserted among the previous collection\r\n\r\n    if (continuousNodeArray.length) {\r\n        // The parent node can be a virtual element; so get the real parent node\r\n        parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\r\n\r\n        // Rule [A]\r\n        while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode) {\r\n            continuousNodeArray.splice(0, 1);\r\n        }\r\n        // Rule [B]\r\n        while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode) {\r\n            continuousNodeArray.length--;\r\n        }\r\n        // Rule [C]\r\n        if (continuousNodeArray.length > 1) {\r\n            let current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\r\n            // Replace with the actual new continuous node set\r\n            continuousNodeArray.length = 0;\r\n            while (current !== last) {\r\n                continuousNodeArray.push(current);\r\n                current = current.nextSibling;\r\n            }\r\n            continuousNodeArray.push(last);\r\n        }\r\n    }\r\n    return continuousNodeArray;\r\n};\r\n\r\nexport const setOptionNodeSelectionState = (optionNode, isSelected) => optionNode.selected = isSelected;\r\n\r\nexport const stringTrim = (string) => (string === null || string === undefined) ? '' : \r\n                                       string.trim ? string.trim() : string.toString().trim();\r\n\r\n/** @deprecated */\r\nexport const stringStartsWith = (string, startsWith) => (string || '').startsWith(startsWith);\r\n\r\nexport const domNodeIsContainedBy = (node, containedByNode) => {\r\n    if (node === containedByNode) {\r\n        return true;\r\n    }\r\n    if (node.nodeType === 11) {\r\n        return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\r\n    }\r\n    if (containedByNode.contains) {\r\n        return containedByNode.contains(node.nodeType !== 1 ? node.parentNode : node);\r\n    }\r\n    if (containedByNode.compareDocumentPosition) {\r\n        return (containedByNode.compareDocumentPosition(node) & 16) === 16;\r\n    }\r\n    while (node && node !== containedByNode) {\r\n        node = node.parentNode;\r\n    }\r\n    return !!node;\r\n};\r\n\r\nexport const domNodeIsAttachedToDocument = (node) => domNodeIsContainedBy(node, node.ownerDocument.documentElement);\r\n\r\nexport const anyDomNodeIsAttachedToDocument = (nodes) => !!arrayFirst(nodes, domNodeIsAttachedToDocument);\r\n\r\n// For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\r\n// Possible future optimization: If we know it's an element from an XHTML document (not HTML),\r\n// we don't need to do the .toLowerCase() as it will always be lower case anyway.\r\nexport const tagNameLower = (element) => {\r\n    let tagName = element && element.tagName;\r\n    return tagName && tagName.toLowerCase();\r\n};\r\n\r\nexport const catchFunctionErrors = (delegate) => {\r\n    return onError ? function() {\r\n            try {\r\n                // direct call is faster than delegate.apply, and the delegate itself is responsible of its 'this' \r\n                return delegate(...arguments);\r\n            } catch (e) {\r\n                onError && onError(e);\r\n                throw e;\r\n            }\r\n        } : delegate;\r\n};\r\n\r\nexport const setTimeoutWithCatchError = (handler, timeout) => setTimeout(catchFunctionErrors(handler), timeout);\r\n\r\nexport const deferError = (error) => {\r\n    setTimeout(() => {\r\n        onError && onError(error);\r\n        throw error;\r\n    }, 0);\r\n};\r\n\r\nexport const valuesArePrimitiveAndEqual = (PRIMITIVE_TYPES => (a, b) => {\r\n    let oldValueIsPrimitive = (a === null) || PRIMITIVE_TYPES[typeof a];\r\n    return oldValueIsPrimitive ? (a === b) : false;\r\n})({'undefined': 1, 'boolean': 1, 'number': 1, 'string': 1});\r\n\r\nexport const registerEventHandler = (element, eventType, handler) => {\r\n    if (typeof element.addEventListener === 'function') {\r\n        element.addEventListener(eventType, catchFunctionErrors(handler), false);\r\n        return;\r\n    }\r\n    throw new Error('Browser doesn\\'t support addEventListener');\r\n};\r\n\r\nexport const triggerEvent = (element, eventType) => {\r\n    if (!(element && element.nodeType)) {\r\n        throw new Error('element must be a DOM node when calling triggerEvent');\r\n    }\r\n\r\n    if (typeof element.dispatchEvent === 'function') {\r\n        let eventCategory = KNOWN_EVENT_TYPES_BY_EVENT_NAME.get(eventType) || 'HTMLEvents',\r\n            event = document.createEvent(eventCategory);\r\n        event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\r\n        element.dispatchEvent(event);\r\n        return;\r\n    }\r\n    throw new Error('The supplied element doesn\\'t support dispatchEvent');\r\n};\r\n\r\nexport const unwrapObservable = (value) => isObservable(value) ? value() : value;\r\n\r\nexport const setTextContent = (element, textContent) => {\r\n    let value = unwrapObservable(textContent);\r\n    if (value === null || value === undefined) {\r\n        value = '';\r\n    }\r\n\r\n    // We need there to be exactly one child: a text node.\r\n    // If there are no children, more than one, or if it's not a text node,\r\n    // we'll clear everything and create a single text node.\r\n    let innerTextNode = firstChild(element);\r\n    if (!innerTextNode || innerTextNode.nodeType !== 3 || nextSibling(innerTextNode)) {\r\n        virtualElementsSetDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\r\n    } else {\r\n        innerTextNode.data = value;\r\n    }\r\n};\r\n\r\n/** @deprecated - too trivial*/\r\nexport const setElementName = (element, name) => element.name = name;\r\n\r\nexport const range = function (min, max) {\r\n    let result = [];\r\n    for (let i = unwrapObservable(min), max = unwrapObservable(max); i <= max; i++) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n};\r\n\r\n/** @deprecated - modern ES has enough means to turn array-like structures into Arrays -> Array.from(), [...values] */\r\nexport const makeArray = (arrayLikeObject) => {\r\n    let result = [];\r\n    for (let i = 0, j = arrayLikeObject.length; i < j; i++) {\r\n        result[i] = arrayLikeObject[i];\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const createSymbolOrString = identifier => Symbol(identifier);\r\n\r\nexport const getFormFields = (form, fieldName) => {\r\n    let fields = [...form.getElementsByTagName('input'), ...form.getElementsByTagName('textarea')];\r\n    let isMatchingField = (typeof fieldName === 'string') ? (field) => field.name === fieldName\r\n                                                         : (field) => fieldName.test(field.name);\r\n        // Treat fieldName as regex or object containing predicate\r\n    let matches = [];\r\n    for (let i = fields.length - 1; i >= 0; i--) {\r\n        if (isMatchingField(fields[i])) {\r\n            matches.push(fields[i]);\r\n        }\r\n    }\r\n    return matches;\r\n};\r\n\r\n// replacer and space are optional\r\nexport const stringifyJson = (data, replacer, space) => JSON.stringify(unwrapObservable(data), replacer, space);\r\n\r\nexport const postJson = function(urlOrForm, data, options) {\r\n    options = options || {};\r\n    let params = options['params'] || {},\r\n        includeFields = options['includeFields'] || ko.utils.fieldsIncludedWithJsonPost,\r\n        url = urlOrForm;\r\n\r\n    // If we were given a form, use its 'action' URL and pick out any requested field values\r\n    if ((typeof urlOrForm === 'object') && (tagNameLower(urlOrForm) === 'form')) {\r\n        let originalForm = urlOrForm;\r\n        url = originalForm.action;\r\n        for (let i = includeFields.length - 1; i >= 0; i--) {\r\n            let fields = getFormFields(originalForm, includeFields[i]);\r\n            for (let j = fields.length - 1; j >= 0; j--) {\r\n                params[fields[j].name] = fields[j].value;\r\n            }\r\n        }\r\n    }\r\n    data = unwrapObservable(data);\r\n    let form = document.createElement('form');\r\n    form.style.display = 'none';\r\n    form.action = url;\r\n    form.method = 'post';\r\n    if (data) {\r\n        for (let key of Object.keys(data)) {\r\n            // Since 'data' this is a model object, we include all properties including those inherited from its prototype\r\n            let input = document.createElement('input');\r\n            input.type = 'hidden';\r\n            input.name = key;\r\n            input.value = stringifyJson(unwrapObservable(data[key]));\r\n            form.appendChild(input);\r\n        }\r\n    }\r\n    if (params) {\r\n        for (let key of Object.keys(params)) {\r\n            let input = document.createElement('input');\r\n            input.type = 'hidden';\r\n            input.name = key;\r\n            input.value = params[key];\r\n            form.appendChild(input);\r\n        }\r\n    }\r\n    document.body.appendChild(form);\r\n    options.submitter ? options.submitter(form) : form.submit();\r\n    setTimeout(() => form.parentNode.removeChild(form), 0);\r\n};\r\n","import {deferError} from './utils';\n\nconst _taskQueue = [];\n\nlet _taskQueueLength = 0,\n    _nextHandle = 1,\n    _nextIndexToProcess = 0;\n\nexport let _scheduler;\n\n// allows for overriding the default scheduler by assigning 'ko.tasks.scheduler = someCustomScheduler' (see ko.js)\nexport const _overrideScheduler = newScheduler => {\n    if (typeof newScheduler !== 'function') {\n        throw new Error('Scheduler must be a function');    \n    }\n    _scheduler = newScheduler;\n};\n\nconst _processTasks = () => {\n    if (!_taskQueueLength) {\n        return;\n    }\n    // Each mark represents the end of a logical group of tasks and the number of these groups is\n    // limited to prevent unchecked recursion.\n    let mark = _taskQueueLength, countMarks = 0;\n\n    // _nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n    for (let task; _nextIndexToProcess < _taskQueueLength;) {\n        if (!(task = _taskQueue[_nextIndexToProcess++])) {\n            continue;\n        }\n        if (_nextIndexToProcess > mark) {\n            if (++countMarks >= 5000) {\n                _nextIndexToProcess = _taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n                deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                break;\n            }\n            mark = _taskQueueLength;\n        }\n        try {\n            task();\n        } catch (ex) {\n            deferError(ex);\n        }\n    }\n};\n\nconst _scheduledProcess = () => {\n    _processTasks();\n    // Reset the queue\n    _nextIndexToProcess = 0;\n    _taskQueueLength = 0;\n    _taskQueue.length = 0;\n};\n\nif (typeof MutationObserver !== 'undefined') {\n    // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n    // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n    _scheduler = (callback => {\n        let elem = document.createElement('b'),\n            val = 1;\n        new MutationObserver(callback).observe(elem, {attributes: true});\n        return () => elem.title = (val = -val); // original classList.toggle is 60% slower in Chrome 85\n    })(_scheduledProcess);\n\n} else if (typeof process === 'object') {\n    // Running tests in NodeJS\n    _scheduler = (callback) => setTimeout(callback, 0);\n} else {\n    throw new Error('Browser is too old, does not know MutationObserver');\n}\n\nexport const scheduleTask = (func) => {\n    if (!_taskQueueLength) {\n        _scheduler(_scheduledProcess);\n    }\n    _taskQueue[_taskQueueLength++] = func;\n    return _nextHandle++;\n};\n\nexport const cancelTask = (handle) => {\n    let index = handle - (_nextHandle - _taskQueueLength);\n    if (index >= _nextIndexToProcess && index < _taskQueueLength) {\n        _taskQueue[index] = null;\n    }\n};\n\n// For testing only: reset the queue and return the previous queue length\nexport const resetForTesting = () => {\n    let length = _taskQueueLength - _nextIndexToProcess;\n    _nextIndexToProcess = _taskQueueLength = _taskQueue.length = 0;\n    return length;\n};\n\nexport const runEarly = _processTasks;\n","import {cancelTask, scheduleTask} from '../tasks';\n\nexport const deferredExtender = (target, options) => {\n    if (options !== true) {\n        throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.');\n    }\n    if (target._deferUpdates) {\n        return;\n    }\n    target._deferUpdates = true;\n    target.limit(callback => {\n        let ignoreUpdates = false,\n            handle;\n\n        return () => {\n            if (ignoreUpdates) {\n                return;\n            }\n            cancelTask(handle);\n            handle = scheduleTask(callback);\n\n            try {\n                ignoreUpdates = true;\n                target.notifySubscribers(undefined, 'dirty');\n            } finally {\n                ignoreUpdates = false;\n            }\n        };\n    });\n};\n","import {valuesArePrimitiveAndEqual} from '../utils';\r\nimport {deferredExtender} from './deferredExtender';\r\n\r\nexport const extenders = Object.create(null);\r\n\r\nextenders.deferred = deferredExtender;\r\n\r\nexport function applyExtenders(requestedExtenders) {\r\n    let target = this;\r\n    if (requestedExtenders) {\r\n        for (let key of Object.keys(requestedExtenders)) {\r\n            let extenderHandler = extenders[key];\r\n            if (typeof extenderHandler === 'function') {\r\n                target = extenderHandler(target, requestedExtenders[key]) || target;\r\n            } else {\r\n                console.warn('Missing extender: ' + key);\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\n\r\nconst _throttle = (callback, timeout) => {\r\n    let timeoutInstance;\r\n    return () => {\r\n        if (timeoutInstance) {\r\n            return;\r\n        }\r\n        timeoutInstance = setTimeout(() => {\r\n            timeoutInstance = undefined;\r\n            callback();\r\n        }, timeout);\r\n    };\r\n};\r\n\r\nconst _debounce = (callback, timeout) => {\r\n    let timeoutInstance;\r\n    return () => {\r\n        clearTimeout(timeoutInstance);\r\n        timeoutInstance = setTimeout(callback, timeout);\r\n    };\r\n};\r\n\r\nextenders.rateLimit = (target, options) => {\r\n    let timeout, \r\n        method, \r\n        limitFunction;\r\n\r\n    if (typeof options === 'number') {\r\n        timeout = options;\r\n    } else {\r\n        timeout = options.timeout;\r\n        method = options.method;\r\n    }\r\n\r\n    // rateLimit supersedes deferred updates\r\n    target._deferUpdates = false;\r\n\r\n    limitFunction = (typeof method === 'function') ? method : (method === 'notifyWhenChangesStop') ? _debounce : _throttle;\r\n    target.limit(callback => limitFunction(callback, timeout, options));\r\n};\r\n\r\nextenders.notify = (target, notifyWhen) => {\r\n    // null equalityComparer means to always notify\r\n    target.equalityComparer = (notifyWhen === 'always') ? null : valuesArePrimitiveAndEqual;\r\n};\r\n\r\nexport const defineThrottleExtender = (dependentObservable) => {\r\n    extenders.throttle = (target, timeout) => {\r\n        // Throttling means two things:\r\n\r\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\r\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\r\n        target.throttleEvaluation = timeout;\r\n\r\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\r\n        //     so the target cannot change value synchronously or faster than a certain rate\r\n        let writeTimeoutInstance = null;\r\n        return dependentObservable({\r\n            read: target,\r\n            write(value) {\r\n                clearTimeout(writeTimeoutInstance);\r\n                writeTimeoutInstance = setTimeout(() => target(value), timeout);\r\n            }\r\n        });\r\n    };\r\n};\r\n","import {addDisposeCallback, removeDisposeCallback} from '../utils.domNodeDisposal';\r\nimport {trySetPrototypeOf} from '../utils';\r\nimport {applyExtenders} from './extenders';\r\nimport {beginDependencyDetection, endDependencyDetection} from './dependencyDetection';\r\nimport {isObservable, IS_SUBSCRIBABLE} from './observableUtils';\r\n\r\nexport class Subscription {\r\n    \r\n    constructor(target, callback, disposeCallback) {\r\n        this._target = target;\r\n        this._callback = callback;\r\n        this._disposeCallback = disposeCallback;\r\n        this._isDisposed = false;\r\n        this._node = null;\r\n        this._domNodeDisposalCallback = null;\r\n    }\r\n    \r\n    dispose() {\r\n        if (this._isDisposed) {\r\n            return;\r\n        }\r\n        if (this._domNodeDisposalCallback) {\r\n            removeDisposeCallback(this._node, this._domNodeDisposalCallback);\r\n        }\r\n        this._isDisposed = true;\r\n        this._disposeCallback();\r\n        this._target = this._callback = this._disposeCallback = this._node = this._domNodeDisposalCallback = null;\r\n    }\r\n    \r\n    disposeWhenNodeIsRemoved(node) {\r\n        this._node = node;\r\n        addDisposeCallback(node, this._domNodeDisposalCallback = this.dispose.bind(this));\r\n    }\r\n}\r\n\r\nconst DEFAULT_EVENT = 'change';\r\n\r\n// Moved out of \"limit\" to avoid the extra closure\r\nfunction _limitNotifySubscribers(value, event) {\r\n    if (!event || event === DEFAULT_EVENT) {\r\n        this._limitChange(value);\r\n    } else if (event === 'beforeChange') {\r\n        this._limitBeforeChange(value);\r\n    } else {\r\n        this._origNotifySubscribers(value, event);\r\n    }\r\n}\r\n\r\nexport const SUBSCRIBABLE_PROTOTYPE = {\r\n    [IS_SUBSCRIBABLE]: true,\r\n    \r\n    init(instance) {\r\n        instance._subscriptions = {change: []}; // cleaner but slower would be { [DEFAULT_EVENT]: [] } \r\n        instance._versionNumber = 1;\r\n    },\r\n\r\n    subscribe(callback, callbackTarget, event) {\r\n        event = event || DEFAULT_EVENT;\r\n        let boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\r\n\r\n        let subscription = new Subscription(this, boundCallback, () => {\r\n            let _subscriptions = this._subscriptions[event],\r\n                foundIndex = _subscriptions.indexOf(subscription);\r\n            if (foundIndex >= 0) {\r\n                _subscriptions.splice(foundIndex, 1);\r\n            }\r\n            if (this.afterSubscriptionRemove) {\r\n                this.afterSubscriptionRemove(event);\r\n            }\r\n        });\r\n\r\n        if (this.beforeSubscriptionAdd) {\r\n            this.beforeSubscriptionAdd(event);\r\n        }\r\n        let _subscriptions = this._subscriptions,\r\n            existingSubscriptionsForEvent = _subscriptions[event]; \r\n        if (existingSubscriptionsForEvent) {\r\n            existingSubscriptionsForEvent.push(subscription);\r\n        } else {\r\n            _subscriptions[event] = [subscription];\r\n        }\r\n        return subscription;\r\n    },\r\n\r\n    notifySubscribers(valueToNotify, event) {\r\n        event = event || DEFAULT_EVENT;\r\n        if (event === DEFAULT_EVENT) {\r\n            this.updateVersion();\r\n        }\r\n        if (!this.hasSubscriptionsForEvent(event)) {\r\n            return;\r\n        }\r\n        let subs = event === DEFAULT_EVENT && this._changeSubscriptions || this._subscriptions[event].slice();\r\n        try {\r\n            beginDependencyDetection(); // Begin suppressing dependency detection (by setting the top frame to undefined)\r\n            for (let i = 0, subscription; subscription = subs[i]; ++i) {\r\n                // In case a subscription was disposed during the arrayForEach cycle, check\r\n                // for isDisposed on each subscription before invoking its callback\r\n                if (!subscription._isDisposed) {\r\n                    subscription._callback(valueToNotify);\r\n                }\r\n            }\r\n        } finally {\r\n            endDependencyDetection(); // End suppressing dependency detection\r\n        }\r\n    },\r\n\r\n    getVersion() {\r\n        return this._versionNumber;\r\n    },\r\n\r\n    hasChanged(versionToCheck) {\r\n        // Do NOT shortcut to this._versionNumber!\r\n        return this.getVersion() !== versionToCheck;\r\n    },\r\n\r\n    updateVersion() {\r\n        ++this._versionNumber;\r\n    },\r\n\r\n    limit(limitFunction) {\r\n        let selfIsObservable = isObservable(this),\r\n            ignoreBeforeChange, \r\n            notifyNextChange, \r\n            previousValue, \r\n            pendingValue, \r\n            didUpdate,\r\n            beforeChange = 'beforeChange';\r\n\r\n        if (!this._origNotifySubscribers) {\r\n            this._origNotifySubscribers = this.notifySubscribers;\r\n            this.notifySubscribers = _limitNotifySubscribers;\r\n        }\r\n\r\n        let finish = limitFunction(() => {\r\n            this._notificationIsPending = false;\r\n\r\n            // If an observable provided a reference to itself, access it to get the latest value.\r\n            // This allows computed observables to delay calculating their value until needed.\r\n            if (selfIsObservable && pendingValue === this) {\r\n                pendingValue = this._evalIfChanged ? this._evalIfChanged() : this();\r\n            }\r\n            let shouldNotify = notifyNextChange || (didUpdate && (!this.equalityComparer || !this.equalityComparer(previousValue, pendingValue)));\r\n\r\n            didUpdate = notifyNextChange = ignoreBeforeChange = false;\r\n\r\n            if (shouldNotify) {\r\n                this._origNotifySubscribers(previousValue = pendingValue);\r\n            }\r\n        });\r\n\r\n        this._limitChange = (value, isDirty) => {\r\n            if (!isDirty || !this._notificationIsPending) {\r\n                didUpdate = !isDirty;\r\n            }\r\n            this._changeSubscriptions = this._subscriptions[DEFAULT_EVENT].slice();\r\n            this._notificationIsPending = ignoreBeforeChange = true;\r\n            pendingValue = value;\r\n            finish();\r\n        };\r\n        this._limitBeforeChange = (value) => {\r\n            if (!ignoreBeforeChange) {\r\n                previousValue = value;\r\n                this._origNotifySubscribers(value, beforeChange);\r\n            }\r\n        };\r\n        this._recordUpdate = () => didUpdate = true;\r\n\r\n        this._notifyNextChangeIfValueIsDifferent = () => {\r\n            let equalityComparer = this.equalityComparer;\r\n            if (!equalityComparer || !equalityComparer(previousValue, this.peek(true /*evaluate*/))) {\r\n                notifyNextChange = true;\r\n            }\r\n        };\r\n    },\r\n\r\n    hasSubscriptionsForEvent(event) {\r\n        let subscriptions = this._subscriptions[event]; \r\n        return subscriptions && subscriptions.length;\r\n    },\r\n\r\n    getSubscriptionsCount(event) {\r\n        let event2subscriptions = this._subscriptions;\r\n        if (event) {\r\n            let subscriptions = event2subscriptions[event]; \r\n            return subscriptions ? subscriptions.length : 0;\r\n        }\r\n        let total = 0;\r\n        if (event2subscriptions) {\r\n            for (let eventName of Object.keys(event2subscriptions)) {\r\n                let subscriptions = event2subscriptions[eventName];\r\n                if (eventName !== 'dirty') {\r\n                    total += subscriptions.length;\r\n                }\r\n            }\r\n        }\r\n        return total;\r\n    },\r\n\r\n    // /** @deprecated */\r\n    // isDifferent(oldValue, newValue) {\r\n    //     return !this.equalityComparer || !this.equalityComparer(oldValue, newValue);\r\n    // },\r\n\r\n    toString() {\r\n      return '[object Object]';\r\n    },\r\n\r\n    extend: applyExtenders\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport const Subscribable = function () {\r\n    SUBSCRIBABLE_PROTOTYPE.init(this);\r\n};\r\n\r\nSubscribable.prototype = SUBSCRIBABLE_PROTOTYPE;\r\nSubscribable.fn = SUBSCRIBABLE_PROTOTYPE;\r\n\r\n// For browsers that support proto assignment, we overwrite the prototype of each\r\n// observable instance. Since observables are functions, we need Function.prototype\r\n// to still be in the prototype chain.\r\ntrySetPrototypeOf(SUBSCRIBABLE_PROTOTYPE, Function.prototype);\r\n","import {options as koOptions} from '../options';\nimport {registerDependency, beginDependencyDetection, endDependencyDetection} from './dependencyDetection';\nimport {deferredExtender} from './deferredExtender';\nimport {SUBSCRIBABLE_PROTOTYPE} from './subscribable';\nimport {removeDisposeCallback, addDisposeCallback} from '../utils.domNodeDisposal';\nimport {setPrototypeOfOrExtend, trySetPrototypeOf, domNodeIsAttachedToDocument, valuesArePrimitiveAndEqual, canSetPrototype} from '../utils';\nimport {IS_COMPUTED, IS_OBSERVABLE, IS_PURE_COMPUTED} from './observableUtils';\nimport {defineThrottleExtender} from './extenders';\n\nconst COMPUTED_STATE = Symbol('_state');\n\nexport function computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\n        // Single-parameter syntax - everything is on this \"options\" param\n        options = evaluatorFunctionOrOptions;\n    } else {\n        // Multi-parameter syntax - construct the options according to the params passed\n        options = options || {};\n        if (evaluatorFunctionOrOptions) {\n            options.read = evaluatorFunctionOrOptions;\n        }\n    }\n    if (typeof options.read !== 'function') {\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\n    }\n\n    let writeFunction = options.write,\n        state = {\n            latestValue: undefined,\n            isStale: true,\n            isDirty: true,\n            isBeingEvaluated: false,\n            suppressDisposalUntilDisposeWhenReturnsFalse: false,\n            isDisposed: false,\n            pure: false,\n            isSleeping: false,\n            readFunction: options.read,\n            evaluatorFunctionTarget: evaluatorFunctionTarget || options.owner,\n            disposeWhenNodeIsRemoved: options.disposeWhenNodeIsRemoved || options.disposeWhenNodeIsRemoved || null,\n            disposeWhen: options.disposeWhen,\n            domNodeDisposalCallback: null,\n            dependencyTracking: {},\n            dependenciesCount: 0,\n            evaluationTimeoutInstance: null\n        };\n\n    function _computedObservable() {\n        if (arguments.length) {\n            if (typeof writeFunction === 'function') {\n                // Writing a value\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n                return this; // Permits chained assignments\n            } \n            throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n        } \n        // Reading the value\n        if (!state.isDisposed) {\n            registerDependency(_computedObservable);\n        }\n        if (state.isDirty || (state.isSleeping && _computedObservable.haveDependenciesChanged())) {\n            _computedObservable.evaluateImmediate();\n        }\n        return state.latestValue;\n    }\n\n    _computedObservable[COMPUTED_STATE] = state;\n    _computedObservable.hasWriteFunction = typeof writeFunction === 'function';\n    \n    // Inherit from './subscribable.js'\n    if (!canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        Object.assign(_computedObservable, SUBSCRIBABLE_PROTOTYPE);\n    }\n    SUBSCRIBABLE_PROTOTYPE.init(_computedObservable);\n\n    // Inherit from './computed.js'\n    setPrototypeOfOrExtend(_computedObservable, COMPUTED_PROTOTYPE);\n\n    if (options.pure) {\n        _computedObservable[IS_PURE_COMPUTED] = true;\n        state.pure = true;\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n        Object.assign(_computedObservable, pureComputedOverrides);\n    } else if (options.deferEvaluation) {\n        Object.assign(_computedObservable, deferEvaluationOverrides);\n    }\n\n    if (koOptions.deferUpdates) {\n        deferredExtender(_computedObservable, true);\n    }\n\n    if (DEBUG) {\n        // #1731 - Aid debugging by exposing the computed's options\n        _computedObservable._options = options;\n    }\n\n    let __disposeWhenNodeIsRemoved = state.disposeWhenNodeIsRemoved; \n    \n    if (__disposeWhenNodeIsRemoved) {\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n        // be documented or used by application code, as it's likely to change in a future version of KO.\n        if (!__disposeWhenNodeIsRemoved.nodeType) {\n            state.disposeWhenNodeIsRemoved = null;\n        }\n    }\n\n    // Evaluate, unless sleeping or deferEvaluation is true\n    if (!state.isSleeping && !options.deferEvaluation) {\n        _computedObservable.evaluateImmediate();\n    }\n\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n    __disposeWhenNodeIsRemoved = state.disposeWhenNodeIsRemoved;\n    if (__disposeWhenNodeIsRemoved && _computedObservable.isActive()) {\n        addDisposeCallback(__disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = () => _computedObservable.dispose());\n    }\n\n    return _computedObservable;\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n    let computedObservable = this.computedObservable,\n        state = computedObservable[COMPUTED_STATE];\n    \n    if (!state.isDisposed) {\n        let __disposalCandidate = this.disposalCount && this.disposalCandidates[id];\n        if (__disposalCandidate) {\n            // Don't want to dispose this subscription, as it's still being used\n            computedObservable.addDependencyTracking(id, subscribable, __disposalCandidate);\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n            --this.disposalCount;\n        } else if (!state.dependencyTracking[id]) {\n            // Brand new subscription - add it\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? {_target: subscribable} : computedObservable.subscribeToDependency(subscribable));\n        }\n        // If the observable we've accessed has a pending notification, ensure we get notified of the actual final value (bypass equality checks)\n        if (subscribable._notificationIsPending) {\n            subscribable._notifyNextChangeIfValueIsDifferent();\n        }\n    }\n}\n\nconst COMPUTED_PROTOTYPE = {\n    [IS_OBSERVABLE]: true,\n    [IS_COMPUTED]: true,\n    equalityComparer: valuesArePrimitiveAndEqual,\n    \n    getDependenciesCount() {\n        return this[COMPUTED_STATE].dependenciesCount;\n    },\n    getDependencies() {\n        let dependencyTracking = this[COMPUTED_STATE].dependencyTracking,\n            dependentObservables = [];\n        \n        if (dependencyTracking) {\n            for (let id of Object.keys(dependencyTracking)) {\n                let dependency = dependencyTracking[id];\n                dependentObservables[dependency._order] = dependency._target;\n            }\n        }\n        return dependentObservables;\n    },\n    hasAncestorDependency(obs) {\n        let computedState = this[COMPUTED_STATE];\n        if (!computedState.dependenciesCount) {\n            return false;\n        }\n        /**\n         * Given how often this method is called and regarding its recursive nature,\n         * let's forget DRY for a sec & pull a copy of `getDependencies` right here..\n         */\n        let dependencyTracking = computedState.dependencyTracking;\n        if (!dependencyTracking) {\n            return false;\n        }\n        let dependentObservables = [];\n        \n        for (let id of Object.keys(dependencyTracking)) {\n            let dependency = dependencyTracking[id];\n            dependentObservables[dependency._order] = dependency._target;\n        }\n        return dependentObservables.includes(obs) || !!dependentObservables.find(dep => dep.hasAncestorDependency && dep.hasAncestorDependency(obs));\n    },\n    addDependencyTracking(id, target, trackingObj) {\n        let computedState = this[COMPUTED_STATE]; \n        if (computedState.pure && target === this) {\n            throw Error(\"A 'pure' computed must not be called recursively\");\n        }\n        computedState.dependencyTracking[id] = trackingObj;\n        trackingObj._order = computedState.dependenciesCount++;\n        trackingObj._version = target.getVersion();\n    },\n    haveDependenciesChanged() {\n        let dependencyTracking = this[COMPUTED_STATE].dependencyTracking;\n        if (dependencyTracking) {\n            let hasEvalDelayed = this._evalDelayed;\n            for (let id of Object.keys(dependencyTracking)) {\n                let dependency = dependencyTracking[id],\n                    depTarget = dependency._target;\n                if ((hasEvalDelayed && depTarget._notificationIsPending) || depTarget.hasChanged(dependency._version)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n    markDirty() {\n        let __evalDelayed = this._evalDelayed;\n        // Process \"dirty\" events if we can handle delayed notifications\n        if (__evalDelayed && !this[COMPUTED_STATE].isBeingEvaluated) {\n            __evalDelayed(false /*isChange*/);\n        }\n    },\n    isActive() {\n        let state = this[COMPUTED_STATE];\n        return state.isDirty || state.dependenciesCount > 0;\n    },\n    respondToChange() {\n        // Ignore \"change\" events if we've already scheduled a delayed notification\n        if (!this._notificationIsPending) {\n            this.evaluatePossiblyAsync();\n            return;\n        }\n        let computedState = this[COMPUTED_STATE];\n        if (computedState.isDirty) {\n            computedState.isStale = true;\n        }\n    },\n    subscribeToDependency(target) {\n        if (target._deferUpdates) {\n            let dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n                changeSub = target.subscribe(this.respondToChange, this);\n            return {\n                _target: target,\n                dispose: () => {\n                    dirtySub.dispose();\n                    changeSub.dispose();\n                }\n            };\n        }\n        return target.subscribe(this.evaluatePossiblyAsync, this);\n    },\n    evaluatePossiblyAsync() {\n        let computedObservable = this,\n            throttleEvaluationTimeout = computedObservable.throttleEvaluation;\n        \n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n            let computedState = this[COMPUTED_STATE]; \n            clearTimeout(computedState.evaluationTimeoutInstance);\n            computedState.evaluationTimeoutInstance = setTimeout(() => computedObservable.evaluateImmediate(true /*notifyChange*/), throttleEvaluationTimeout);\n        } else if (computedObservable._evalDelayed) {\n            computedObservable._evalDelayed(true /*isChange*/);\n        } else {\n            computedObservable.evaluateImmediate(true /*notifyChange*/);\n        }\n    },\n    evaluateImmediate(notifyChange) {\n        let computedObservable = this,\n            state = computedObservable[COMPUTED_STATE],\n            disposeWhen = state.disposeWhen,\n            changed = false;\n\n        if (state.isBeingEvaluated) {\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n            return;\n        }\n\n        // Do not evaluate (and possibly capture new dependencies) if disposed\n        if (state.isDisposed) {\n            return;\n        }\n\n        if (state.disposeWhenNodeIsRemoved && !domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n                computedObservable.dispose();\n                return;\n            }\n        } else {\n            // It just did return false, so we can stop suppressing now\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n        }\n\n        state.isBeingEvaluated = true;\n        try {\n            changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n        } finally {\n            state.isBeingEvaluated = false;\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadWithDependencyDetection(notifyChange) {  // eslint-disable-line camelcase\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n        let computedObservable = this,\n            state = computedObservable[COMPUTED_STATE],\n            changed = false;\n\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n        // Then, during evaluation, we cross off any that are in fact still being used.\n        let isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n            dependencyDetectionContext = {\n                computedObservable,\n                disposalCandidates: state.dependencyTracking,\n                disposalCount: state.dependenciesCount\n            };\n\n        beginDependencyDetection({\n            callbackTarget: dependencyDetectionContext,\n            callback: computedBeginDependencyDetectionCallback,\n            computed: computedObservable,\n            isInitial\n        });\n\n        // TODO check: Map might be more efficient (at least in Chrome, how about firefox?)\n        state.dependencyTracking = {};\n        state.dependenciesCount = 0;\n\n        let newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n        if (!state.dependenciesCount) {\n            computedObservable.dispose();\n            changed = true; // When evaluation causes a disposal, make sure all dependent computeds get notified so they'll see the new state\n        } else {\n            let equalityComparer = computedObservable.equalityComparer;\n            changed = !equalityComparer || !equalityComparer(state.latestValue, newValue);\n        }\n\n        if (changed) {\n            if (!state.isSleeping) {\n                computedObservable.notifySubscribers(state.latestValue, \"beforeChange\");\n            } else {\n                computedObservable.updateVersion();\n            }\n\n            state.latestValue = newValue;\n            if (DEBUG) {\n                computedObservable._latestValue = newValue;\n            }\n\n            computedObservable.notifySubscribers(state.latestValue, \"spectate\");\n\n            if (!state.isSleeping && notifyChange) {\n                computedObservable.notifySubscribers(state.latestValue);\n            }\n            if (computedObservable._recordUpdate) {\n                computedObservable._recordUpdate();\n            }\n        }\n\n        if (isInitial) {\n            computedObservable.notifySubscribers(state.latestValue, \"awake\");\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext) {  // eslint-disable-line camelcase\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n        // overhead of computed evaluation (on V8 at least).\n\n        try {\n            let readFunction = state.readFunction;\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n        } finally {\n            endDependencyDetection();\n\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n                for (let entryToDispose of Object.values(dependencyDetectionContext.disposalCandidates)) {\n                    if (entryToDispose && entryToDispose.dispose) {\n                        entryToDispose.dispose();\n                    }\n                }\n            }\n\n            state.isStale = state.isDirty = false;\n        }\n    },\n    peek(evaluate) {\n        // By default, peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n        // Pass in true to evaluate if needed.\n        let state = this[COMPUTED_STATE];\n        if ((state.isDirty && (evaluate || !state.dependenciesCount)) || (state.isSleeping && this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return state.latestValue;\n    },\n    limit(limitFunction) {\n        // Override the limit function with one that delays evaluation as well\n        SUBSCRIBABLE_PROTOTYPE.limit.call(this, limitFunction);\n        this._evalIfChanged = () => {\n            let computedState = this[COMPUTED_STATE];\n            if (!computedState.isSleeping) {\n                if (computedState.isStale) {\n                    this.evaluateImmediate();\n                } else {\n                    computedState.isDirty = false;\n                }\n            }\n            return computedState.latestValue;\n        };\n        this._evalDelayed = (isChange) => {\n            let computedState = this[COMPUTED_STATE];\n            this._limitBeforeChange(computedState.latestValue);\n\n            // Mark as dirty\n            computedState.isDirty = true;\n            if (isChange) {\n                computedState.isStale = true;\n            }\n            // Pass the observable to the \"limit\" code, which will evaluate it when\n            // it's time to do the notification.\n            this._limitChange(this, !isChange /* isDirty */);\n        };\n    },\n    dispose() {\n        let state = this[COMPUTED_STATE];\n        if (!state.isSleeping) {\n            let __depTracking = state.dependencyTracking;\n            if (__depTracking) {\n                for (let id of Object.keys(__depTracking)) {\n                    let dep = __depTracking[id];\n                    if (dep.dispose) {\n                        dep.dispose();\n                    }\n                }\n            }\n        }\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n            removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n        }\n        state.dependencyTracking = undefined;\n        state.dependenciesCount = 0;\n        state.isDisposed = true;\n        state.isStale = false;\n        state.isDirty = false;\n        state.isSleeping = false;\n        state.disposeWhenNodeIsRemoved = undefined;\n        state.disposeWhen = undefined;\n        state.readFunction = undefined;\n        if (!this.hasWriteFunction) {\n            state.evaluatorFunctionTarget = undefined;\n        }\n    }\n};\n\nconst pureComputedOverrides = {\n    beforeSubscriptionAdd(event) {\n        // If asleep, wake up the computed by subscribing to any dependencies.\n        let computedObservable = this,\n            state = computedObservable[COMPUTED_STATE];\n        if (!state.isDisposed && state.isSleeping && event === 'change') {\n            state.isSleeping = false;\n            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n                state.dependencyTracking = null;\n                state.dependenciesCount = 0;\n                if (computedObservable.evaluateImmediate()) {\n                    computedObservable.updateVersion();\n                }\n            } else {\n                // First put the dependencies in order\n                let dependenciesOrder = [],\n                    __dependencyTracking = state.dependencyTracking;\n                \n                if (__dependencyTracking) {\n                    for (let id of Object.keys(__dependencyTracking)) {\n                        dependenciesOrder[__dependencyTracking[id]._order] = id;\n                    }\n                }\n                \n                // Next, subscribe to each one\n                dependenciesOrder.forEach((id, order) => {\n                    let dependency = __dependencyTracking[id],\n                        subscription = computedObservable.subscribeToDependency(dependency._target);\n                    subscription._order = order;\n                    subscription._version = dependency._version;\n                    __dependencyTracking[id] = subscription;\n                });\n                \n                // Waking dependencies may have triggered effects\n                if (computedObservable.haveDependenciesChanged()) {\n                    if (computedObservable.evaluateImmediate()) {\n                        computedObservable.updateVersion();\n                    }\n                }\n            }\n\n            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n                computedObservable.notifySubscribers(state.latestValue, \"awake\");\n            }\n        }\n    },\n    afterSubscriptionRemove(event) {\n        let state = this[COMPUTED_STATE];\n        if (!state.isDisposed && event === 'change' && !this.hasSubscriptionsForEvent('change')) {\n            let __dependencyTracking = state.dependencyTracking;\n            if (__dependencyTracking) {\n                for (let id of Object.keys(__dependencyTracking)) {\n                    let dependency = __dependencyTracking[id];\n                    if (dependency.dispose) {\n                        __dependencyTracking[id] = {\n                            _target: dependency._target,\n                            _order: dependency._order,\n                            _version: dependency._version\n                        };\n                        dependency.dispose();\n                    }\n                }\n            }\n            state.isSleeping = true;\n            this.notifySubscribers(undefined, \"asleep\");\n        }\n    },\n    getVersion() {\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\n        // simply return the version number. Instead, we check if any of the dependencies have\n        // changed and conditionally re-evaluate the computed observable.\n        let state = this[COMPUTED_STATE];\n        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return SUBSCRIBABLE_PROTOTYPE.getVersion.call(this);\n    }\n};\n\nconst deferEvaluationOverrides = {\n    beforeSubscriptionAdd(event) {\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n        if (event === 'change' || event === 'beforeChange') {\n            this.peek();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\ntrySetPrototypeOf(COMPUTED_PROTOTYPE, SUBSCRIBABLE_PROTOTYPE);\n\n// const PROTO_PROPERTY = ko.observable.protoProperty; // already defined in observable.js \n\ncomputed.fn = COMPUTED_PROTOTYPE;\n\nexport const dependentObservable = computed;\n\ndefineThrottleExtender(dependentObservable);\n\nexport const pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n    if (typeof evaluatorFunctionOrOptions === 'function') {\n        return computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {pure: true});\n    } \n    evaluatorFunctionOrOptions = Object.assign({}, evaluatorFunctionOrOptions); // make a copy of the parameter object\n    evaluatorFunctionOrOptions.pure = true;\n    return computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n};\n","\nexport const bindingHandlers = Object.create(null);\n\n// Use an overridable method for retrieving binding handlers so that plugins may support dynamically created handlers\nexport let getBindingHandler = bindingKey => bindingHandlers[bindingKey];\n\nexport const _overrideGetBindingHandler = (fn) => getBindingHandler = fn;\n","import {isObservable, isWritableObservable} from '../subscribables/observableUtils';\nimport {getBindingHandler} from './bindingHandlers';\n\nconst JS_RESERVED_WORDS = {'true': true, 'false': true, 'null': true, 'undefined': true};\n\nconst PROPERTY_WRITERS_BINDING_KEY = '_ko_property_writers';\n\n/**\n * Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n * This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n * This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n * */\nconst JS_ASSIGNMENT_TARGET = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+]))$/i;\n\n// The following regular expressions will be used to split an object-literal string into tokens\n\n/** These characters have special meaning to the parser and must not appear in the middle of a token, except as part of a string. */\nconst SPECIALS = ',\"\\'`{}()/:[\\\\]';\n\n/** The actual regular expression by or-ing the following regex strings. The order is important. */\nconst BINDING_TOKEN = RegExp([\n    // These match strings, either with double quotes, single quotes, or backticks\n    '\"(?:\\\\\\\\.|[^\"])*\"',\n    \"'(?:\\\\\\\\.|[^'])*'\",\n    \"`(?:\\\\\\\\.|[^`])*`\",\n    // Match C style comments\n    \"/\\\\*(?:[^*]|\\\\*+[^*/])*\\\\*+/\",\n    // Match C++ style comments\n    \"//.*\\n\",\n    // Match a regular expression (text enclosed by slashes), but will also match sets of divisions\n    // as a regular expression (this is handled by the parsing loop below).\n    '/(?:\\\\\\\\.|[^/])+/\\\\w*',\n    // Match text (at least two characters) that does not contain any of the above special characters,\n    // although some of the special characters are allowed to start it (all but the colon and comma).\n    // The text can contain spaces, but leading or trailing spaces are skipped.\n    '[^\\\\s:,/][^' + SPECIALS + ']*[^\\\\s' + SPECIALS + ']',\n    // Match any non-space character not matched already. This will match colons and commas, since they're\n    // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n    // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n    '[^\\\\s]'\n].join('|'), 'g');\n\n// Match end of previous token to determine whether a slash is a division or regex.\nconst DIVISION_LOOK_BEHIND = /[\\])\"'A-Za-z0-9_$]+$/;\nconst KEYWORD_REGEX_LOOK_BEHIND = {'in': 1, 'return': 1, 'typeof': 1};\n\nexport const parseObjectLiteral = (objectLiteralString) => {\n    // Trim leading and trailing spaces from the string\n    let str = objectLiteralString ? objectLiteralString.trim() : '';\n\n    // Trim braces '{' surrounding the whole object literal\n    if (str && str[0] === '{') {\n        str = str.slice(1, -1);\n    }\n\n    // Add a newline to correctly match a C++ style comment at the end of the string and\n    // add a comma so that we don't need a separate code block to deal with the last item\n    str += \"\\n,\";\n\n    // Split into tokens\n    let result = [],\n        tokens = str.match(BINDING_TOKEN);\n\n    if (tokens.length > 1) {\n        let depth = 0;\n        for (let i = 0, tok, key = null, values = []; tok = tokens[i]; ++i) {\n            let c = tok.charCodeAt(0);\n            // A comma signals the end of a key/value pair if depth is zero\n            if (c === 44) { // \",\"\n                if (depth <= 0) {\n                    result.push((key && values.length) ? {key, value: values.join('')} :\n                        {unknown: key || values.join('')});\n                    key = 0;\n                    depth = 0;\n                    values = [];\n                    continue;\n                }\n                // Simply skip the colon that separates the name and value\n            } else if (c === 58) { // \":\"\n                if (!depth && !key && values.length === 1) {\n                    key = values.pop();\n                    continue;\n                }\n                // Comments: skip them\n            } else if (c === 47 && tok.length > 1 && (tok.charCodeAt(1) === 47 || tok.charCodeAt(1) === 42)) {  // \"//\" or \"/*\"\n                continue;\n                // A set of slashes is initially matched as a regular expression, but could be division\n            } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n                // Look at the end of the previous token to determine if the slash is actually division\n                let match = tokens[i - 1].match(DIVISION_LOOK_BEHIND);\n                if (match && !KEYWORD_REGEX_LOOK_BEHIND[match[0]]) {\n                    // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n                    str = str.substr(str.indexOf(tok) + 1);\n                    tokens = str.match(BINDING_TOKEN);\n                    i = -1;\n                    // Continue with just the slash\n                    tok = '/';\n                }\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n            } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n                ++depth;\n            } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n                --depth;\n                // The key will be the first token; if it's a string, trim the quotes\n            } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n                tok = tok.slice(1, -1);\n            }\n            values.push(tok);\n        }\n        if (depth > 0) {\n            throw Error(\"Unbalanced parentheses, braces, or brackets\");\n        }\n    }\n    return result;\n};\n\n// Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\nexport const twoWayBindings = {};\n\nexport const preProcessBindings = (bindingsStringOrKeyValueArray, bindingOptions) => {\n    bindingOptions = bindingOptions || {};\n\n    const _processKeyValue = (key, val) => {\n        const _callPreprocessHook = (obj) => (obj && obj.preprocess) ? (val = obj.preprocess(val, key, _processKeyValue)) : true;\n\n        if (!bindingParams) {\n            if (!_callPreprocessHook(getBindingHandler(key))) {\n                return;\n            }\n\n            let twoWayBindingsValue = twoWayBindings[key],\n                match = twoWayBindingsValue && !JS_RESERVED_WORDS[val] && val.match(JS_ASSIGNMENT_TARGET);\n            if (match) {\n                let writableVal = match[1] ? ('Object(' + match[1] + ')' + match[2]) : val;\n                // For two-way bindings, provide a write method in case the value\n                // isn't a writable observable.\n                let writeKey = typeof twoWayBindingsValue === 'string' ? twoWayBindingsValue : key;\n                propertyAccessorResultStrings.push(\"'\" + writeKey + \"':function(_z){\" + writableVal + \"=_z}\");\n            }\n        }\n        // Values are wrapped in a function so that each value can be accessed independently\n        if (makeValueAccessors) {\n            val = 'function(){return ' + val + ' }';\n        }\n        resultStrings.push(\"'\" + key + \"':\" + val);\n    };\n\n    let resultStrings = [],\n        propertyAccessorResultStrings = [],\n        makeValueAccessors = bindingOptions['valueAccessors'],\n        bindingParams = bindingOptions['bindingParams'],\n        keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n            parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\n    for (let keyValue of keyValueArray) {\n        _processKeyValue(keyValue.key || keyValue.unknown, keyValue.value);\n    }\n\n    if (propertyAccessorResultStrings.length) {\n        _processKeyValue(PROPERTY_WRITERS_BINDING_KEY, \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n    }\n\n    return resultStrings.join(\",\");\n};\n\nexport const bindingRewriteValidators = [];\n\nexport const keyValueArrayContainsKey = (keyValueArray, key) => {\n        // unfortunately !!keyValueArray.find(keyVal => keyVal.key === key)` is 10x slower in Chrome \n        for (let i = 0, len = keyValueArray.length; i < len; i++) {\n            if (keyValueArray[i].key === key) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n// Internal, private KO utility for updating model properties from within bindings\n// property:            If the property being updated is (or might be) an observable, pass it here\n//                      If it turns out to be a writable observable, it will be written to directly\n// allBindings:         An object with a get method to retrieve bindings in the current execution context.\n//                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n// key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n// value:               The value to be written\n// checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n//                      it is !== existing value on that writable observable\nexport const writeValueToProperty = (property, allBindings, key, value, checkIfDifferent) => {\n    if (!property || !isObservable(property)) {\n        let propWriters = allBindings.get(PROPERTY_WRITERS_BINDING_KEY);\n        if (propWriters && propWriters[key]) {\n            propWriters[key](value);\n        }\n    } else if (isWritableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n        property(value);\n    }\n};\n\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n// as an internal implementation detail in the short term.\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\nexport const _twoWayBindings = twoWayBindings;\n\n// alias For backward compatibility (see 'ko.jsonExpressionRewriting' alias below)\n// TODO removed, add to documentation\n// export const insertPropertyAccessorsIntoJson = preProcessBindings;\n","import {scheduleTask} from '../tasks';\nimport {ignoreDependencyDetection} from '../subscribables/dependencyDetection';\nimport {Subscribable} from '../subscribables/subscribable';\n\nconst _loadingSubscribablesCache = new Map(); // Tracks component loads that are currently in flight\nconst _loadedDefinitionsCache = new Map();    // Tracks component loads that have already completed\n\nexport let loaders = [];\n\nexport const _setComponentLoaders = (newLoaders) => loaders = newLoaders;\n\nexport const getComponent = (componentName, callback) => {\n    let cachedDefinition = _loadedDefinitionsCache.get(componentName);\n    if (cachedDefinition) {\n        // It's already loaded and cached. Reuse the same definition object.\n        // Note that for API consistency, even cache hits complete asynchronously by default.\n        // You can bypass this by putting synchronous:true on your component config.\n        if (cachedDefinition.isSynchronousComponent) {\n            // See comment in loaderRegistryBehaviors.js for reasoning\n            ignoreDependencyDetection(() => callback(cachedDefinition.definition));\n        } else {\n            scheduleTask(() => callback(cachedDefinition.definition));\n        }\n    } else {\n        // Join the loading process that is already underway, or start a new one.\n        let loadingSubscribable = _loadingSubscribablesCache.get(componentName);\n        if (loadingSubscribable) {\n            loadingSubscribable.subscribe(callback);\n        } else {\n            _loadNotYetLoadingComponentAndNotify(componentName, callback);\n        }\n    }\n};\n\nexport const clearCachedDefinition = (componentName) => {\n    _loadedDefinitionsCache.delete(componentName);\n};\n\n/**\n * Start loading a component that is not yet loading, and when it's done, move it to loadedDefinitionsCache.\n * @param {string} componentName\n * @param {function} callback\n * @private\n */\nconst _loadNotYetLoadingComponentAndNotify = (componentName, callback) => {\n    // if (_loadingSubscribablesCache.has(componentName)) {\n    //     throw new Error('Component \"' + componentName + '\" is already loading');\n    // }\n    let _subscribable = new Subscribable(),\n        completedAsync;\n    \n    _loadingSubscribablesCache.set(componentName, _subscribable);\n    _subscribable.subscribe(callback);\n\n    _beginLoadingComponent(componentName, (definition, config) => {\n        let isSynchronousComponent = !!(config && config.synchronous);\n        _loadedDefinitionsCache.set(componentName, {definition, isSynchronousComponent});\n        _loadingSubscribablesCache.delete(componentName);\n\n        // For API consistency, all loads complete asynchronously. However we want to avoid\n        // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n        // async).\n        //\n        // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n        // flag on your component configuration when you register it.\n        if (completedAsync || isSynchronousComponent) {\n            // Note that notifySubscribers ignores any dependencies read within the callback.\n            // See comment in loaderRegistryBehaviors.js for reasoning\n            _subscribable.notifySubscribers(definition);\n        } else {\n            scheduleTask(() => _subscribable.notifySubscribers(definition));\n        }\n    });\n    completedAsync = true;\n};\n\nconst _beginLoadingComponent = (componentName, callback) => {\n    _getFirstResultFromLoaders('getConfig', [componentName], config => {\n        if (config) {\n            // We have a config, so now load its definition\n            _getFirstResultFromLoaders('loadComponent', [componentName, config], definition => void callback(definition, config));\n        } else {\n            // The component has no config - it's unknown to all the loaders.\n            // Note that this is not an error (e.g., a module loading error) - that would abort the\n            // process and this callback would not run. For this callback to run, all loaders must\n            // have confirmed they don't know about this component.\n            callback(null, null);\n        }\n    });\n};\n\nexport const _getFirstResultFromLoaders = (methodName, argsExceptCallback, callback, candidateLoaders) => {\n    // On the first call in the stack, start with the full set of loaders\n    if (!candidateLoaders) {\n        candidateLoaders = loaders.slice(); // Use a copy, because we'll be mutating this array\n    }\n\n    // Try the next candidate\n    let currentCandidateLoader = candidateLoaders.shift();\n    if (!currentCandidateLoader) {\n        // No candidates returned a value\n        return callback(null);\n    }\n    \n    if (!currentCandidateLoader[methodName]) {\n        // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n        return _getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n    }\n    let wasAborted = false,\n        synchronousReturnValue = currentCandidateLoader[methodName](...argsExceptCallback, result => {\n            if (wasAborted) {\n                callback(null);\n            } else if (result !== null) {\n                // This candidate returned a value. Use it.\n                callback(result);\n            } else {\n                // Try the next candidate\n                _getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n            }\n        });\n\n    // Currently, loaders may not return anything synchronously. This leaves open the possibility\n    // that we'll extend the API to support synchronous return values in the future. It won't be\n    // a breaking change, because currently no loader is allowed to return anything except undefined.\n    if (synchronousReturnValue !== undefined) {\n        wasAborted = true;\n\n        // Method to suppress exceptions will remain undocumented. This is only to keep\n        // KO's specs running tidily, since we can observe the loading got aborted without\n        // having exceptions cluttering up the console too.\n        if (!currentCandidateLoader['suppressLoaderExceptions']) {\n            throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n        }\n    }\n};\n","import {moveCleanedNodesToContainerElement, unwrapObservable, stringTrim} from './utils';\nimport {emptyDomNode} from './utils.domNodes';\n\nconst NONE = [0, '', ''],\n    TABLE = [1, '<table>', '</table>'],\n    TBODY = [2, '<table><tbody>', '</tbody></table>'],\n    TR = [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n    SELECT = [1, '<select multiple=\"multiple\">', '</select>'],\n    LOOKUP = {\n        'thead': TABLE,\n        'tbody': TABLE,\n        'tfoot': TABLE,\n        'tr': TBODY,\n        'td': TR,\n        'th': TR,\n        'option': SELECT,\n        'optgroup': SELECT\n    },\n    TAGS_REGEX = /^(?:<!--.*?-->\\s*?)*?<([a-z]+)[\\s>]/;\n\nconst _getWrap = (tags) => (TAGS_REGEX.test(tags) && LOOKUP[RegExp.$1]) || NONE;\n\nconst _simpleHtmlParse = (html, documentContext) => {\n    documentContext || (documentContext = document);\n    let windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\n    // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n    // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\n    // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n    // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n    // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n    // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\n    // Trim whitespace, otherwise indexOf won't work as expected\n    let tags = stringTrim(html).toLowerCase(), div = documentContext.createElement('div'),\n        wrap = _getWrap(tags),\n        depth = wrap[0];\n\n    // Go to html and back, then peel off extra wrappers\n    // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n    let markup = 'ignored<div>' + wrap[1] + html + wrap[2] + '</div>';\n    if (typeof windowContext['innerShiv'] === 'function') {\n        // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n        // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n        // somehow shims the native APIs so it just works anyway)\n        div.appendChild(windowContext['innerShiv'](markup));\n    } else {\n        div.innerHTML = markup;\n    }\n\n    // Move to the right depth\n    while (depth--) {\n        div = div.lastChild;\n    }\n\n    return [...div.lastChild.childNodes];\n};\n\nexport const parseHtmlFragment = (html, documentContext) => _simpleHtmlParse(html, documentContext);\n\nexport const parseHtmlForTemplateNodes = (html, documentContext) => {\n    let nodes = parseHtmlFragment(html, documentContext);\n    return (nodes.length && nodes[0].parentElement) || moveCleanedNodesToContainerElement(nodes);\n};\n\nexport const setHtml = (node, html) => {\n    emptyDomNode(node);\n\n    // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n    html = unwrapObservable(html);\n\n    let htmlType = html === null ? 'undefined' : typeof html;\n\n    if (htmlType !== 'undefined') {\n        if (htmlType !== 'string') {\n            html = html.toString();\n        }\n        for (let parsedNode of parseHtmlFragment(html, node.ownerDocument)) {\n            node.appendChild(parsedNode);\n        }\n    }\n};\n","import {_getFirstResultFromLoaders, clearCachedDefinition} from './loaderRegistry';\nimport {parseHtmlFragment} from '../utils.domManipulation';\nimport {cloneNodes} from '../utils';\nimport {loaders} from './loaderRegistry';\n\nconst CREATE_VIEW_MODEL_KEY = 'createViewModel';\n\n// The default loader is responsible for two things:\n// 1. Maintaining the default in-memory registry of component configuration objects\n//    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n// 2. Answering requests for components by fetching configuration objects\n//    from that default in-memory registry and resolving them into standard\n//    component definition objects (of the form { createViewModel: ..., template: ... })\n// Custom loaders may override either of these facilities, i.e.,\n// 1. To supply configuration objects from some other source (e.g., conventions)\n// 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\nconst defaultConfigRegistry = new Map();\n\nexport const registerComponent = (componentName, config) => {\n    if (!config) {\n        throw new Error('Invalid configuration for ' + componentName);\n    }\n    if (isComponentRegistered(componentName)) {\n        throw new Error('Component ' + componentName + ' is already registered');\n    }\n    defaultConfigRegistry.set(componentName, config);\n};\n\nexport const isComponentRegistered = componentName => defaultConfigRegistry.has(componentName);\n\nexport const unregisterComponent = (componentName) => {\n    defaultConfigRegistry.delete(componentName);\n    clearCachedDefinition(componentName);\n};\n\nexport const defaultLoader = {\n    getConfig(componentName, callback) {\n        let result = isComponentRegistered(componentName) ? defaultConfigRegistry.get(componentName) : null;\n        callback(result);\n    },\n    \n    loadComponent(componentName, config, callback) {\n        let errorCallback = _makeErrorCallback(componentName);\n        _possiblyGetConfigFromAmd(errorCallback, config, loadedConfig => _resolveConfig(componentName, errorCallback, loadedConfig, callback));\n    },\n    \n    loadTemplate(componentName, templateConfig, callback) {\n        _resolveTemplate(_makeErrorCallback(componentName), templateConfig, callback);\n    },\n    \n    loadViewModel(componentName, viewModelConfig, callback) {\n        _resolveViewModel(_makeErrorCallback(componentName), viewModelConfig, callback);\n    }\n};\n\n// Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n// into the standard component definition format:\n//    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n// Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n// in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n// so this is implemented manually below.\nconst _resolveConfig = (componentName, errorCallback, config, callback) => {\n    let result = {},\n        makeCallBackWhenZero = 2,\n        tryIssueCallback = () => (--makeCallBackWhenZero === 0) && callback(result),\n        templateConfig = config['template'],\n        viewModelConfig = config['viewModel'];\n\n    if (templateConfig) {\n        _possiblyGetConfigFromAmd(errorCallback, templateConfig, loadedConfig => {\n            _getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], resolvedTemplate => {\n                result['template'] = resolvedTemplate;\n                tryIssueCallback();\n            });\n        });\n    } else {\n        tryIssueCallback();\n    }\n\n    if (viewModelConfig) {\n        _possiblyGetConfigFromAmd(errorCallback, viewModelConfig, loadedConfig => {\n            _getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], resolvedViewModel => {\n                result[CREATE_VIEW_MODEL_KEY] = resolvedViewModel;\n                tryIssueCallback();\n            });\n        });\n    } else {\n        tryIssueCallback();\n    }\n};\n\nconst _resolveTemplate = (errorCallback, templateConfig, callback) => {\n    if (typeof templateConfig === 'string') {\n        // Markup - parse it\n        return callback(parseHtmlFragment(templateConfig));\n    } \n    if (templateConfig.element) {\n        let elementIdOrNode = templateConfig.element,\n            elemNode;\n        if (typeof elementIdOrNode === 'string') {\n            elemNode = document.getElementById(elementIdOrNode);\n            if (!elemNode) {\n                errorCallback('Cannot find element with ID ' + elementIdOrNode);\n            }\n        } else if (_isDomElement(elementIdOrNode)) {\n            elemNode = elementIdOrNode;\n        } else {\n            errorCallback('Unknown element type: ' + elementIdOrNode);\n        }\n        // Element instance found - copy its child nodes\n        return callback(_cloneNodesFromTemplateSourceElement(elemNode));\n    }  \n    if (Array.isArray(templateConfig)) {\n        // Assume already an array of DOM nodes - pass through unchanged\n        return callback(templateConfig);\n    }\n    if (_isDocumentFragment(templateConfig)) {\n        // Document fragment - use its child nodes\n        return callback([...templateConfig.childNodes]);\n    } \n    errorCallback('Unknown template value: ' + templateConfig);\n};\n\nconst _resolveViewModel = (errorCallback, viewModelConfig, callback) => {\n    if (typeof viewModelConfig === 'function') {\n        // Constructor - convert to standard factory function format\n        // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n        // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n        // be used in factory functions, not viewmodel constructors.\n        return callback((params /*, componentInfo */) => new viewModelConfig(params));\n    } \n    let factoryFn = viewModelConfig[CREATE_VIEW_MODEL_KEY];\n    if (typeof factoryFn === 'function') {\n        // Already a factory function - use it as-is\n        return callback(factoryFn);\n    } \n    let fixedInstance = viewModelConfig.instance;\n    if (fixedInstance !== undefined) {\n        // Fixed object instance - promote to createViewModel format for API consistency\n        return callback((params, componentInfo) => fixedInstance);\n    } \n    let viewModel = viewModelConfig.viewModel;\n    if (viewModel !== undefined) {\n        // Resolved AMD module whose value is of the form { viewModel: ... }\n        return _resolveViewModel(errorCallback, viewModel, callback);\n    } \n    errorCallback('Unknown viewModel value: ' + viewModelConfig);\n};\n\nconst _cloneNodesFromTemplateSourceElement = (elemInstance) => {\n    let tagName = elemInstance.tagName.toLowerCase();\n    switch (tagName) {\n        case 'script':   \n            return parseHtmlFragment(elemInstance.text);\n        case 'textarea': \n            return parseHtmlFragment(elemInstance.value);\n        case 'template':\n            // For browsers with proper <template> element support (i.e., where the .content property\n            // gives a document fragment), use that document fragment.\n            if (_isDocumentFragment(elemInstance.content)) {\n                return cloneNodes(elemInstance.content.childNodes);\n            }\n    }\n    // Regular elements such as <div>, and <template> elements on old browsers that don't really\n    // understand <template> and just treat it as a regular container\n    return cloneNodes(elemInstance.childNodes);\n};\n\n// not as precise as `instanceof HTMLElement' but a lot cheaper \nconst _isDomElement = obj => obj && obj.tagName && obj.nodeType === 1;\n\nconst _isDocumentFragment = obj => obj && obj.nodeType === 11;\n\nconst _possiblyGetConfigFromAmd = (errorCallback, config, callback) => {\n    if (typeof config.require !== 'string') {\n        callback(config);\n        return;\n    }\n    // The config is the value of an AMD module\n    let requireFn = typeof amdRequire === 'function' ? amdRequire : window.require; // eslint-disable-line no-undef\n    if (requireFn) {\n        requireFn([config.require], module => {\n            if (module && (typeof module === 'object') && module.__esModule && module.default) {\n                module = module.default;\n            }\n            callback(module);\n        });\n    } else {\n        errorCallback('Uses require, but no AMD loader is present');\n    }\n};\n\nconst _makeErrorCallback = (componentName) => message => {\n    throw new Error('Component \\'' + componentName + '\\': ' + message);\n};\n\n// By default, the default loader is the only registered component loader\nloaders.push(defaultLoader);\n","import {isComponentRegistered} from './defaultLoader';\nimport {unwrapObservable} from '../utils';\nimport {isWritableObservable} from '../subscribables/observableUtils';\nimport {computed} from '../subscribables/dependentObservable';\n\n\n// Overridable API for determining which component name applies to a given node. By overriding this,\n// you can for example map specific tagNames to components that are not preregistered.\nexport const _overrideGetComponentNameForNode = fn => getComponentNameForNode = fn;\n\nexport let getComponentNameForNode = (node) => {\n    let tagNameLower = (node && node.tagName || '').toLowerCase();\n    if (tagNameLower && isComponentRegistered(tagNameLower)) {\n        // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n        if (tagNameLower.includes('-') || ('' + node) === \"[object HTMLUnknownElement]\") {\n            return tagNameLower;\n        }\n    }\n};\n\nexport const addBindingsForCustomElement = (allBindings, node, bindingContext, valueAccessors) => {\n    // Determine if it's really a custom element matching a component\n    if (node.nodeType === 1) {\n        let componentName = getComponentNameForNode(node);\n        if (componentName) {\n            // It does represent a component, so add a component binding for it\n            allBindings = allBindings || {};\n\n            if (allBindings.component) {\n                // Avoid silently overwriting some other 'component' binding that may already be on the element\n                throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n            }\n\n            let componentBindingValue = {name: componentName, params: _getComponentParamsFromCustomElement(node, bindingContext)};\n\n            allBindings.component = valueAccessors\n                ? function() { return componentBindingValue; }\n                : componentBindingValue;\n        }\n    }\n\n    return allBindings;\n};\n\nlet _nativeBindingProviderInstance;\n\nexport const _setNativeBindingProviderInstance = bindingProvider => _nativeBindingProviderInstance = bindingProvider;\n\nconst _getComponentParamsFromCustomElement = (elem, bindingContext) => {\n    let paramsAttribute = elem.getAttribute('params');\n\n    if (!paramsAttribute) {\n        // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n        // any empty one. Otherwise component viewmodels need special code to check whether or not\n        // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n        return {'$raw': {}};\n    }\n    \n    let params = _nativeBindingProviderInstance.parseBindingsString(paramsAttribute, bindingContext, elem, {valueAccessors: true, bindingParams: true}),\n        rawParamComputedValues = {},\n        result = {},\n        hadRawProperty = false; \n    \n    Object.keys(params).forEach(paramName => {\n        let paramValue = params[paramName],\n            paramValueComputed = computed(paramValue, null, {disposeWhenNodeIsRemoved: elem}),\n            paramValueComputedPeekedValue = paramValueComputed.peek();\n        \n        rawParamComputedValues[paramName] = paramValueComputed;\n\n        // Does the evaluation of the parameter value unwrap any observables?\n        if (!paramValueComputed.isActive()) {\n            // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n            // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n            result[paramName] = paramValueComputedPeekedValue;\n        } else {\n            // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n            // level of observability, and any inner (resulting model value) level of observability.\n            // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n            // writable observable, the computed will also be writable and pass the value on to the observable.\n            result[paramName] = computed({\n                read: () => unwrapObservable(paramValueComputed()),\n                write: isWritableObservable(paramValueComputedPeekedValue) && (value => paramValueComputed()(value)),\n                disposeWhenNodeIsRemoved: elem\n            });\n        }\n        \n        if (paramName === '$raw') {\n            hadRawProperty = true;\n        }\n    });\n    \n    if (!hadRawProperty) {\n        // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n        // This is in case the developer wants to react to outer (binding) observability separately from inner\n        // (model value) observability, or in case the model value observable has subobservables.\n        result['$raw'] = rawParamComputedValues;\n    }\n\n    return result;\n};\n","import {hasBindingValue, virtualNodeBindingValue} from '../virtualElements';\nimport {preProcessBindings} from './expressionRewriting';\nimport {addBindingsForCustomElement, getComponentNameForNode, _setNativeBindingProviderInstance} from '../components/customElements';\n\nconst DEFAULT_BINDING_ATTRIBUTE_NAME = \"data-bind\";\n\nexport class KoBindingProvider {\n\n    // getter/setter only added to allow external scripts (jasmine) to replace the provider via 'ko.bindingProvider.instance'\n    // Internally, the direct reference to 'bindingProviderInstance' is used \n    static get instance() { return bindingProviderInstance; }\n    static set instance(newInstance) { bindingProviderInstance = newInstance; }\n    \n    constructor() {\n        this._cache = new Map();\n    }\n\n    nodeHasBindings(node) {\n        let nodeType = node.nodeType;\n        // 1 == element, 8 == comment\n        return (nodeType === 1) ? (node.getAttribute(DEFAULT_BINDING_ATTRIBUTE_NAME) !== null || getComponentNameForNode(node)) :\n               (nodeType === 8) ? hasBindingValue(node) : false;\n    }\n\n    getBindings(node, bindingContext) {\n        let bindingsString = this._getBindingsString(node, bindingContext),\n            parsedBindings = bindingsString ? this.parseBindingsString(bindingsString, bindingContext, node) : null;\n        return addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n    }\n\n    getBindingAccessors(node, bindingContext) {\n        let bindingsString = this._getBindingsString(node, bindingContext),\n            parsedBindings = bindingsString ? this.parseBindingsString(bindingsString, bindingContext, node, {'valueAccessors': true}) : null;\n        return addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n    }\n\n    // The following function is only used internally by this default provider.\n    // It's not part of the interface definition for a general binding provider.\n    _getBindingsString(node, bindingContext) {\n        switch (node.nodeType) {\n            case 1:\n                return node.getAttribute(DEFAULT_BINDING_ATTRIBUTE_NAME); // Element\n            case 8:\n                return virtualNodeBindingValue(node);  // Comment\n            default: \n                return null;\n        }\n    }\n\n    // The following function is only used internally by this default provider.\n    // It's not part of the interface definition for a general binding provider.\n    parseBindingsString(bindingsString, bindingContext, node, options) {\n        let cacheKey = bindingsString + (options && options['valueAccessors'] || ''),\n            bindingFunction = this._cache.get(cacheKey);\n        \n        if (bindingFunction) {\n            // the function has been parsed once, so skip the try-catch extra scope \n            return bindingFunction(bindingContext, node);\n        }\n        \n        try {\n            //binding = this._createBindingsStringEvaluator(bindingsString, options);\n            // Build the source for a function that evaluates \"expression\"\n            // For each scope variable, add an extra level of \"with\" nesting\n            // Example result: with(sc1) { with(sc0) { return (expression) } }\n            let rewrittenBindings = preProcessBindings(bindingsString, options),\n                functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\",\n                bindingFnToCache = new Function(\"$context\", \"$element\", functionBody);\n            \n            this._cache.set(cacheKey, bindingFnToCache);\n            \n            return bindingFnToCache(bindingContext, node);\n        } catch (ex) {\n            ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n            throw ex;\n        }\n    }\n}\n\nexport let bindingProviderInstance = new KoBindingProvider();\n\n_setNativeBindingProviderInstance(new KoBindingProvider());\n","import {childNodes, nextSibling, firstChild, normaliseVirtualElementDomStructure, allowedVirtualElementBindings} from '../virtualElements';\r\nimport {getDomData, getOrSetDomData, nextDomDataKey} from '../utils.domData';\r\nimport {isObservable} from '../subscribables/observableUtils';\r\nimport {getCurrentComputed} from '../subscribables/dependencyDetection';\r\nimport {addDisposeCallback, removeDisposeCallback} from '../utils.domNodeDisposal';\r\nimport {dependentObservable, pureComputed} from '../subscribables/dependentObservable';\r\nimport {ignoreDependencyDetection} from '../subscribables/dependencyDetection';\r\nimport {unwrapObservable, tagNameLower} from '../utils';\r\nimport {getBindingHandler} from './bindingHandlers';\r\nimport {Subscribable} from '../subscribables/subscribable';\r\nimport {bindingProviderInstance} from './bindingProvider';\r\n\r\n// Hide or don't minify context properties, see https://github.com/knockout/knockout/issues/2294\r\n\r\n// pull frequently used methods closer (could become imports some day)\r\n// allows for faster access + efficient minification\r\n\r\n\r\nconst CONTEXT_SUBSCRIBABLE = Symbol('_subscribable');\r\nconst CONTEXT_ANCESTOR_BINDING_INFO = Symbol('_ancestorBindingInfo');\r\nconst CONTEXT_DATA_DEPENDENCY = Symbol('_dataDependency');\r\n\r\n// The following element types will not be recursed into during binding.\r\nconst BINDING_DOES_NOT_RECURSE_INTO_ELEMENT_TYPES = {\r\n    // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\r\n    // because it's unexpected and a potential XSS issue.\r\n    // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\r\n    // and because such elements' contents are always intended to be bound in a different context\r\n    // from where they appear in the document.\r\n    'script': true,\r\n    'textarea': true,\r\n    'template': true\r\n};\r\n\r\n\r\nconst INHERIT_PARENT_VM_DATA = Symbol();\r\n\r\nconst IS_BINDING_CONTEXT_INSTANCE = Symbol();\r\n\r\nlet _koReferenceForBindingContexts;\r\n\r\nexport const _setKoReferenceForBindingContexts = (ko) => _koReferenceForBindingContexts = ko;\r\n\r\n/**\r\n * The ko.bindingContext/KoBindingContext constructor is only called directly to create the root context. \r\n * For child contexts, use bindingContextInstance.createChildContext or bindingContextInstance.extend.\r\n */\r\nexport class KoBindingContext {\r\n\r\n    constructor(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {\r\n        this[IS_BINDING_CONTEXT_INSTANCE] = true;\r\n        \r\n        const shouldInheritData = dataItemOrAccessor === INHERIT_PARENT_VM_DATA;\r\n        const realDataItemOrAccessor = shouldInheritData ? undefined : dataItemOrAccessor;\r\n        const isFunc = (typeof realDataItemOrAccessor === 'function') && !isObservable(realDataItemOrAccessor);\r\n        const dataDependency = options && options.dataDependency;\r\n\r\n        let _subscribable = null;\r\n        \r\n        // The binding context object includes static properties for the current, parent, and root view models.\r\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\r\n        // any child contexts, must be updated when the view model is changed.\r\n        const _updateContext = () => {\r\n                // Most of the time, the context will directly get a view model object, but if a function is given,\r\n                // we call the function to retrieve the view model. If the function accesses any observables or returns\r\n                // an observable, the dependency is tracked, and those observables can later cause the binding\r\n                // context to be updated.\r\n                let dataItemOrObservable = isFunc ? realDataItemOrAccessor() : realDataItemOrAccessor,\r\n                    dataItem = unwrapObservable(dataItemOrObservable);\r\n\r\n                if (parentContext) {\r\n                    // Copy $root and any custom properties from the parent context\r\n                    Object.assign(this, parentContext);\r\n\r\n                    // Copy Symbol properties\r\n                    if (CONTEXT_ANCESTOR_BINDING_INFO in parentContext) {\r\n                        this[CONTEXT_ANCESTOR_BINDING_INFO] = parentContext[CONTEXT_ANCESTOR_BINDING_INFO];\r\n                    }\r\n                } else {\r\n                    this['$parents'] = [];\r\n                    this['$root'] = dataItem;\r\n\r\n                    // Export 'ko' in the binding context so it will be available in bindings and templates\r\n                    // even if 'ko' isn't exported as a global, such as when using an AMD loader.\r\n                    // See https://github.com/SteveSanderson/knockout/issues/490\r\n                    this.ko = _koReferenceForBindingContexts;\r\n                }\r\n\r\n                this[CONTEXT_SUBSCRIBABLE] = _subscribable;\r\n\r\n                if (shouldInheritData) {\r\n                    dataItem = this['$data'];\r\n                } else {\r\n                    this['$rawData'] = dataItemOrObservable;\r\n                    this['$data'] = dataItem;\r\n                }\r\n\r\n                if (dataItemAlias) {\r\n                    this[dataItemAlias] = dataItem;\r\n                }\r\n\r\n                // The extendCallback function is provided when creating a child context or extending a context.\r\n                // It handles the specific actions needed to finish setting up the binding context. Actions in this\r\n                // function could also add dependencies to this binding context.\r\n                if (extendCallback) {\r\n                    extendCallback(this, parentContext, dataItem);\r\n                }\r\n\r\n                // When a \"parent\" context is given and we don't already have a dependency on its context, register a dependency on it.\r\n                // Thus whenever the parent context is updated, this context will also be updated.\r\n                let parentCtxSubscribable = parentContext && parentContext[CONTEXT_SUBSCRIBABLE];\r\n                if (parentCtxSubscribable && !getCurrentComputed().hasAncestorDependency(parentCtxSubscribable)) {\r\n                    parentCtxSubscribable();\r\n                }\r\n\r\n                if (dataDependency) {\r\n                    this[CONTEXT_DATA_DEPENDENCY] = dataDependency;\r\n                }\r\n\r\n                return this['$data'];\r\n            };\r\n\r\n        if (options && options['exportDependencies']) {\r\n            // The \"exportDependencies\" option means that the calling code will track any dependencies and re-create\r\n            // the binding context when they change.\r\n            _updateContext();\r\n        } else {\r\n            _subscribable = pureComputed(_updateContext);\r\n            _subscribable.peek();\r\n\r\n            // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\r\n            // subscribed to any observables that were accessed in the process. If there is nothing to track, the\r\n            // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\r\n            // the context object.\r\n            if (_subscribable.isActive()) {\r\n                // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\r\n                _subscribable.equalityComparer = null;\r\n            } else {\r\n                this[CONTEXT_SUBSCRIBABLE] = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\r\n    // any observables, the new child context will automatically get a dependency on the parent context.\r\n    // But this does not mean that the $data value of the child context will also get updated. If the child\r\n    // view model also depends on the parent view model, you must provide a function that returns the correct\r\n    // view model on each update.\r\n    createChildContext(dataItemOrAccessor, dataItemAlias, extendCallback, options) {\r\n        if (!options && dataItemAlias && typeof dataItemAlias === 'object') {\r\n            options = dataItemAlias;\r\n            dataItemAlias = options['as'];\r\n            extendCallback = options['extend'];\r\n        }\r\n\r\n        if (dataItemAlias && options && options['noChildContext']) {\r\n            let isFunc = typeof dataItemOrAccessor === 'function' && !isObservable(dataItemOrAccessor);\r\n            return new KoBindingContext(INHERIT_PARENT_VM_DATA, this, null, (newContext) => {\r\n                    if (extendCallback) {\r\n                        extendCallback(newContext);\r\n                    }\r\n                    newContext[dataItemAlias] = isFunc ? dataItemOrAccessor() : dataItemOrAccessor;\r\n                }, options);\r\n        }\r\n\r\n        return new KoBindingContext(dataItemOrAccessor, this, dataItemAlias, (newContext, parentContext) => {\r\n            // Extend the context hierarchy by setting the appropriate pointers\r\n            newContext['$parentContext'] = parentContext;\r\n            newContext['$parent'] = parentContext['$data'];\r\n            newContext['$parents'] = (parentContext['$parents'] || []).slice();\r\n            newContext['$parents'].unshift(newContext['$parent']);\r\n            if (extendCallback) {\r\n                extendCallback(newContext);\r\n            }\r\n        }, options);\r\n    }\r\n\r\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\r\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\r\n    // when an observable view model is updated.\r\n    extend(properties, options) {\r\n        return new KoBindingContext(INHERIT_PARENT_VM_DATA, this, null, (newContext, parentContext) => {\r\n            Object.assign(newContext, (typeof properties === 'function') ? properties(newContext) : properties);\r\n        }, options);\r\n    }\r\n}\r\n\r\n// allows for replacing 'obj instanceof KoBindingContext' with faster obj[IS_BINDING_CONTEXT_INSTANCE]\r\nKoBindingContext.prototype[IS_BINDING_CONTEXT_INSTANCE] = true;\r\n\r\nconst BOUND_ELEMENT_DOM_DATA_KEY = nextDomDataKey();\r\n\r\nconst _asyncContextDispose = (node) => {\r\n    let bindingInfo = getDomData(node, BOUND_ELEMENT_DOM_DATA_KEY),\r\n        asyncContext = bindingInfo && bindingInfo.asyncContext;\r\n    if (asyncContext) {\r\n        bindingInfo.asyncContext = null;\r\n        asyncContext.notifyAncestor();\r\n    }\r\n};\r\n\r\n\r\nclass AsyncCompleteContext {\r\n    constructor(node, bindingInfo, ancestorBindingInfo) {\r\n        this.node = node;\r\n        this.bindingInfo = bindingInfo;\r\n        this.asyncDescendants = [];\r\n        this.childrenComplete = false;\r\n\r\n        if (!bindingInfo.asyncContext) {\r\n            addDisposeCallback(node, _asyncContextDispose);\r\n        }\r\n\r\n        if (ancestorBindingInfo && ancestorBindingInfo.asyncContext) {\r\n            ancestorBindingInfo.asyncContext.asyncDescendants.push(node);\r\n            this.ancestorBindingInfo = ancestorBindingInfo;\r\n        }\r\n    }\r\n\r\n    notifyAncestor() {\r\n        let asyncContext = this.ancestorBindingInfo && this.ancestorBindingInfo.asyncContext;\r\n        if (asyncContext) {\r\n            asyncContext.descendantComplete(this.node);\r\n        }\r\n    }\r\n\r\n    descendantComplete(node) {\r\n        let descendants = this.asyncDescendants,\r\n            index = (descendants && descendants.length) ? descendants.indexOf(node) : -1;\r\n        if (index === 0) {\r\n            descendants.shift();\r\n        } else if (index > 0) {\r\n            descendants.splice(index, 1);\r\n        }\r\n        if (!descendants.length && this.childrenComplete) {\r\n            this.completeChildren();\r\n        }\r\n    }\r\n\r\n    completeChildren() {\r\n        this.childrenComplete = true;\r\n        if (this.bindingInfo.asyncContext && !this.asyncDescendants.length) {\r\n            this.bindingInfo.asyncContext = null;\r\n            removeDisposeCallback(this.node, _asyncContextDispose);\r\n            bindingEvent.notify(this.node, EVENT_DESCENDENTS_COMPLETE);\r\n            this.notifyAncestor();\r\n        }\r\n    }\r\n}\r\n\r\nexport const EVENT_CHILDREN_COMPLETE = 'childrenComplete';\r\nexport const EVENT_DESCENDENTS_COMPLETE = 'descendantsComplete';\r\n\r\nexport const bindingEvent = {\r\n    childrenComplete: EVENT_CHILDREN_COMPLETE,\r\n    descendantsComplete: EVENT_DESCENDENTS_COMPLETE,\r\n    subscribe(node, event, callback, context, options) {\r\n        let bindingInfo = getOrSetDomData(node, BOUND_ELEMENT_DOM_DATA_KEY, {}),\r\n            eventSubscribable = bindingInfo.eventSubscribable || (bindingInfo.eventSubscribable = new Subscribable());\r\n        \r\n        if (options && options.notifyImmediately && bindingInfo.notifiedEvents[event]) {\r\n            ignoreDependencyDetection(callback, context, [node]);\r\n        }\r\n        return eventSubscribable.subscribe(callback, context, event);\r\n    },\r\n\r\n    notify(node, event) {\r\n        let bindingInfo = getDomData(node, BOUND_ELEMENT_DOM_DATA_KEY);\r\n        if (!bindingInfo) {\r\n            return;\r\n        }\r\n        bindingInfo.notifiedEvents[event] = true;\r\n        let _eventSubscribable = bindingInfo.eventSubscribable;\r\n        if (_eventSubscribable) {\r\n            _eventSubscribable.notifySubscribers(node, event);\r\n        }\r\n        if (event === EVENT_CHILDREN_COMPLETE) {\r\n            let _asyncContext = bindingInfo.asyncContext; \r\n            if (_asyncContext) {\r\n                _asyncContext.completeChildren();\r\n            } else if (_asyncContext === undefined && bindingInfo.eventSubscribable && bindingInfo.eventSubscribable.hasSubscriptionsForEvent(EVENT_DESCENDENTS_COMPLETE)) {\r\n                // It's currently an error to register a descendantsComplete handler for a node that was never registered as completing asynchronously.\r\n                // That's because without the asyncContext, we don't have a way to know that all descendants have completed.\r\n                throw new Error(\"descendantsComplete event not supported for bindings on this node\");\r\n            }\r\n        }\r\n    },\r\n\r\n    startPossiblyAsyncContentBinding: function (node, bindingContext) {\r\n        let bindingInfo = getOrSetDomData(node, BOUND_ELEMENT_DOM_DATA_KEY, {});\r\n\r\n        if (!bindingInfo.asyncContext) {\r\n            bindingInfo.asyncContext = new AsyncCompleteContext(node, bindingInfo, bindingContext[CONTEXT_ANCESTOR_BINDING_INFO]);\r\n        }\r\n\r\n        // If the provided context was already extended with this node's binding info, just return the extended context\r\n        if (bindingContext[CONTEXT_ANCESTOR_BINDING_INFO] === bindingInfo) {\r\n            return bindingContext;\r\n        }\r\n        \r\n        return bindingContext.extend(ctx => ctx[CONTEXT_ANCESTOR_BINDING_INFO] = bindingInfo);\r\n    }\r\n};\r\n\r\n// Given a function that returns bindings, create and return a new object that contains\r\n// binding value-accessors functions. Each accessor function calls the original function\r\n// so that it always gets the latest value and all dependencies are captured. This is used\r\n// by ko.applyBindingsToNode and _getBindingsAndMakeAccessors.\r\nconst _makeAccessorsFromFunction = (callback) => {\r\n    let source = ignoreDependencyDetection(callback),\r\n        target = source && Object.create(null);\r\n    if (target) {\r\n        for (let key of Object.keys(source)) {\r\n            target[key] = () => callback()[key];\r\n        }\r\n    }\r\n    return target;\r\n};\r\n\r\n// Given a bindings function or object, create and return a new object that contains\r\n// binding value-accessors functions. This is used by ko.applyBindingsToNode.\r\nfunction _makeBindingAccessors(bindings, context, node) {\r\n    if (typeof bindings === 'function') {\r\n        return _makeAccessorsFromFunction(() => bindings(context, node));\r\n    }\r\n    let target = Object.create(null);\r\n    for (let key of Object.keys(bindings)) {\r\n        let val = bindings[key];\r\n        target[key] = () => val;\r\n    }\r\n    return target;\r\n}\r\n\r\n\r\nfunction _applyBindingsToDescendantsInternal(bindingContext, elementOrVirtualElement) {\r\n    let nextInQueue = firstChild(elementOrVirtualElement);\r\n\r\n    if (nextInQueue) {\r\n        let currentChild;\r\n\r\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\r\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\r\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\r\n        // trigger insertion of <template> contents at that point in the document.\r\n        if (bindingProviderInstance.preprocessNode) {\r\n            while (currentChild = nextInQueue) {\r\n                nextInQueue = nextSibling(currentChild);\r\n                bindingProviderInstance.preprocessNode(currentChild);\r\n            }\r\n            // Reset nextInQueue for the next loop\r\n            nextInQueue = firstChild(elementOrVirtualElement);\r\n        }\r\n\r\n        while (currentChild = nextInQueue) {\r\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\r\n            nextInQueue = nextSibling(currentChild);\r\n            _applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild);\r\n        }\r\n    }\r\n    bindingEvent.notify(elementOrVirtualElement, EVENT_CHILDREN_COMPLETE);\r\n}\r\n\r\nfunction _applyBindingsToNodeAndDescendantsInternal(bindingContext, nodeVerified) {\r\n    let bindingContextForDescendants = bindingContext;\r\n\r\n    let isElement = (nodeVerified.nodeType === 1);\r\n    if (isElement) {// Workaround IE <= 8 HTML parsing weirdness\r\n        normaliseVirtualElementDomStructure(nodeVerified);\r\n    }\r\n\r\n    // Perf optimisation: Apply bindings only if...\r\n    // (1) We need to store the binding info for the node (all element nodes)\r\n    // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\r\n    let shouldApplyBindings = isElement || bindingProviderInstance.nodeHasBindings(nodeVerified);\r\n    if (shouldApplyBindings) {\r\n        bindingContextForDescendants = _applyBindingsToNodeInternal(nodeVerified, null, bindingContext)['bindingContextForDescendants'];\r\n    }\r\n    if (bindingContextForDescendants && !BINDING_DOES_NOT_RECURSE_INTO_ELEMENT_TYPES[tagNameLower(nodeVerified)]) {\r\n        _applyBindingsToDescendantsInternal(bindingContextForDescendants, nodeVerified);\r\n    }\r\n}\r\n\r\nfunction _topologicalSortBindings(bindings) {\r\n    // Depth-first sort\r\n    let result = [],                // The list of key/handler pairs that we will return\r\n        bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\r\n        cyclicDependencyStack = [], // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\r\n        _pushBinding = bindingKey => {\r\n            if (bindingsConsidered[bindingKey]) {\r\n                return;\r\n            }\r\n            bindingsConsidered[bindingKey] = true;\r\n            let binding = getBindingHandler(bindingKey);\r\n            if (!binding) {\r\n                return;\r\n            }\r\n            let bindingAfter = binding.after;\r\n            // First add dependencies (if any) of the current binding\r\n            if (bindingAfter) {\r\n                cyclicDependencyStack.push(bindingKey);\r\n                for (let bindingDependencyKey of bindingAfter) {\r\n                    if (bindings[bindingDependencyKey]) {\r\n                        if (cyclicDependencyStack.includes(bindingDependencyKey)) {\r\n                            throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\r\n                        }\r\n                        _pushBinding(bindingDependencyKey);\r\n                    }\r\n                }\r\n                cyclicDependencyStack.length--;\r\n            }\r\n            // Next add the current binding\r\n            result.push({key: bindingKey, handler: binding});\r\n        };\r\n\r\n    for (let bindingKey of Object.keys(bindings)) {\r\n        _pushBinding(bindingKey);\r\n    }\r\n    return result;\r\n}\r\n\r\nconst _applyBindingsToNodeInternal = (node, sourceBindings, bindingContext) => {\r\n    let bindingInfo = getOrSetDomData(node, BOUND_ELEMENT_DOM_DATA_KEY, {});\r\n\r\n    // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\r\n    let alreadyBound = bindingInfo.alreadyBound;\r\n    if (!sourceBindings) {\r\n        if (alreadyBound) {\r\n            throw Error(\"You cannot apply bindings multiple times to the same element.\");\r\n        }\r\n        bindingInfo.alreadyBound = true;\r\n    }\r\n    if (!alreadyBound) {\r\n        bindingInfo.context = bindingContext;\r\n    }\r\n    if (!bindingInfo.notifiedEvents) {\r\n        bindingInfo.notifiedEvents = {};\r\n    }\r\n\r\n    // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\r\n    let bindings,\r\n        bindingsUpdater;\r\n\r\n    if (sourceBindings && typeof sourceBindings !== 'function') {\r\n        bindings = sourceBindings;\r\n    } else {\r\n        // Get the binding from the provider within a computed observable so that we can update the bindings whenever\r\n        // the binding context is updated or if the binding provider accesses observables.\r\n        bindingsUpdater = dependentObservable(() => {\r\n            if (sourceBindings) {\r\n                bindings = sourceBindings(bindingContext, node);\r\n            } else if (bindingProviderInstance.getBindingAccessors) {\r\n                bindings = bindingProviderInstance.getBindingAccessors(node, bindingContext);\r\n            } else {\r\n                // If binding provider doesn't include a getBindingAccessors function, we add it now.\r\n                bindings = _makeAccessorsFromFunction(bindingProviderInstance.getBindings.bind(bindingProviderInstance, node, bindingContext));\r\n            }\r\n            // Register a dependency on the binding context to support observable view models.\r\n            if (bindings) {\r\n                let ctxSubscribable = bindingContext[CONTEXT_SUBSCRIBABLE],\r\n                    ctxDataDependency = bindingContext[CONTEXT_DATA_DEPENDENCY];\r\n                if (ctxSubscribable){\r\n                    ctxSubscribable();\r\n                } \r\n                if (ctxDataDependency) {\r\n                    ctxDataDependency();\r\n                }\r\n            }\r\n            return bindings;\r\n        }, null, {disposeWhenNodeIsRemoved: node});\r\n\r\n        if (!bindings || !bindingsUpdater.isActive()) {\r\n            bindingsUpdater = null;\r\n        }\r\n    }\r\n\r\n    let contextToExtend = bindingContext,\r\n        bindingHandlerThatControlsDescendantBindings;\r\n\r\n    if (bindings) {\r\n        // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\r\n        // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\r\n        // the latest binding value and registers a dependency on the binding updater.\r\n        let getValueAccessor = bindingsUpdater ? \r\n                                    (bindingKey) => () => bindingsUpdater()[bindingKey]() : \r\n                                    (bindingKey) => bindings[bindingKey];\r\n\r\n        let allBindings = () => {\r\n            throw new Error('Use of allBindings as a function is no longer supported');\r\n        };\r\n\r\n        // The following is the 3.x allBindings API\r\n        allBindings.get = (key) => bindings[key] && getValueAccessor(key)();\r\n        allBindings.has = (key) => key in bindings;\r\n\r\n        if (EVENT_CHILDREN_COMPLETE in bindings) {\r\n            bindingEvent.subscribe(node, EVENT_CHILDREN_COMPLETE, () => {\r\n                let callback = bindings[EVENT_CHILDREN_COMPLETE]();\r\n                if (callback) {\r\n                    let nodes = childNodes(node);\r\n                    if (nodes.length) {\r\n                        callback(nodes, dataFor(nodes[0]));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (EVENT_DESCENDENTS_COMPLETE in bindings) {\r\n            contextToExtend = bindingEvent.startPossiblyAsyncContentBinding(node, bindingContext);\r\n            bindingEvent.subscribe(node, EVENT_DESCENDENTS_COMPLETE, () => {\r\n                let callback = bindings[EVENT_DESCENDENTS_COMPLETE]();\r\n                if (callback && firstChild(node)) {\r\n                    callback(node);\r\n                }\r\n            });\r\n        }\r\n\r\n        // First put the bindings into the right order\r\n        let orderedBindings = _topologicalSortBindings(bindings);\r\n\r\n        // Go through the sorted bindings, calling init and update for each\r\n        orderedBindings.forEach(bindingKeyAndHandler => {\r\n            // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\r\n            // so bindingKeyAndHandler.handler will always be nonnull.\r\n            let handlerInitFn = bindingKeyAndHandler.handler.init,\r\n                handlerUpdateFn = bindingKeyAndHandler.handler.update,\r\n                bindingKey = bindingKeyAndHandler.key;\r\n\r\n            if (node.nodeType === 8 && !allowedVirtualElementBindings[bindingKey]) {\r\n                throw new Error(\"The binding '\" + bindingKey + \"' cannot be used with virtual elements\");\r\n            }\r\n\r\n            try {\r\n                // Run init, ignoring any dependencies\r\n                if (typeof handlerInitFn === 'function') {\r\n                    ignoreDependencyDetection(() => {\r\n                        let initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, contextToExtend['$data'], contextToExtend);\r\n\r\n                        // If this binding handler claims to control descendant bindings, make a note of this\r\n                        if (initResult && initResult['controlsDescendantBindings']) {\r\n                            if (bindingHandlerThatControlsDescendantBindings !== undefined) {\r\n                                throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\r\n                            }\r\n                            bindingHandlerThatControlsDescendantBindings = bindingKey;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Run update in its own computed wrapper\r\n                if (typeof handlerUpdateFn === 'function') {\r\n                    dependentObservable(\r\n                        () => handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, contextToExtend['$data'], contextToExtend),\r\n                        null,\r\n                        {disposeWhenNodeIsRemoved: node}\r\n                    );\r\n                }\r\n            } catch (ex) {\r\n                ex.message = `Unable to process binding \"${bindingKey}: ${bindings[bindingKey]}\"\\nMessage:  + ${ex.message}`;\r\n                throw ex;\r\n            }\r\n        });\r\n    }\r\n\r\n    let shouldBindDescendants = bindingHandlerThatControlsDescendantBindings === undefined;\r\n    return {\r\n        shouldBindDescendants,\r\n        bindingContextForDescendants: shouldBindDescendants && contextToExtend\r\n    };\r\n};\r\n\r\nconst _getBindingContext = (viewModelOrBindingContext, extendContextCallback) => {\r\n    if (viewModelOrBindingContext && viewModelOrBindingContext[IS_BINDING_CONTEXT_INSTANCE]) {\r\n        return viewModelOrBindingContext;\r\n    }\r\n    return new KoBindingContext(viewModelOrBindingContext, undefined, undefined, extendContextCallback);\r\n};\r\n\r\nexport const applyBindingAccessorsToNode = (node, bindings, viewModelOrBindingContext) => {\r\n    if (node.nodeType === 1) {\r\n        // If it's an element, workaround IE <= 8 HTML parsing weirdness\r\n        normaliseVirtualElementDomStructure(node);\r\n    }\r\n    return _applyBindingsToNodeInternal(node, bindings, _getBindingContext(viewModelOrBindingContext));\r\n};\r\n\r\nexport const applyBindingsToNode = (node, bindings, viewModelOrBindingContext) => {\r\n    let context = _getBindingContext(viewModelOrBindingContext);\r\n    return applyBindingAccessorsToNode(node, _makeBindingAccessors(bindings, context, node), context);\r\n};\r\n\r\nexport const applyBindingsToDescendants = (viewModelOrBindingContext, rootNode) => {\r\n    if (rootNode.nodeType === 1 || rootNode.nodeType === 8) {\r\n        _applyBindingsToDescendantsInternal(_getBindingContext(viewModelOrBindingContext), rootNode);\r\n    }\r\n};\r\n\r\nexport const applyBindings = function(viewModelOrBindingContext, rootNode, extendContextCallback) {\r\n    if (arguments.length < 2) {\r\n        rootNode = document.body;\r\n        if (!rootNode) {\r\n            throw Error(\"ko.applyBindings: could not find document.body; has the document been loaded?\");\r\n        }\r\n    } else if (!rootNode || (rootNode.nodeType !== 1 && rootNode.nodeType !== 8)) {\r\n        throw Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\r\n    }\r\n    _applyBindingsToNodeAndDescendantsInternal(_getBindingContext(viewModelOrBindingContext, extendContextCallback), rootNode);\r\n};\r\n\r\n// Retrieving binding context from arbitrary nodes\r\n// We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\r\nexport const contextFor = (node) => {\r\n    let bindingInfo = node && (node.nodeType === 1 || node.nodeType === 8) && getDomData(node, BOUND_ELEMENT_DOM_DATA_KEY);\r\n    return bindingInfo ? bindingInfo.context : undefined;\r\n};\r\n\r\nexport const dataFor = (node) => {\r\n    // violating DRY here to save extra calls, and copy bindingInfo-retrieval code from ko.contextFor \r\n    let bindingInfo = node && (node.nodeType === 1 || node.nodeType === 8) && getDomData(node, BOUND_ELEMENT_DOM_DATA_KEY),\r\n        context = bindingInfo && bindingInfo.context;\r\n    return context ? context.$data : undefined;\r\n};\r\n    \r\n","import {options} from '../options';\r\nimport {registerDependency} from './dependencyDetection';\r\nimport {setPrototypeOfOrExtend, trySetPrototypeOf, canSetPrototype, valuesArePrimitiveAndEqual} from '../utils';\r\nimport {SUBSCRIBABLE_PROTOTYPE} from './subscribable';\r\nimport {IS_OBSERVABLE} from './observableUtils';\r\nimport {deferredExtender} from './deferredExtender';\r\n\r\nconst LATEST_VALUE_KEY = Symbol('_latestValue');\r\n\r\nexport const observable = function (initialValue) {\r\n\r\n    let _observable = function () {\r\n        let _self = _observable,\r\n            _lastValue = _self[LATEST_VALUE_KEY];\r\n\r\n        // Lets assume, read happens more often than write\r\n        if (!arguments.length) {\r\n            // Read\r\n            registerDependency(_self); // The caller only needs to be notified of changes if they did a \"read\" operation\r\n            return _lastValue;\r\n        }\r\n        // Write\r\n        // Ignore writes if the value hasn't changed\r\n        let newValue = arguments[0],\r\n            equalityComparer = _self.equalityComparer;\r\n        \r\n        if (!equalityComparer || !equalityComparer(_lastValue, newValue)) {\r\n            _self.valueWillMutate();\r\n            _self[LATEST_VALUE_KEY] = newValue;\r\n            _self.valueHasMutated();\r\n        }\r\n        return this; // Permits chained assignments (on the parent view model, not the observable)\r\n    };\r\n\r\n    _observable[LATEST_VALUE_KEY] = initialValue;\r\n\r\n    // Inherit from './subscribable.js'\r\n    if (!canSetPrototype) {\r\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\r\n        Object.assign(_observable, SUBSCRIBABLE_PROTOTYPE);\r\n    }\r\n    \r\n    SUBSCRIBABLE_PROTOTYPE.init(_observable);\r\n\r\n    // Inherit from './observable.js'\r\n    setPrototypeOfOrExtend(_observable, OBSERVABLE_PROTOTYPE);\r\n\r\n    if (options.deferUpdates) {\r\n        deferredExtender(_observable, true);\r\n    }\r\n\r\n    return _observable;\r\n};\r\n\r\n// Define prototype for observables\r\nexport const OBSERVABLE_PROTOTYPE = {\r\n    [IS_OBSERVABLE]: true,\r\n    equalityComparer: valuesArePrimitiveAndEqual,\r\n    peek() {\r\n        return this[LATEST_VALUE_KEY];\r\n    },\r\n    valueHasMutated() {\r\n        this.notifySubscribers(this[LATEST_VALUE_KEY], 'spectate');\r\n        this.notifySubscribers(this[LATEST_VALUE_KEY]);\r\n    },\r\n    valueWillMutate() {\r\n        this.notifySubscribers(this[LATEST_VALUE_KEY], 'beforeChange');\r\n    }\r\n};\r\n\r\nobservable.fn = OBSERVABLE_PROTOTYPE;\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.observable constructor\r\ntrySetPrototypeOf(OBSERVABLE_PROTOTYPE, SUBSCRIBABLE_PROTOTYPE);\r\n","\n// Go through the items that have been added and deleted and try to find matches between them.\nexport const findMovesInArrayComparison = (left, right, limitFailedCompares) => {\n    if (!left.length || !right.length) {\n        return;\n    }\n    let failedCompares = 0, leftItem, rightItem;\n    \n    for (let l = 0, r;(!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n        for (r = 0; (rightItem = right[r]); ++r) {\n            if (leftItem['value'] === rightItem['value']) {\n                leftItem['moved'] = rightItem['index'];\n                rightItem['moved'] = leftItem['index'];\n                right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n                failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n                break;\n            }\n        }\n        failedCompares += r;\n    }\n};\n\n// Simple calculation based on Levenshtein distance.\nexport let compareArrays = (oldArray, newArray, options) => {\n    // For backward compatibility, if the third arg is actually a bool, interpret\n    // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n    options = (typeof options === 'boolean') ? {'dontLimitMoves': options} : (options || {});\n    oldArray = oldArray || [];\n    newArray = newArray || [];\n\n    return (oldArray.length < newArray.length) ?\n         compareSmallArrayToBigArray(oldArray, newArray, STATUS_NOT_IN_OLD, STATUS_NOT_IN_NEW, options) :\n         compareSmallArrayToBigArray(newArray, oldArray, STATUS_NOT_IN_NEW, STATUS_NOT_IN_OLD, options);\n};\n\n// allow overriding compareArrays for tests\nexport const _overrideCompareArrays = fn => compareArrays = fn;\n\nconst STATUS_NOT_IN_OLD = 'added'; \nconst STATUS_NOT_IN_NEW = 'deleted';\n\nfunction compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n    let myMin = Math.min,\n        myMax = Math.max,\n        editDistanceMatrix = [],\n        smlIndex, smlIndexMax = smlArray.length,\n        bigIndex, bigIndexMax = bigArray.length,\n        compareRange = (bigIndexMax - smlIndexMax) || 1,\n        maxDistance = smlIndexMax + bigIndexMax + 1,\n        thisRow, lastRow,\n        bigIndexMaxForRow, bigIndexMinForRow;\n\n    for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n        lastRow = thisRow;\n        editDistanceMatrix.push(thisRow = []);\n        bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n        bigIndexMinForRow = myMax(0, smlIndex - 1);\n        for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n            if (!bigIndex) {\n                thisRow[bigIndex] = smlIndex + 1;\n            } else if (!smlIndex) { // Top row - transform empty array into new array via additions\n                thisRow[bigIndex] = bigIndex + 1;\n            } else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1]) {\n                thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n            } else {\n                let northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n                let westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n                thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n            }\n        }\n    }\n\n    let editScript = [], meMinusOne, notInSml = [], notInBig = [], nextEditScriptIndex = 0;\n    for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n        meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n        if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex - 1]) {\n            notInSml.push(editScript[nextEditScriptIndex++] = {     // added\n                'status': statusNotInSml,\n                'value': bigArray[--bigIndex],\n                'index': bigIndex\n            });\n        } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n            notInBig.push(editScript[nextEditScriptIndex++] = {     // deleted\n                'status': statusNotInBig,\n                'value': smlArray[--smlIndex],\n                'index': smlIndex\n            });\n        } else {\n            --bigIndex;\n            --smlIndex;\n            if (!options['sparse']) {\n                editScript[nextEditScriptIndex++] = {\n                    'status': \"retained\",\n                    'value': bigArray[bigIndex]\n                };\n            }\n        }\n    }\n\n    // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n    // smlIndexMax keeps the time complexity of this algorithm linear.\n    findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n    return editScript.reverse();\n}\n","import {compareArrays, findMovesInArrayComparison} from '../binding/editDetection/compareArrays';\nimport {extenders} from './extenders';\n\nconst ARRAY_CHANGE_EVENT_NAME = 'arrayChange';\n\nexport const trackArrayChanges = extenders.trackArrayChanges = (target, options) => {\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n    target.compareArrayOptions = {};\n    if (options && typeof options === \"object\") {\n        Object.assign(target.compareArrayOptions, options);\n    }\n    target.compareArrayOptions.sparse = true;\n\n    // Only modify the target observable once\n    if (target.cacheDiffForKnownOperation) {\n        return;\n    }\n    let trackingChanges = false,\n        cachedDiff = null,\n        changeSubscription,\n        spectateSubscription,\n        pendingChanges = 0,\n        previousContents,\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n    target.beforeSubscriptionAdd = (event) => {\n        if (underlyingBeforeSubscriptionAddFunction) {\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\n        }\n        if (event === ARRAY_CHANGE_EVENT_NAME) {\n            _trackChanges();\n        }\n    };\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n    target.afterSubscriptionRemove = (event) => {\n        if (underlyingAfterSubscriptionRemoveFunction) {\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n        }\n        if (event === ARRAY_CHANGE_EVENT_NAME && !target.hasSubscriptionsForEvent(ARRAY_CHANGE_EVENT_NAME)) {\n            if (changeSubscription) {\n                changeSubscription.dispose();\n            }\n            if (spectateSubscription) {\n                spectateSubscription.dispose();\n            }\n            spectateSubscription = changeSubscription = null;\n            trackingChanges = false;\n            previousContents = undefined;\n        }\n    };\n\n    const _trackChanges = () => {\n        if (trackingChanges) {\n            // Whenever there's a new subscription and there are pending notifications, make sure all previous\n            // subscriptions are notified of the change so that all subscriptions are in sync.\n            notifyChanges();\n            return;\n        }\n\n        trackingChanges = true;\n\n        // Track how many times the array actually changed value\n        spectateSubscription = target.subscribe(() => ++pendingChanges, null, \"spectate\");\n\n        // Each time the array changes value, capture a clone so that on the next\n        // change it's possible to produce a diff\n        previousContents = [].concat(target.peek() || []);\n        cachedDiff = null;\n        changeSubscription = target.subscribe(notifyChanges);\n\n        function notifyChanges() {\n            if (!pendingChanges) {\n                return;\n            }\n            // Make a copy of the current contents and ensure it's an array\n            let currentContents = [].concat(target.peek() || []), changes;\n\n                // Compute the diff and issue notifications, but only if someone is listening\n            if (target.hasSubscriptionsForEvent(ARRAY_CHANGE_EVENT_NAME)) {\n                changes = _getChanges(previousContents, currentContents);\n            }\n\n            // Eliminate references to the old, removed items, so they can be GCed\n            previousContents = currentContents;\n            cachedDiff = null;\n            pendingChanges = 0;\n\n            if (changes && changes.length) {\n                target.notifySubscribers(changes, ARRAY_CHANGE_EVENT_NAME);\n            }\n        }\n    };\n\n    const _getChanges = (previousContents, currentContents) => {\n        // We try to re-use cached diffs.\n        // The scenarios where pendingChanges > 1 are when using rate limiting or deferred updates,\n        // which without this check would not be compatible with arrayChange notifications. Normally,\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\n        if (!cachedDiff || pendingChanges > 1) {\n            cachedDiff = compareArrays(previousContents, currentContents, target.compareArrayOptions);\n        }\n\n        return cachedDiff;\n    };\n\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n        // Only run if we're currently tracking changes for this observable array\n        // and there aren't any pending deferred notifications.\n        if (!trackingChanges || pendingChanges) {\n            return;\n        }\n        let diff = [],\n            arrayLength = rawArray.length,\n            argsLength = args.length,\n            offset = 0,\n            _nextPushDiffIndex = 0,\n            _pushDiff = (status, value, index) => diff[_nextPushDiffIndex++] = {status, value, index};\n\n        switch (operationName) {\n            case 'push':\n                offset = arrayLength; \n                // eslint-disable-line no-fallthrough\n            case 'unshift':\n                for (let index = 0; index < argsLength; index++) {\n                    _pushDiff('added', args[index], offset + index);\n                }\n                break;\n\n            case 'pop':\n                offset = arrayLength - 1; \n                // eslint-disable-line no-fallthrough\n            case 'shift':\n                if (arrayLength) {\n                    _pushDiff('deleted', rawArray[offset], offset);\n                }\n                break;\n\n            case 'splice': {\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n                let startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n                    endAddIndex = startIndex + argsLength - 2,\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n                    additions = [],\n                    nextAdditionIndex = 0,\n                    deletions = [],\n                    nextDeletionIndex = 0;\n\n                for (let index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n                    if (index < endDeleteIndex) {\n                        deletions[nextDeletionIndex++] = _pushDiff('deleted', rawArray[index], index);\n                    }\n                    if (index < endAddIndex) {\n                        additions[nextAdditionIndex++] = _pushDiff('added', args[argsIndex], index);\n                    }\n                }\n                findMovesInArrayComparison(deletions, additions);\n                break;\n            }\n            default:\n                return;\n        }\n        cachedDiff = diff;\n    };\n};\n","import {observable, OBSERVABLE_PROTOTYPE} from './observable';\nimport {setPrototypeOfOrExtend, trySetPrototypeOf} from '../utils';\nimport {isObservable, IS_OBSERVABLE_ARRAY} from './observableUtils';\nimport {trackArrayChanges} from './observableArray.changeTracking';\n\n\nexport const observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (!Array.isArray(initialValues)) {\n        throw new Error('The argument passed when initializing an observable array must be an array, or null, or undefined.');\n    }\n    let result = observable(initialValues);\n    setPrototypeOfOrExtend(result, OBSERVABLE_ARRAY_PROTOTYPE);\n    trackArrayChanges(result);\n    return result;\n};\n\nconst OBSERVABLE_ARRAY_PROTOTYPE = {\n    [IS_OBSERVABLE_ARRAY]: true,\n    remove(valueOrPredicate) {\n        let underlyingArray = this.peek(),\n            removedValues = [],\n            totalRemovedValues = 0,\n            predicate = typeof valueOrPredicate === 'function' && !isObservable(valueOrPredicate) ? valueOrPredicate : (value) => value === valueOrPredicate;\n        \n         for (let i = 0; i < underlyingArray.length; i++) {\n            let value = underlyingArray[i];\n            if (predicate(value)) {\n                if (!totalRemovedValues) {\n                    this.valueWillMutate();\n                }\n                if (underlyingArray[i] !== value) {\n                    throw Error('Array modified during remove; cannot remove item');\n                }\n                totalRemovedValues = removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (totalRemovedValues) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    removeAll(arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            let underlyingArray = this.peek(),\n                allValues = underlyingArray.slice();\n            \n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        return arrayOfValues ? this.remove(value => arrayOfValues.includes(value)) : [];\n    },\n\n    destroy(valueOrPredicate) {\n        let underlyingArray = this.peek(),\n            predicate = typeof valueOrPredicate === 'function' && !isObservable(valueOrPredicate) ? valueOrPredicate : (value) => value === valueOrPredicate;\n        this.valueWillMutate();\n        for (let i = underlyingArray.length - 1; i >= 0; i--) {\n            let value = underlyingArray[i];\n            if (predicate(value)) {\n                value['_destroy'] = true;\n            }\n        }\n        this.valueHasMutated();\n    },\n\n    destroyAll(arrayOfValues) {\n        // If you passed zero args, we destroy everything\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        return (arrayOfValues === undefined) ? this.destroy(() => true) : \n                arrayOfValues ? this.destroy(value => arrayOfValues.includes(value)) : [];\n    },\n\n    indexOf(item) {\n        return this().indexOf(item);\n    },\n\n    replace(oldItem, newItem) {\n        let underlyingArray = this(),\n            index = underlyingArray.indexOf(oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            underlyingArray[index] = newItem;\n            this.valueHasMutated();\n        }\n    },\n\n    sorted(compareFunction) {\n        let arrayCopy = this().slice();\n        return compareFunction ? arrayCopy.sort(compareFunction) : arrayCopy.sort();\n    },\n\n    reversed() {\n        return this().slice().reverse();\n    },\n\n    // Populate ko.observableArray.fn with read-only functions from native arrays\n    slice() {\n        return this().slice(...arguments);\n    }\n};\n\nobservableArray.fn = OBSERVABLE_ARRAY_PROTOTYPE;\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\ntrySetPrototypeOf(OBSERVABLE_ARRAY_PROTOTYPE, OBSERVABLE_PROTOTYPE);\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nfor (let methodName of ['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift']) {\n    OBSERVABLE_ARRAY_PROTOTYPE[methodName] = function () {\n        // Use 'peek' to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        let underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        let methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n        return methodCallResult === underlyingArray ? this : methodCallResult;\n    };\n}\n","import {arrayPushAll} from './utils';\n\nconst _memosMap = new Map();\n\nconst _randomMax8HexChars = () => (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n\nconst _generateRandomId = () => _randomMax8HexChars() + _randomMax8HexChars();\n\nconst _findMemoNodes = (rootNode, appendToArray) => {\n    if (!rootNode) {\n        return;\n    }\n    if (rootNode.nodeType === 8) {\n        let memoId = parseMemoText(rootNode.nodeValue);\n        if (memoId !== null) {\n            appendToArray.push({domNode: rootNode, memoId: memoId});\n        }\n    } else if (rootNode.nodeType === 1) {\n        for (let i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++) {\n            _findMemoNodes(childNodes[i], appendToArray);\n        }\n    }\n};\n\n\nexport const memoize = (callback) => {\n    if (typeof callback !== \"function\") {\n        throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n    }\n    let memoId = _generateRandomId();\n    _memosMap.set(memoId, callback);\n    return \"<!--[ko_memo:\" + memoId + \"]-->\";\n};\n\nexport const unmemoize = (memoId, callbackParams) => {\n    let callback = _memosMap.get(memoId);\n    if (!callback) {\n        throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n    }\n    try {\n        callbackParams ? callback(...callbackParams) : callback();\n        return true;\n    } finally {\n        delete _memosMap.delete(memoId);\n    }\n};\n\nexport const unmemoizeDomNodeAndDescendants = (domNode, extraCallbackParamsArray) => {\n    let memos = [];\n    _findMemoNodes(domNode, memos);\n    for (let i = 0, j = memos.length; i < j; i++) {\n        let node = memos[i].domNode;\n        let combinedParams = [node];\n        if (extraCallbackParamsArray) {\n            arrayPushAll(combinedParams, extraCallbackParamsArray);\n        }\n        unmemoize(memos[i].memoId, combinedParams);\n        node.nodeValue = ''; // Neuter this node so we don't try to unmemoize it again\n        if (node.parentNode) {\n            node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n        }\n    }\n};\n\nexport const parseMemoText = (memoText) => {\n    let match = memoText.match(/^\\[ko_memo:(.*?)]$/);\n    return match ? match[1] : null;\n};\n\n","import {memoize} from '../memoization';\nimport {bindingRewriteValidators, preProcessBindings, parseObjectLiteral} from '../binding/expressionRewriting';\nimport {applyBindingAccessorsToNode} from '../binding/bindingAttributeSyntax';\n\nconst MEMOIZE_DATA_BINDING_ATTR_SYNTAX_REGEX = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9-]+(?:=(?:\"[^\"]*\"|'[^']*'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\nconst MEMOIZE_VIRTUAL_CONTAINER_BINDING_SYNTAX_REGEX = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\nconst _validateDataBindValuesForRewriting = (keyValueArray) => {\n    let allValidators = bindingRewriteValidators;\n    for (let {key, value} of keyValueArray) {\n        // we can assume allValidators is an augmented Array and has the `hasOwnProperty` method\n        if (allValidators.hasOwnProperty(key)) {\n            let validator = allValidators[key];\n\n            if (typeof validator === 'function') {\n                let possibleErrorMessage = validator(value);\n                if (possibleErrorMessage) {\n                    throw new Error(possibleErrorMessage);\n                }\n            } else if (!validator) {\n                throw new Error('This template engine does not support the \\'' + key + '\\' binding within its templates');\n            }\n        }\n    }\n};\n\nconst _constructMemoizedTagReplacement = (dataBindAttributeValue, tagToRetain, nodeName, templateEngine) => {\n    let dataBindKeyValueArray = parseObjectLiteral(dataBindAttributeValue);\n    _validateDataBindValuesForRewriting(dataBindKeyValueArray);\n    let rewrittenDataBindAttributeValue = preProcessBindings(dataBindKeyValueArray, {valueAccessors: true});\n\n    // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n    // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n    // extra indirection.\n    let applyBindingsToNextSiblingScript =\n        'ko.__tr_ambtns(function($context,$element){return(function(){return{ ' + rewrittenDataBindAttributeValue + ' } })()},\\'' + nodeName.toLowerCase() + '\\')';\n    return templateEngine.createJavaScriptEvaluatorBlock(applyBindingsToNextSiblingScript) + tagToRetain;\n};\n\nexport const applyMemoizedBindingsToNextSibling = (bindings, nodeName) => memoize((domNode, bindingContext) => {\n    let nodeToBind = domNode.nextSibling;\n    if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n        applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n    }\n});\n\n\nexport const ensureTemplateIsRewritten = (template, templateEngine, templateDocument) => {\n    if (templateEngine.isTemplateRewritten(template, templateDocument)) {\n        return;\n    }\n    templateEngine.rewriteTemplate(template, htmlString => memoizeBindingAttributeSyntax(htmlString, templateEngine), templateDocument);\n};\n\nexport const memoizeBindingAttributeSyntax = (htmlString, templateEngine) => {\n    return htmlString\n        .replace(MEMOIZE_DATA_BINDING_ATTR_SYNTAX_REGEX,\n            (_0, tagToRetain, nodeName, _3, dataBindAttributeValue) => _constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine))\n        .replace(MEMOIZE_VIRTUAL_CONTAINER_BINDING_SYNTAX_REGEX,\n            (_0, dataBindAttributeValue) => _constructMemoizedTagReplacement(dataBindAttributeValue, /* tagToRetain: */ '<!-- ko -->', /* nodeName: */ '#comment', templateEngine));\n};\n","import {isObservable} from './observableUtils';\nimport {unwrapObservable} from '../utils';\n\nconst MAX_NESTED_OBSERVABLE_DEPTH = 10; // Escape the (unlikely) pathological case where an observable's current value is itself (or similar reference cycle)\n\nexport const toJS = function (rootObject) {\n    if (!arguments.length) {\n        throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n    }\n\n    // We just unwrap everything at every level in the object graph\n    return _mapJsObjectGraph(rootObject, valueToMap => {\n        // Loop because an observable's value might in turn be another observable wrapper\n        for (let i = 0; isObservable(valueToMap) && (i < MAX_NESTED_OBSERVABLE_DEPTH); i++) {\n            valueToMap = valueToMap();\n        }\n        return valueToMap;\n    });\n};\n\n// replacer and space are optional\nexport const toJSON = (rootObject, replacer, space) => {\n    let plainJavaScriptObject = toJS(rootObject);\n    return JSON.stringify(unwrapObservable(plainJavaScriptObject), replacer, space);\n};\n\nconst _mapJsObjectGraph = (rootObject, mapInputCallback, visitedObjects) => {\n    visitedObjects = visitedObjects || new Map();\n\n    rootObject = mapInputCallback(rootObject);\n    let canHaveProperties = (typeof rootObject === \"object\") && (rootObject !== null) && (rootObject !== undefined) &&\n        (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) &&\n        (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n    if (!canHaveProperties) {\n        return rootObject;\n    }\n\n    let outputProperties = Array.isArray(rootObject) ? [] : {};\n    visitedObjects.set(rootObject, outputProperties);\n\n    _visitPropertiesOrArrayEntries(rootObject, indexer => {\n        let propertyValue = mapInputCallback(rootObject[indexer]);\n\n        switch (typeof propertyValue) {\n            case 'boolean':\n            case 'number':\n            case 'string':\n            case 'function':\n                outputProperties[indexer] = propertyValue;\n                break;\n            case 'object':\n            case 'undefined': {\n                let previouslyMappedValue = visitedObjects.get(propertyValue);\n                outputProperties[indexer] = (previouslyMappedValue !== undefined)\n                    ? previouslyMappedValue\n                    : _mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n                break;\n            }\n        }\n    });\n\n    return outputProperties;\n};\n\nconst _visitPropertiesOrArrayEntries = (rootObject, visitorCallback) => {\n    if (rootObject instanceof Array) {\n        for (let i = 0; i < rootObject.length; i++) {\n            visitorCallback(i);\n        }\n\n        // For arrays, also respect toJSON property for custom mappings (fixes #278)\n        if (typeof rootObject['toJSON'] === 'function') {\n            visitorCallback('toJSON');\n        }\n    } else {\n        for (let propertyName in rootObject) {\n            visitorCallback(propertyName);\n        }\n    }\n};\n","import {nextDomDataKey, getDomData, setDomData} from '../../utils.domData';\nimport {observable} from '../../subscribables/observable';\nimport {compareArrays} from './compareArrays';\nimport {arrayForEach, anyDomNodeIsAttachedToDocument, fixUpContinuousNodeArray, replaceDomNodes} from '../../utils';\nimport {dependentObservable} from '../../subscribables/dependentObservable';\nimport {ignoreDependencyDetection} from '../../subscribables/dependencyDetection';\nimport {insertAfter} from '../../virtualElements';\nimport {cleanNode, removeNode} from '../../utils.domNodeDisposal';\n\nconst LAST_MAPPING_RESULT_DOM_DATA_KEY = nextDomDataKey();\nconst DELETED_ITEM_DUMMY_VALUE = nextDomDataKey();\n\n// Objective:\n// * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n//   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n// * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n//   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n//   previously mapped - retain those nodes, and just insert/delete other ones\n\n// \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n// You can use this, for example, to activate bindings on those nodes.\n\nconst _mapNodeAndRefreshWhenChanged = (containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) => {\n    // Map this array value inside a dependentObservable so we re-map when any dependency changes\n    let mappedNodes = [];\n    let _dependentObservable = dependentObservable(() => {\n            let newMappedNodes = mapping(valueToMap, index, fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n            if (mappedNodes.length) {\n                replaceDomNodes(mappedNodes, newMappedNodes);\n                if (callbackAfterAddingNodes) {\n                    ignoreDependencyDetection(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n                }\n            }\n\n            // Replace the contents of the mappedNodes array, thereby updating the record\n            // of which nodes would be deleted if valueToMap was itself later removed\n            mappedNodes.length = 0;\n            \n            for (let i = 0, len = newMappedNodes.length; i < len; i++) {\n                mappedNodes[i] = newMappedNodes[i];\n            }\n            \n        }, null, {\n            disposeWhenNodeIsRemoved: containerNode, \n            disposeWhen: () => !anyDomNodeIsAttachedToDocument(mappedNodes)\n        });\n    \n    return {\n        mappedNodes,\n        dependentObservable: _dependentObservable.isActive() ? _dependentObservable : undefined\n    };\n};\n\nexport const setDomNodeChildrenFromArrayMapping = (domNode, array, mapping, options, callbackAfterAddingNodes, editScript) => {\n    array = array || [];\n    if (typeof array.length === 'undefined') { \n        array = [array]; // Coerce single value into array\n    }\n\n    options = options || {};\n    let lastMappingResult = getDomData(domNode, LAST_MAPPING_RESULT_DOM_DATA_KEY);\n    let isFirstExecution = !lastMappingResult;\n\n    // Build the new mapping result\n    let newMappingResult = [];\n    let lastMappingResultIndex = 0;\n    let currentArrayIndex = 0;\n\n    let nodesToDelete = [];\n    let itemsToMoveFirstIndexes = [];\n    let itemsForBeforeRemoveCallbacks = [];\n    let itemsForMoveCallbacks = [];\n    let itemsForAfterAddCallbacks = [];\n    let mapData;\n    let countWaitingForRemove = 0;\n\n    const _itemAdded = (value) => {\n        mapData = {arrayEntry: value, indexObservable: observable(currentArrayIndex++)};\n        newMappingResult.push(mapData);\n        if (!isFirstExecution) {\n            itemsForAfterAddCallbacks.push(mapData);\n        }\n    };\n\n    const _itemMovedOrRetained = (oldPosition) => {\n        mapData = lastMappingResult[oldPosition];\n        let _indexObservable = mapData.indexObservable;\n        if (currentArrayIndex !== _indexObservable.peek()) {\n            itemsForMoveCallbacks.push(mapData);\n        }\n        // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n        _indexObservable(currentArrayIndex++);\n        fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n        newMappingResult.push(mapData);\n    };\n\n    const _callCallback = (callback, items) => {\n        for (let i = 0, len = items.length; i < len; i++) {\n            let item = items[i];\n            for (let node of item.mappedNodes) {\n                callback(node, i, item.arrayEntry);\n            }\n        }\n    };\n\n    if (isFirstExecution) {\n        array.length && arrayForEach(array, _itemAdded);\n    } else {\n        if (!editScript || (lastMappingResult && lastMappingResult['_countWaitingForRemove'])) {\n            // Compare the provided array against the previous one\n            let lastArray = lastMappingResult.map(x => x.arrayEntry),\n                compareOptions = {\n                    'dontLimitMoves': options['dontLimitMoves'],\n                    'sparse': true\n                };\n            editScript = compareArrays(lastArray, array, compareOptions);\n        }\n\n        for (let i = 0, editScriptItem, movedIndex, itemIndex; editScriptItem = editScript[i]; i++) {\n            movedIndex = editScriptItem['moved'];\n            itemIndex = editScriptItem['index'];\n            switch (editScriptItem['status']) {\n                case \"deleted\":\n                    while (lastMappingResultIndex < itemIndex) {\n                        _itemMovedOrRetained(lastMappingResultIndex++);\n                    }\n                    if (movedIndex === undefined) {\n                        mapData = lastMappingResult[lastMappingResultIndex];\n\n                        // Stop tracking changes to the mapping for these nodes\n                        if (mapData.dependentObservable) {\n                            mapData.dependentObservable.dispose();\n                            mapData.dependentObservable = undefined;\n                        }\n\n                        // Queue these nodes for later removal\n                        if (fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n                            if (options['beforeRemove']) {\n                                newMappingResult.push(mapData);\n                                countWaitingForRemove++;\n                                if (mapData.arrayEntry === DELETED_ITEM_DUMMY_VALUE) {\n                                    mapData = null;\n                                } else {\n                                    itemsForBeforeRemoveCallbacks.push(mapData);\n                                }\n                            }\n                            if (mapData) {\n                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n                            }\n                        }\n                    }\n                    lastMappingResultIndex++;\n                    break;\n\n                case \"added\":\n                    while (currentArrayIndex < itemIndex) {\n                        _itemMovedOrRetained(lastMappingResultIndex++);\n                    }\n                    if (movedIndex !== undefined) {\n                        itemsToMoveFirstIndexes.push(newMappingResult.length);\n                        _itemMovedOrRetained(movedIndex);\n                    } else {\n                        _itemAdded(editScriptItem['value']);\n                    }\n                    break;\n            }\n        }\n\n        while (currentArrayIndex < array.length) {\n            _itemMovedOrRetained(lastMappingResultIndex++);\n        }\n\n        // Record that the current view may still contain deleted items\n        // because it means we won't be able to use a provided editScript.\n        newMappingResult['_countWaitingForRemove'] = countWaitingForRemove;\n    }\n\n    // Store a copy of the array items we just considered so we can difference it next time\n    setDomData(domNode, LAST_MAPPING_RESULT_DOM_DATA_KEY, newMappingResult);\n\n    // Call beforeMove first before any changes have been made to the DOM\n    options.beforeMove && _callCallback(options.beforeMove, itemsForMoveCallbacks);\n\n    // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n    nodesToDelete.forEach(options.beforeRemove ? cleanNode : removeNode);\n\n    let lastNode, \n        nodeToInsert, \n        mappedNodes;\n\n    // Since most browsers remove the focus from an element when it's moved to another location,\n    // save the focused element and try to restore it later.\n    let activeElement = domNode.ownerDocument.activeElement;\n\n    // Try to reduce overall moved nodes by first moving the ones that were marked as moved by the edit script\n    if (itemsToMoveFirstIndexes.length) {\n        let i;\n        while ((i = itemsToMoveFirstIndexes.shift()) !== undefined) {\n            mapData = newMappingResult[i];\n            for (lastNode = undefined; i;) {\n                if ((mappedNodes = newMappingResult[--i].mappedNodes) && mappedNodes.length) {\n                    lastNode = mappedNodes[mappedNodes.length - 1];\n                    break;\n                }\n            }\n            for (let j = 0; nodeToInsert = mapData.mappedNodes[j]; lastNode = nodeToInsert, j++) {\n                insertAfter(domNode, nodeToInsert, lastNode);\n            }\n        }\n    }\n\n    // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n    for (let i = 0; mapData = newMappingResult[i]; i++) {\n        // Get nodes for newly added items\n        if (!mapData.mappedNodes) {\n            Object.assign(mapData, _mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n        }\n\n        // Put nodes in the right place if they aren't there already\n        for (let j = 0; nodeToInsert = mapData.mappedNodes[j]; lastNode = nodeToInsert, j++) {\n            insertAfter(domNode, nodeToInsert, lastNode);\n        }\n\n        // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n        if (!mapData.initialized && callbackAfterAddingNodes) {\n            callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n            mapData.initialized = true;\n            lastNode = mapData.mappedNodes[mapData.mappedNodes.length - 1];     // get the last node again since it may have been changed by a preprocessor\n        }\n    }\n\n    // Restore the focused element if it had lost focus\n    if (activeElement && domNode.ownerDocument.activeElement !== activeElement) {\n        activeElement.focus();\n    }\n\n    // If there's a beforeRemove callback, call it after reordering.\n    // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n    // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n    // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n    // Perhaps we'll make that change in the future if this scenario becomes more common.\n    options.beforeRemove && _callCallback(options.beforeRemove, itemsForBeforeRemoveCallbacks);\n\n    // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n    // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n    // with an actual item in the array and appear as \"retained\" or \"moved\".\n    for (let i = 0, len = itemsForBeforeRemoveCallbacks.length; i < len; ++i) {\n        itemsForBeforeRemoveCallbacks[i].arrayEntry = DELETED_ITEM_DUMMY_VALUE;\n    }\n\n    // Finally call afterMove and afterAdd callbacks\n    options.afterMove && _callCallback(options.afterMove, itemsForMoveCallbacks);\n    options.afterAdd &&  _callCallback(options.afterAdd, itemsForAfterAddCallbacks);\n};\n","import {getDomData, setDomData, nextDomDataKey} from '../utils.domData';\nimport {setHtml} from '../utils.domManipulation';\nimport {parseHtmlForTemplateNodes} from '../utils.domManipulation';\n\n// A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n// logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n//\n// Two are provided by default:\n//  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n//  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n//                                           without reading/writing the actual element text content, since it will be overwritten\n//                                           with the rendered template output.\n// You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n// Template sources need to have the following functions:\n//   text()            - returns the template text from your storage location\n//   text(value)       - writes the supplied template text to your storage location\n//   data(key)         - reads values stored using data(key, value) - see below\n//   data(key, value)  - associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n//\n// Optionally, template sources can also have the following functions:\n//   nodes()            - returns a DOM element containing the nodes of this template, where available\n//   nodes(value)       - writes the given DOM element to your storage location\n// If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n// for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n//\n// Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n// using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\n// ---- ko.templateSources.domElement -----\n\n// template types\nconst TEMPLATE_SCRIPT = 1;\nconst TEMPLATE_TEXTAREA = 2;\nconst TEMPLATE_TEMPLATE = 3;\nconst TEMPLATE_ELEMENT = 4;\n\nconst DOM_DATA_KEY_PREFIX = nextDomDataKey() + '_';\nconst TEMPLATES_DOM_DATA_KEY = nextDomDataKey();\n\nconst SKIP_TEMPLATE_TYPE = Symbol();\n\nconst _getTemplateDomData = (element) => getDomData(element, TEMPLATES_DOM_DATA_KEY) || {};\nconst _setTemplateDomData = (element, data) => setDomData(element, TEMPLATES_DOM_DATA_KEY, data);\n\nexport class DomElementTemplate {\n    constructor(element /*, skipTemplateType */) {\n        this.domElement = element;\n\n        if (element && arguments[1] !== SKIP_TEMPLATE_TYPE) {\n            let tagNameLower = element.tagName && element.tagName.toLowerCase();\n            this.templateType = tagNameLower === 'script' ? TEMPLATE_SCRIPT :\n                                tagNameLower === 'textarea' ? TEMPLATE_TEXTAREA :\n                                // For browsers with proper <template> element support, where the .content property gives a document fragment\n                                tagNameLower === 'template' && element.content && element.content.nodeType === 11 ? TEMPLATE_TEMPLATE : TEMPLATE_ELEMENT;\n        }\n    }\n\n    text(/* valueToWrite */) {\n        let elemContentsProperty = this.templateType === TEMPLATE_SCRIPT ? 'text' : \n                                   this.templateType === TEMPLATE_TEXTAREA ? 'value' : 'innerHTML';\n\n        if (!arguments.length) {\n            return this.domElement[elemContentsProperty];\n        }\n        let valueToWrite = arguments[0];\n        if (elemContentsProperty === 'innerHTML') {\n            setHtml(this.domElement, valueToWrite);\n        } else {\n            this.domElement[elemContentsProperty] = valueToWrite;\n        }\n    }\n\n    data(key /*, valueToWrite */) {\n        if (arguments.length === 1) {\n            return getDomData(this.domElement, DOM_DATA_KEY_PREFIX + key);\n        } \n        setDomData(this.domElement, DOM_DATA_KEY_PREFIX + key, arguments[1]);\n    }\n\n    nodes(/* valueToWrite */) {\n        let element = this.domElement;\n        if (!arguments.length) {\n            let templateData = _getTemplateDomData(element),\n                nodes = templateData.containerData || (\n                        this.templateType === TEMPLATE_TEMPLATE ? element.content :\n                        this.templateType === TEMPLATE_ELEMENT ? element : undefined);\n            \n            if (!nodes || templateData.alwaysCheckText) {\n                // If the template is associated with an element that stores the template as text,\n                // parse and cache the nodes whenever there's new text content available. This allows\n                // the user to update the template content by updating the text of template node.\n                let text = this.text();\n                if (text && text !== templateData.textData) {\n                    nodes = parseHtmlForTemplateNodes(text, element.ownerDocument);\n                    _setTemplateDomData(element, {containerData: nodes, textData: text, alwaysCheckText: true});\n                }\n            }\n            return nodes;\n        } \n    \n        let valueToWrite = arguments[0];\n        if (this.templateType !== undefined) {\n            this.text('');   // clear the text from the node\n        }\n        _setTemplateDomData(element, {containerData: valueToWrite});\n    }\n}\n\n// ---- ko.templateSources.anonymousTemplate -----\n// Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n// For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n// Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\nexport class AnonymousTemplate extends DomElementTemplate {\n    constructor(element) {\n        super(element, SKIP_TEMPLATE_TYPE);\n    }\n\n    /**\n     * @override\n     */\n    text(/* valueToWrite */) {\n        if (!arguments.length) {\n            let templateData = _getTemplateDomData(this.domElement);\n            if (templateData.textData === undefined && templateData.containerData) {\n                templateData.textData = templateData.containerData.innerHTML;\n            }\n            return templateData.textData;\n        } \n        _setTemplateDomData(this.domElement, {textData: arguments[0]});\n    }\n}\n","// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nimport {AnonymousTemplate, DomElementTemplate} from './templateSources';\n\nexport class TemplateEngine {\n\n    constructor() {\n        this.allowTemplateRewriting = true;\n    }\n    \n    renderTemplateSource(templateSource, bindingContext, options, templateDocument) {\n        throw new Error(\"Override renderTemplateSource\");\n    }\n    \n    createJavaScriptEvaluatorBlock(script) {\n        throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n    }\n\n    makeTemplateSource(template, templateDocument) {\n        if (typeof template === \"string\") {\n            // Named template\n            let elem = (templateDocument || document).getElementById(template);\n            if (elem) {\n                return new DomElementTemplate(elem);\n            }\n            throw new Error(\"Cannot find template with ID \" + template);\n        }\n        let nodeType = template.nodeType;\n        if (nodeType === 1 || nodeType === 8) {\n            // Anonymous template (from element or comment node)\n            return new AnonymousTemplate(template);\n        } \n        throw new Error(\"Unknown template type: \" + template);\n    }\n\n    renderTemplate(template, bindingContext, options, templateDocument) {\n        let templateSource = this.makeTemplateSource(template, templateDocument);\n        return this.renderTemplateSource(templateSource, bindingContext, options, templateDocument);\n    }\n\n    isTemplateRewritten(template, templateDocument) {\n        // Skip rewriting if requested\n        if (!this.allowTemplateRewriting) {\n            return true;\n        }\n        let templateSource = this.makeTemplateSource(template, templateDocument);\n        return templateSource.data('isRewritten');\n    }\n\n    rewriteTemplate(template, rewriterCallback, templateDocument) {\n        let templateSource = this.makeTemplateSource(template, templateDocument),\n            rewritten = rewriterCallback(templateSource.text());\n        templateSource.text(rewritten);\n        templateSource.data('isRewritten', true);\n    }\n}\n","import {nextSibling, setDomNodeChildren, emptyNode, childNodes, allowedBindings} from '../virtualElements';\nimport {unmemoizeDomNodeAndDescendants} from '../memoization';\nimport {fixUpContinuousNodeArray, replaceDomNodes, moveCleanedNodesToContainerElement, unwrapObservable, domNodeIsAttachedToDocument} from '../utils';\nimport {ensureTemplateIsRewritten} from './templateRewriting';\nimport {isObservableArray, isObservable} from '../subscribables/observableUtils';\nimport {bindingRewriteValidators, keyValueArrayContainsKey} from '../binding/expressionRewriting';\nimport {applyBindings, bindingEvent, EVENT_CHILDREN_COMPLETE, KoBindingContext} from '../binding/bindingAttributeSyntax';\nimport {ignoreDependencyDetection} from '../subscribables/dependencyDetection';\nimport {setDomNodeChildrenFromArrayMapping} from '../binding/editDetection/arrayToDomNodeChildren';\nimport {getDomData, setDomData, nextDomDataKey} from '../utils.domData';\nimport {AnonymousTemplate} from './templateSources';\nimport {parseObjectLiteral} from '../binding/expressionRewriting';\nimport {TemplateEngine} from './templateEngine';\nimport {bindingHandlers} from '../binding/bindingHandlers';\nimport {memoize} from '../memoization';\nimport {options as koOptions} from '../options';\nimport {dependentObservable} from '../subscribables/dependentObservable';\nimport {bindingProviderInstance} from '../binding/bindingProvider';\n\n\nlet _templateEngine;\n\nexport const setTemplateEngine = (templateEngine) => {\n    if (templateEngine && !(templateEngine instanceof TemplateEngine)) {\n        throw new Error('templateEngine must inherit from ko.templateEngine');\n    }\n    _templateEngine = templateEngine;\n};\n\nconst _invokeForEachNodeInContinuousRange = (firstNode, lastNode, action) => {\n    let node, \n        nextInQueue = firstNode, \n        firstOutOfRangeNode = nextSibling(lastNode);\n    \n    while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n        nextInQueue = nextSibling(node);\n        action(node, nextInQueue);\n    }\n};\n\nconst _activateBindingsOnContinuousNodeArray = (continuousNodeArray, bindingContext) => {\n    // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n    // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n    // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n    // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n    // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\n    if (!continuousNodeArray.length) {\n        return;\n    }\n    \n    let firstNode = continuousNodeArray[0],\n        lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n        parentNode = firstNode.parentNode;\n\n    if (bindingProviderInstance.preprocessNode) {\n        _invokeForEachNodeInContinuousRange(firstNode, lastNode, (node, nextNodeInRange) => {\n            let nodePreviousSibling = node.previousSibling,\n                newNodes = bindingProviderInstance.preprocessNode(node);\n            if (newNodes) {\n                if (node === firstNode) {\n                    firstNode = newNodes[0] || nextNodeInRange;\n                }\n                if (node === lastNode) {\n                    lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n                }\n            }\n        });\n\n        // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n        // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n        // first node needs to be in the array).\n        continuousNodeArray.length = 0;\n        if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n            return;\n        }\n        if (firstNode === lastNode) {\n            continuousNodeArray[0] = firstNode;\n        } else {\n            continuousNodeArray.push(firstNode, lastNode);\n            fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n        }\n    }\n\n    // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n    // whereas a regular applyBindings won't introduce new memoized nodes\n    _invokeForEachNodeInContinuousRange(firstNode, lastNode, \n        (node) => (node.nodeType === 1 || node.nodeType === 8) && applyBindings(bindingContext, node)\n    );\n    \n    _invokeForEachNodeInContinuousRange(firstNode, lastNode, \n        (node) => (node.nodeType === 1 || node.nodeType === 8) && unmemoizeDomNodeAndDescendants(node, [bindingContext])\n    );\n\n    // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n    fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n};\n\nconst _getFirstNodeFromPossibleArray = (nodeOrNodeArray) => nodeOrNodeArray.nodeType ? nodeOrNodeArray :\n                                                            nodeOrNodeArray.length ? nodeOrNodeArray[0] : null;\n\nconst _executeTemplate = (targetNodeOrNodeArray, renderMode, template, bindingContext, options) => {\n    options = options || {};\n    let firstTargetNode = targetNodeOrNodeArray && _getFirstNodeFromPossibleArray(targetNodeOrNodeArray),\n        templateDocument = (firstTargetNode || template || {}).ownerDocument,\n        templateEngineToUse = (options.templateEngine || _templateEngine);\n    \n    ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n    \n    let renderedNodesArray = templateEngineToUse.renderTemplate(template, bindingContext, options, templateDocument);\n\n    // Loosely check result is an array of DOM nodes\n    if (typeof renderedNodesArray.length !== 'number' || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType !== 'number')) {\n        throw new Error('Template engine must return an array of DOM nodes');\n    }\n\n    let haveAddedNodesToParent = false;\n    if (renderMode === 'replaceChildren') {\n        setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n        haveAddedNodesToParent = true;\n    } else if (renderMode === 'replaceNode') {\n        replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n        haveAddedNodesToParent = true;\n    } else if (renderMode !== 'ignoreTargetNode') {\n        throw new Error('Unknown renderMode: ' + renderMode);\n    }\n\n    if (haveAddedNodesToParent) {\n        _activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n        if (options.afterRender) {\n            ignoreDependencyDetection(options.afterRender, null, [renderedNodesArray, bindingContext[options['as'] || '$data']]);\n        }\n        if (renderMode === 'replaceChildren') {\n            bindingEvent.notify(targetNodeOrNodeArray, EVENT_CHILDREN_COMPLETE);\n        }\n    }\n\n    return renderedNodesArray;\n};\n\nconst _resolveTemplateName = (template, data, context) => {\n    // The template can be specified as:\n    if (isObservable(template)) {\n        // 1. An observable, with string value\n        return template();\n    } else if (typeof template === 'function') {\n        // 2. A function of (data, context) returning a string\n        return template(data, context);\n    } \n    // 3. A string\n    return template;\n};\n\nexport const renderTemplate = (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) => {\n    options = options || {};\n    if (!options.templateEngine && !_templateEngine) {\n        throw new Error('Set a template engine before calling renderTemplate');\n    }\n    renderMode = renderMode || 'replaceChildren';\n\n    if (targetNodeOrNodeArray) {\n        let firstTargetNode = _getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\n        let whenToDispose = function () {\n            return (!firstTargetNode) || !domNodeIsAttachedToDocument(firstTargetNode);\n        }; // Passive disposal (on next evaluation)\n        let activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode === 'replaceNode') ? firstTargetNode.parentNode : firstTargetNode;\n\n        return dependentObservable( // So the DOM is automatically updated when any dependency changes\n            function () {\n                // Ensure we've got a proper binding context to work with\n                let bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof KoBindingContext))\n                    ? dataOrBindingContext\n                    : new KoBindingContext(dataOrBindingContext, null, null, null, {'exportDependencies': true});\n\n                let templateName = _resolveTemplateName(template, bindingContext['$data'], bindingContext),\n                    renderedNodesArray = _executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\n                if (renderMode === 'replaceNode') {\n                    targetNodeOrNodeArray = renderedNodesArray;\n                    firstTargetNode = _getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n                }\n            },\n            null,\n            {disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved}\n        );\n    } \n    // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n    return memoize(function (domNode) {\n        renderTemplate(template, dataOrBindingContext, options, domNode, 'replaceNode');\n    });\n};\n\nexport const renderTemplateForEach = (template, arrayOrObservableArray, options, targetNode, parentBindingContext) => {\n    // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n    // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n    let arrayItemContext, \n        asName = options['as'];\n\n    // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n    let executeTemplateForArrayItem = (arrayValue, index) => {\n        // Support selecting template as a function of the data being rendered\n        arrayItemContext = parentBindingContext.createChildContext(arrayValue, {\n            'as': asName,\n            'noChildContext': options['noChildContext'],\n            'extend': (context) => {\n                context['$index'] = index;\n                if (asName) {\n                    context[asName + 'Index'] = index;\n                }\n            }\n        });\n\n        let templateName = _resolveTemplateName(template, arrayValue, arrayItemContext);\n        return _executeTemplate(targetNode, 'ignoreTargetNode', templateName, arrayItemContext, options);\n    };\n\n    // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n    let activateBindingsCallback = (arrayValue, addedNodesArray, index) => {\n            _activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n            if (options.afterRender) {\n                options.afterRender(addedNodesArray, arrayValue);\n            }\n\n            // release the \"cache\" variable, so that it can be collected by\n            // the GC when its value isn't used from within the bindings anymore.\n            arrayItemContext = null;\n        };\n    \n    let _setDomNodeChildrenFromArrayMappingIgnoringUnwrapped = (newArray, changeList) => {\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n            ignoreDependencyDetection(setDomNodeChildrenFromArrayMapping, null, [targetNode, newArray, executeTemplateForArrayItem, options, activateBindingsCallback, changeList]);\n            bindingEvent.notify(targetNode, EVENT_CHILDREN_COMPLETE);\n        };\n\n    let shouldHideDestroyed = (options.includeDestroyed === false) || (koOptions.foreachHidesDestroyed && !options.includeDestroyed);\n\n    if (!shouldHideDestroyed && !options.beforeRemove && isObservableArray(arrayOrObservableArray)) {\n        _setDomNodeChildrenFromArrayMappingIgnoringUnwrapped(arrayOrObservableArray.peek());\n\n        let subscription = arrayOrObservableArray.subscribe(changeList => _setDomNodeChildrenFromArrayMappingIgnoringUnwrapped(arrayOrObservableArray(), changeList), null, 'arrayChange');\n        subscription.disposeWhenNodeIsRemoved(targetNode);\n\n        return subscription;\n    } \n    \n    return dependentObservable(() => {\n        let unwrappedArray = unwrapObservable(arrayOrObservableArray) || [];\n        if (typeof unwrappedArray.length === 'undefined') { // Coerce single value into array\n            unwrappedArray = [unwrappedArray];\n        }\n\n        if (shouldHideDestroyed && unwrappedArray.length) {\n            // Filter out any entries marked as destroyed\n            unwrappedArray = unwrappedArray.filter(item => item === undefined || item === null || !unwrapObservable(item['_destroy'])); \n        }\n        _setDomNodeChildrenFromArrayMappingIgnoringUnwrapped(unwrappedArray);\n\n    }, null, {disposeWhenNodeIsRemoved: targetNode});\n};\n\nconst TEMPLATE_COMPUTED_DOM_DATA_KEY = nextDomDataKey();\n\nconst _disposeOldComputedAndStoreNewOne = (element, newComputed) => {\n    let oldComputed = getDomData(element, TEMPLATE_COMPUTED_DOM_DATA_KEY);\n    if (oldComputed && (typeof oldComputed.dispose === 'function')) {\n        oldComputed.dispose();\n    }\n    setDomData(element, TEMPLATE_COMPUTED_DOM_DATA_KEY, (newComputed && (!newComputed.isActive || newComputed.isActive())) ? newComputed : undefined);\n};\n\nconst CLEAN_CONTAINER_DOM_DATA_KEY = nextDomDataKey();\n\nbindingHandlers.template = {\n    init(element, valueAccessor) {\n        // Support anonymous templates\n        let bindingValue = unwrapObservable(valueAccessor());\n        if (typeof bindingValue === 'string' || 'name' in bindingValue) {\n            // It's a named template - clear the element\n            emptyNode(element);\n        } else if ('nodes' in bindingValue) {\n            // We've been given an array of DOM nodes. Save them as the template source.\n            // There is no known use case for the node array being an observable array (if the output\n            // varies, put that behavior *into* your template - that's what templates are for), and\n            // the implementation would be a mess, so assert that it's not observable.\n            let nodes = bindingValue['nodes'] || [];\n            if (isObservable(nodes)) {\n                throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n            }\n\n            // If the nodes are already attached to a KO-generated container, we reuse that container without moving the\n            // elements to a new one (we check only the first node, as the nodes are always moved together)\n            let container = nodes[0] && nodes[0].parentNode;\n            if (!container || !getDomData(container, CLEAN_CONTAINER_DOM_DATA_KEY)) {\n                container = moveCleanedNodesToContainerElement(nodes);\n                setDomData(container, CLEAN_CONTAINER_DOM_DATA_KEY, true);\n            }\n\n            new AnonymousTemplate(element).nodes(container);\n        } else {\n            // It's an anonymous template - store the element contents, then clear the element\n            let templateNodes = childNodes(element);\n            if (templateNodes.length) {\n                let container = moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n                new AnonymousTemplate(element).nodes(container);\n            } else {\n                throw new Error('Anonymous template defined, but no template content was provided');\n            }\n        }\n        return {controlsDescendantBindings: true};\n    },\n    update(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        let value = valueAccessor(),\n            options = unwrapObservable(value),\n            shouldDisplay = true,\n            templateComputed = null,\n            template;\n\n        if (typeof options === 'string') {\n            template = value;\n            options = {};\n        } else {\n            template = ('name' in options) ? options['name'] : element;\n\n            // Support \"if\"/\"ifnot\" conditions\n            if ('if' in options) {\n                shouldDisplay = unwrapObservable(options['if']);\n            }\n            if (shouldDisplay && 'ifnot' in options) {\n                shouldDisplay = !unwrapObservable(options['ifnot']);\n            }\n            // Don't show anything if an empty name is given (see #2446)\n            if (shouldDisplay && !template) {\n                shouldDisplay = false;\n            }\n        }\n\n        if ('foreach' in options) {\n            // Render once for each data point (treating data set as empty if shouldDisplay==false)\n            let dataArray = (shouldDisplay && options['foreach']) || [];\n            templateComputed = renderTemplateForEach(template, dataArray, options, element, bindingContext);\n        } else if (!shouldDisplay) {\n            emptyNode(element);\n        } else {\n            // Render once for this single data point (or use the viewModel if no data was provided)\n            let innerBindingContext = bindingContext;\n            if ('data' in options) {\n                innerBindingContext = bindingContext.createChildContext(options['data'], {\n                    'as': options['as'],\n                    'noChildContext': options['noChildContext'],\n                    'exportDependencies': true\n                });\n            }\n            templateComputed = renderTemplate(template, innerBindingContext, options, element);\n        }\n\n        // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n        _disposeOldComputedAndStoreNewOne(element, templateComputed);\n    }\n};\n\n// Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\nbindingRewriteValidators.template = (bindingValue) => {\n    let parsedBindingValue = parseObjectLiteral(bindingValue);\n\n    if ((parsedBindingValue.length === 1) && parsedBindingValue[0].unknown) {\n        return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n    }\n    if (keyValueArrayContainsKey(parsedBindingValue, 'name')) {\n        return null; // Named templates can be rewritten, so return \"no error\"\n    }\n    return 'This template engine does not support anonymous templates nested within its templates';\n};\n\nallowedBindings.template = true;\n","import {setTemplateEngine} from '../templating';\nimport {TemplateEngine} from '../templateEngine';\nimport {parseHtmlFragment} from '../../utils.domManipulation';\n\nexport class NativeTemplateEngine extends TemplateEngine {\n    \n    constructor() {\n        super();\n        this.allowTemplateRewriting = false;\n    }\n\n    /**\n     * @override\n     */\n    renderTemplateSource(templateSource, bindingContext, options, templateDocument) {\n        let templateNode = templateSource.nodes();\n\n        if (templateNode) {\n            // Array.from is 35% slower than spread in Chrome 79\n            return [...templateNode.cloneNode(true).childNodes];\n        }\n        let templateText = templateSource.text();\n        return parseHtmlFragment(templateText, templateDocument);\n    }\n}\n\nsetTemplateEngine(NativeTemplateEngine.instance = new NativeTemplateEngine());\n","import {pureComputed} from './dependentObservable';\n\nexport const when = (predicate, callback, context) => {\n\n    const _kowhen = (resolve) => {\n        let _observable = pureComputed(predicate, context).extend({notify:'always'});\n        let subscription = _observable.subscribe(value => {\n            if (value) {\n                subscription.dispose();\n                resolve(value);\n            }\n        });\n        // In case the initial value is true, process it right away\n        _observable.notifySubscribers(_observable.peek());\n\n        return subscription;\n    };\n\n    return callback ? _kowhen(context ? callback.bind(context) : callback) : new Promise(_kowhen);\n};\n","import {unwrapObservable} from '../../utils';\nimport {bindingHandlers} from '../bindingHandlers';\n\nbindingHandlers.attr = {\n    update(element, valueAccessor, allBindings) {\n        let value = unwrapObservable(valueAccessor()) || {};\n        for (let attrName of Object.keys(value)) {\n            let attrValue = unwrapObservable(value[attrName]);\n\n            // Find the namespace of this attribute, if any.\n            let prefixLen = attrName.indexOf(':');\n            let namespace = prefixLen > 0 && element.lookupNamespaceURI && element.lookupNamespaceURI(attrName.substr(0, prefixLen));\n\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n            let toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n            if (toRemove) {\n                namespace ? element.removeAttributeNS(namespace, attrName) : element.removeAttribute(attrName);\n            } else {\n                attrValue = attrValue.toString();\n                namespace ? element.setAttributeNS(namespace, attrName, attrValue) : element.setAttribute(attrName, attrValue);\n            }\n            \n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n            // entirely, and there's no strong reason to allow for such casing in HTML.\n            if (attrName === 'name') {\n                element.name = toRemove ? '' : attrValue;\n            }\n        }\n    }\n};\n","import {isInitialDependency, getDependenciesCount, ignoreDependencyDetection} from '../../subscribables/dependencyDetection';\nimport {writeValueToProperty, twoWayBindings} from '../expressionRewriting';\nimport {registerEventHandler, addOrRemoveItem} from '../../utils';\nimport {unwrapObservable} from '../../utils';\nimport {bindingHandlers} from '../bindingHandlers';\nimport {computed, pureComputed} from '../../subscribables/dependentObservable';\nimport {isWritableObservable} from '../../subscribables/observableUtils';\n\nbindingHandlers.checked = {\n    after: ['value', 'attr'],\n    init(element, valueAccessor, allBindings) {\n        let checkedValue = pureComputed(() => {\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n            if (allBindings.has('checkedValue')) {\n                return unwrapObservable(allBindings.get('checkedValue'));\n            } \n            if (useElementValue) {\n                return allBindings.has('value') ? unwrapObservable(allBindings.get('value')) : element.value;\n            }\n        });\n\n        const _updateModel = () => {\n            // This updates the model value from the view value.\n            // It runs in response to DOM events (click) and changes in checkedValue.\n            let isChecked = element.checked,\n                elemValue = checkedValue();\n\n            // When we're first setting up this computed, don't change any model state.\n            if (isInitialDependency()) {\n                return;\n            }\n\n            // We can ignore unchecked radio buttons, because some other radio\n            // button will be checked, and that one can take care of updating state.\n            // Also ignore value changes to an already unchecked checkbox.\n            if (!isChecked && (isRadio || getDependenciesCount())) {\n                return;\n            }\n\n            let modelValue = ignoreDependencyDetection(valueAccessor);\n            if (valueIsArray) {\n                let writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue,\n                    saveOldValue = oldElemValue;\n                \n                oldElemValue = elemValue;\n\n                if (saveOldValue !== elemValue) {\n                    // When we're responding to the checkedValue changing, and the element is\n                    // currently checked, replace the old elem value with the new elem value\n                    // in the model array.\n                    if (isChecked) {\n                        addOrRemoveItem(writableValue, elemValue, true);\n                        addOrRemoveItem(writableValue, saveOldValue, false);\n                    }\n                } else {\n                    // When we're responding to the user having checked/unchecked a checkbox,\n                    // add/remove the element value to the model array.\n                    addOrRemoveItem(writableValue, elemValue, isChecked);\n                }\n\n                if (rawValueIsNonArrayObservable && isWritableObservable(modelValue)) {\n                    modelValue(writableValue);\n                }\n            } else {\n                if (isCheckbox) {\n                    if (elemValue === undefined) {\n                        elemValue = isChecked;\n                    } else if (!isChecked) {\n                        elemValue = undefined;\n                    }\n                }\n                writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n            }\n        };\n\n        const _updateView = () => {\n            // This updates the view value from the model value.\n            // It runs in response to changes in the bound (checked) value.\n            let modelValue = unwrapObservable(valueAccessor()),\n                elemValue = checkedValue();\n\n            if (valueIsArray) {\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\n                element.checked = modelValue.includes(elemValue);\n                oldElemValue = elemValue;\n            } else if (isCheckbox && elemValue === undefined) {\n                // When a checkbox is bound to any other value (not an array) and \"checkedValue\" is not defined,\n                // being checked represents the value being trueish\n                element.checked = !!modelValue;\n            } else {\n                // Otherwise, being checked means that the checkbox or radio button's value corresponds to the model value\n                element.checked = (checkedValue() === modelValue);\n            }\n        };\n\n        let isCheckbox = element.type === 'checkbox',\n            isRadio = element.type === 'radio';\n\n        // Only bind to check boxes and radio buttons\n        if (!isCheckbox && !isRadio) {\n            return;\n        }\n\n        let rawValue = valueAccessor(),\n            valueIsArray = isCheckbox && Array.isArray(unwrapObservable(rawValue)),\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n            useElementValue = isRadio || valueIsArray,\n            oldElemValue = valueIsArray ? checkedValue() : undefined;\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        // TODO remove this if this is really IE6-related only\n        if (isRadio && !element.name) {\n            bindingHandlers.uniqueName.init(element, () => true);\n        }\n\n        // Set up two computeds to update the binding:\n\n        // The first responds to changes in the checkedValue value and to element clicks\n        computed(_updateModel, null, {disposeWhenNodeIsRemoved: element});\n        registerEventHandler(element, \"click\", _updateModel);\n\n        // The second responds to changes in the model value (the one associated with the checked binding)\n        computed(_updateView, null, {disposeWhenNodeIsRemoved: element});\n\n        rawValue = undefined;\n    }\n};\n\ntwoWayBindings['checked'] = true;\n\nbindingHandlers.checkedValue = {\n    update(element, valueAccessor) {\n        element.value = unwrapObservable(valueAccessor());\n    }\n};\n","import {bindingHandlers} from '../bindingHandlers';\n\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n// e.g. click:handler instead of the usual full-length event:{click:handler}\nimport {registerEventHandler} from '../../utils';\n\nexport const _makeEventHandlerShortcut = (eventName) => {\n    bindingHandlers[eventName] = {\n        init (element, valueAccessor, allBindings, viewModel, bindingContext) {\n            let newValueAccessor = () => ({[eventName]: valueAccessor()});\n            return _eventBindingInitFn(element, newValueAccessor, allBindings, viewModel, bindingContext);\n        }\n    };\n};\n\nconst _eventBindingInitFn = (element, valueAccessor, allBindings, viewModel, bindingContext) => {\n    let eventsToHandle = valueAccessor() || {};\n    if (!eventsToHandle) {\n        return;\n    }\n    for (let eventName of Object.keys(eventsToHandle)) {\n        if (typeof eventName !== 'string') {\n            continue;\n        }\n        registerEventHandler(element, eventName, (event, ...otherArgs) => {\n            let handlerReturnValue,\n                handlerFunction = valueAccessor()[eventName];\n            \n            if (!handlerFunction) {\n                return;\n            }\n\n            try {\n                // Take all the event args, and prefix with the viewmodel\n                let viewModel = bindingContext['$data'];\n                // call the event handler with like handler(viewModel, event, ...otherArgs);\n                handlerReturnValue = handlerFunction.call(viewModel, viewModel, event, ...otherArgs);\n            } finally {\n                if (handlerReturnValue !== true) { \n                    // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    event.preventDefault();\n                    // removed historic 'event.returnValue = false'\n                }\n            }\n\n            let bubble = allBindings.get(eventName + 'Bubble') !== false;\n            if (!bubble) {\n                event.stopPropagation();\n                // removed historic 'event.cancelBubble = true'\n            }\n        });\n    }\n};\n\nbindingHandlers.event = {\n    init: _eventBindingInitFn\n};\n","// 'click' is just a shorthand for the usual full-length event:{click:handler}\nimport {_makeEventHandlerShortcut} from './event';\n\n_makeEventHandlerShortcut('click');\n","import {unwrapObservable} from '../../utils';\nimport {bindingHandlers} from '../bindingHandlers';\nimport {stringTrim, toggleDomNodeCssClass} from '../../utils';\n\nconst CLASSES_WRITTEN_BY_BINDING_KEY = Symbol('__ko__cssValue');\n\nconst _classBindingUpdateFn = (element, valueAccessor) => {\n    let value = stringTrim(unwrapObservable(valueAccessor()));\n    toggleDomNodeCssClass(element, element[CLASSES_WRITTEN_BY_BINDING_KEY], false);\n    element[CLASSES_WRITTEN_BY_BINDING_KEY] = value;\n    toggleDomNodeCssClass(element, value, true);\n};\n\nbindingHandlers.class = { \n    update: _classBindingUpdateFn\n};\n\nbindingHandlers.css = {\n    update(element, valueAccessor) {\n        let value = unwrapObservable(valueAccessor());\n        if (!value || typeof value !== 'object') {\n            _classBindingUpdateFn(element, valueAccessor);\n            return;\n        }\n        for (let className of Object.keys(value)) {\n            let shouldHaveClass = unwrapObservable( value[className] );\n            toggleDomNodeCssClass(element, className, shouldHaveClass);\n        }\n    }\n};\n","import {unwrapObservable} from '../../utils';\nimport {bindingHandlers} from '../bindingHandlers';\n\nconst _enableBindingUpdateFn = (element, valueAccessor) => {\n    let value = unwrapObservable(valueAccessor());\n    if (value && element.disabled) {\n        element.removeAttribute(\"disabled\");\n    } else if ((!value) && (!element.disabled)) {\n        element.disabled = true;\n    }\n};\n\nbindingHandlers.enable = {\n    update: _enableBindingUpdateFn\n};\n\nbindingHandlers.disable = {\n    update(element, valueAccessor) {\n        _enableBindingUpdateFn(element, () => !unwrapObservable(valueAccessor()));\n    }\n};\n","import {bindingRewriteValidators} from '../expressionRewriting';\nimport {isObservable} from '../../subscribables/observableUtils';\nimport {unwrapObservable} from '../../utils';\nimport {bindingHandlers} from '../bindingHandlers';\nimport {NativeTemplateEngine} from '../../templating/native/nativeTemplateEngine';\nimport {allowedVirtualElementBindings} from '../../virtualElements';\n\nconst _foreachBindingMakeTemplateValueAccessor = (valueAccessor) => () => {\n    let modelValue = valueAccessor(),\n        // Unwrap without setting a dependency here\n        unwrappedValue = isObservable(modelValue) ? modelValue.peek() : modelValue;\n    \n    // If unwrappedValue is the array, pass in the wrapped value on its own\n    // The value will be unwrapped and tracked within the template binding\n    // (See https://github.com/SteveSanderson/knockout/issues/523)\n    if (!unwrappedValue || typeof unwrappedValue.length === 'number') {\n        return {\n            foreach: modelValue, \n            templateEngine: NativeTemplateEngine.instance\n        };\n    }\n\n    // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n    unwrapObservable(modelValue);\n    return {\n        foreach: unwrappedValue.data,\n        as: unwrappedValue.as,\n        noChildContext: unwrappedValue.noChildContext,\n        includeDestroyed: unwrappedValue.includeDestroyed,\n        afterAdd: unwrappedValue.afterAdd,\n        beforeRemove: unwrappedValue.beforeRemove,\n        afterRender: unwrappedValue.afterRender,\n        beforeMove: unwrappedValue.beforeMove,\n        afterMove: unwrappedValue.afterMove,\n        templateEngine: NativeTemplateEngine.instance\n    };\n};\n\n\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\n\nbindingHandlers.foreach = {\n    makeTemplateValueAccessor: _foreachBindingMakeTemplateValueAccessor,\n    init(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return bindingHandlers.template.init(element, _foreachBindingMakeTemplateValueAccessor(valueAccessor));\n    },\n    update(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return bindingHandlers.template.update(element, _foreachBindingMakeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n    }\n};\n\nbindingRewriteValidators.foreach = false; // Can't rewrite control flow bindings\nallowedVirtualElementBindings.foreach = true;\n","import {writeValueToProperty, twoWayBindings} from '../expressionRewriting';\nimport {unwrapObservable, registerEventHandler, triggerEvent} from '../../utils';\nimport {ignoreDependencyDetection} from '../../subscribables/dependencyDetection';\nimport {bindingHandlers} from '../bindingHandlers';\n\nconst HAS_FOCUS_UPDATING_PROPERTY = Symbol('ko_hasfocusUpdating');\nconst HAS_FOCUS_LAST_VALUE = Symbol('ko_hasfocusLastValue');\n\nbindingHandlers.hasfocus = bindingHandlers.hasFocus = {\n    init(element, valueAccessor, allBindings) {\n        let _handleElementFocusChange = (isFocused) => {\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n            // from calling 'blur()' on the element when it loses focus.\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n            element[HAS_FOCUS_UPDATING_PROPERTY] = true;\n            let ownerDoc = element.ownerDocument;\n            if (ownerDoc.activeElement) {\n                isFocused = (ownerDoc.activeElement === element);\n            }\n            let modelValue = valueAccessor();\n            writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n            element[HAS_FOCUS_LAST_VALUE] = isFocused;\n            element[HAS_FOCUS_UPDATING_PROPERTY] = false;\n        };\n        let handleElementFocusIn = _handleElementFocusChange.bind(null, true);\n        let handleElementFocusOut = _handleElementFocusChange.bind(null, false);\n\n        registerEventHandler(element, \"focus\", handleElementFocusIn);\n        registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n        registerEventHandler(element, \"blur\",  handleElementFocusOut);\n        registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n\n        // Assume element is not focused (prevents \"blur\" being called initially)\n        element[HAS_FOCUS_LAST_VALUE] = false;\n    },\n    update(element, valueAccessor) {\n        let value = !!unwrapObservable(valueAccessor());\n\n        if (!element[HAS_FOCUS_UPDATING_PROPERTY] && element[HAS_FOCUS_LAST_VALUE] !== value) {\n            value ? element.focus() : element.blur();\n\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n            // element was focused already.\n            if (!value && element[HAS_FOCUS_LAST_VALUE]) {\n                element.ownerDocument.body.focus();\n            }\n\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n            // TODO check if this is still required for Edge+ \n            ignoreDependencyDetection(triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n        }\n    }\n};\n\ntwoWayBindings.hasfocus = true;\ntwoWayBindings.hasFocus = 'hasfocus';\n","import {setHtml} from '../../utils.domManipulation';\nimport {bindingHandlers} from '../bindingHandlers';\n\n\nbindingHandlers.html = {\n    // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n    init: () => ({controlsDescendantBindings: true}),\n    update(element, valueAccessor) {\n        // setHtml will unwrap the value if needed\n        setHtml(element, valueAccessor());\n    }\n};\n","import {getCurrentComputed, getDependenciesCount} from '../../subscribables/dependencyDetection';\nimport {bindingRewriteValidators} from '../expressionRewriting';\nimport {cloneNodes, unwrapObservable} from '../../utils';\nimport {childNodes, setDomNodeChildren, allowedVirtualElementBindings, emptyNode} from '../../virtualElements';\nimport {bindingHandlers} from '../bindingHandlers';\nimport {\n    EVENT_CHILDREN_COMPLETE,\n    EVENT_DESCENDENTS_COMPLETE,\n    bindingEvent,\n    applyBindingsToDescendants\n} from '../bindingAttributeSyntax';\nimport {computed} from '../../subscribables/dependentObservable';\n\nconst {startPossiblyAsyncContentBinding, notify} = bindingEvent;\n\n// Makes a binding like with or if\nconst _makeWithIfBinding = (bindingKey, isWith, isNot) => {\n    \n    bindingHandlers[bindingKey] = {\n        init(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            let didDisplayOnLastUpdate, \n                savedNodes, \n                contextOptions = {}, \n                completeOnRender, \n                needAsyncContext,\n                renderOnEveryChange;\n\n            if (isWith) {\n                let as = allBindings.get('as'), \n                    noChildContext = allBindings.get('noChildContext');\n                \n                renderOnEveryChange = !(as && noChildContext);\n                contextOptions = {\n                    as,\n                    noChildContext,\n                    exportDependencies: renderOnEveryChange\n                };\n            }\n\n            completeOnRender = allBindings.get('completeOn') === 'render';\n            needAsyncContext = completeOnRender || allBindings.has(EVENT_DESCENDENTS_COMPLETE);\n\n            computed(() => {\n                let value = unwrapObservable(valueAccessor()),\n                    shouldDisplay = isNot ? !value : !!value,\n                    isInitial = !savedNodes,\n                    childContext;\n\n                if (!renderOnEveryChange && shouldDisplay === didDisplayOnLastUpdate) {\n                    return;\n                }\n\n                if (needAsyncContext) {\n                    bindingContext = startPossiblyAsyncContentBinding(element, bindingContext);\n                }\n\n                if (shouldDisplay) {\n                    if (!isWith || renderOnEveryChange) {\n                        contextOptions['dataDependency'] = getCurrentComputed();\n                    }\n\n                    if (isWith) {\n                        childContext = bindingContext.createChildContext(typeof value === 'function' ? value : valueAccessor, contextOptions);\n                    } else if (getDependenciesCount()) {\n                        childContext = bindingContext.extend(null, contextOptions);\n                    } else {\n                        childContext = bindingContext;\n                    }\n                }\n\n                // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n                if (isInitial && getDependenciesCount()) {\n                    savedNodes = cloneNodes(childNodes(element), true /* shouldCleanNodes */);\n                }\n\n                if (shouldDisplay) {\n                    if (!isInitial) {\n                        setDomNodeChildren(element, cloneNodes(savedNodes));\n                    }\n\n                    applyBindingsToDescendants(childContext, element);\n                } else {\n                    emptyNode(element);\n\n                    if (!completeOnRender) {\n                        notify(element, EVENT_CHILDREN_COMPLETE);\n                    }\n                }\n\n                didDisplayOnLastUpdate = shouldDisplay;\n\n            }, null, {disposeWhenNodeIsRemoved: element});\n\n            return {controlsDescendantBindings: true};\n        }\n    };\n    bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n    allowedVirtualElementBindings[bindingKey] = true;\n};\n\n// Construct the actual binding handlers\n_makeWithIfBinding('if');\n_makeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\n_makeWithIfBinding('with', true /* isWith */);\n","import {applyBindingsToDescendants} from '../bindingAttributeSyntax';\nimport {bindingHandlers} from '../bindingHandlers';\nimport {allowedVirtualElementBindings} from '../../virtualElements';\n\nbindingHandlers.let = {\n    init(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // Make a modified binding context, with extra properties, and apply it to descendant elements\n        let innerContext = bindingContext.extend(valueAccessor);\n        applyBindingsToDescendants(innerContext, element);\n\n        return {controlsDescendantBindings: true};\n    }\n};\n\nallowedVirtualElementBindings.let = true;\n","import {getDomData, setDomData, nextDomDataKey} from '../utils.domData';\n\nconst HAS_DOM_DATA_EXPANDO_PROPERTY = Symbol('ko_hasDomDataOptionValue');\n\nconst OPTION_VALUE_DOM_DATA_KEY = nextDomDataKey();\n\n\nexport const readSelectOrOptionValue = (element) => {\n    switch (element.tagName.toLowerCase()) {\n        case 'option':\n            return (element[HAS_DOM_DATA_EXPANDO_PROPERTY]) ?\n                getDomData(element, OPTION_VALUE_DOM_DATA_KEY) : element.value;\n        case 'select': {\n            let selectedIndex = element.selectedIndex;\n            return selectedIndex >= 0 ? readSelectOrOptionValue(element.options[selectedIndex]) : undefined;\n        }\n    }\n    return element.value;\n};\n\n// Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n// are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n// that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\nexport const writeSelectOrOptionValue = (element, value, allowUnset) => {\n    let tagNameLower = element.tagName.toLowerCase();\n    if (tagNameLower === 'option') {\n        let valueType = typeof value;\n        if (valueType === 'string') {\n            setDomData(element, OPTION_VALUE_DOM_DATA_KEY, undefined);\n            // just set undefined instead of 'delete' since delete is 50x slower in Chrome 80\n            element[HAS_DOM_DATA_EXPANDO_PROPERTY] = undefined;\n            element.value = value;\n        } else {\n            // Store arbitrary object using DomData\n            setDomData(element, OPTION_VALUE_DOM_DATA_KEY, value);\n            element[HAS_DOM_DATA_EXPANDO_PROPERTY] = true;\n\n            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n            element.value = (valueType === 'number') ? value : '';\n        }\n        return;\n    }\n    if (tagNameLower === 'select') {\n        if (value === '' || value === null) {       // A blank string or null value will select the caption\n            value = undefined;\n        }\n        let selection = -1;\n        for (let i = 0, n = element.options.length, optionValue; i < n; ++i) {\n            optionValue = readSelectOrOptionValue(element.options[i]);\n            // Include special check to handle selecting a caption with a blank string value\n            if (optionValue === value || (optionValue === '' && value === undefined)) {\n                selection = i;\n                break;\n            }\n        }\n        if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n            element.selectedIndex = selection;\n        }\n        return;\n    }\n    element.value = (value === null || value === undefined) ? '' : value;\n};\n","import {isInitialDependency, ignoreDependencyDetection} from '../../subscribables/dependencyDetection';\nimport {EVENT_CHILDREN_COMPLETE, bindingEvent} from '../bindingAttributeSyntax';\nimport {setDomNodeChildrenFromArrayMapping} from '../editDetection/arrayToDomNodeChildren';\nimport {readSelectOrOptionValue, writeSelectOrOptionValue} from '../selectExtensions';\nimport {unwrapObservable, setOptionNodeSelectionState, triggerEvent} from '../../utils';\nimport {bindingHandlers} from '../bindingHandlers';\n\nconst CAPTION_PLACEHOLDER = Symbol();\n\nconst _unwrapBindingForOption = (binding, propertyHolder, defaultValue) => {\n    let bindingType = typeof binding,\n        value = (bindingType === 'function') ? binding(propertyHolder) :\n            (bindingType === 'string') ? propertyHolder[binding] : defaultValue,\n        needsUnwrap = typeof value === 'function';\n\n    // values are mostly NOT observable themselves, so let's save some useless unwrap calls\n    return needsUnwrap ? unwrapObservable(value) : value;\n};\n\nbindingHandlers.options = {\n    /**\n     * @param {HTMLSelectElement} element\n     */\n    init(element) {\n        if (element.tagName.toLowerCase() !== 'select') {\n            throw new Error(\"options binding applies only to SELECT elements\");\n        }\n\n        // Remove all existing <option>s.\n        while (element.length > 0) {\n            element.remove(0);\n        }\n\n        // Ensures that the binding processor doesn't try to bind the options\n        return {controlsDescendantBindings: true};\n    },\n    /**\n     * @param {HTMLSelectElement} element\n     * @param {function} valueAccessor\n     */\n    update(element, valueAccessor, allBindings) {\n        const _getSelectedOptions = (optionalMappingFn) => {\n            let result = [],\n                nextResultIndex = 0;\n            for (let option of element.options) {\n                if (option.selected) {\n                    result[nextResultIndex++] = optionalMappingFn ? optionalMappingFn(option) : option;\n                }\n            }\n            return result;\n        };\n        \n        let selectWasPreviouslyEmpty = element.length === 0,\n            multiple = element.multiple,\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n            unwrappedArray = unwrapObservable(valueAccessor()),\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings.has('value'),\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n            arrayToDomNodeChildrenOptions = {},\n            captionValue,\n            filteredArray,\n            previousSelectedValues = [];\n\n        if (!valueAllowUnset) {\n            if (multiple) {\n                previousSelectedValues = _getSelectedOptions(readSelectOrOptionValue);\n            } else if (element.selectedIndex >= 0) {\n                previousSelectedValues.push(readSelectOrOptionValue(element.options[element.selectedIndex]));\n            }\n        } \n        \n        if (unwrappedArray) {\n            if (typeof unwrappedArray.length === 'undefined') {// Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n            }\n\n            // Filter out any entries marked as destroyed\n            filteredArray = unwrappedArray.filter(item => includeDestroyed || item === undefined || item === null || !unwrapObservable(item['_destroy']));\n\n            // If caption is included, add it to the array\n            if (allBindings.has('optionsCaption')) {\n                captionValue = unwrapObservable(allBindings.get('optionsCaption'));\n                // If caption value is null or undefined, don't show a caption\n                if (captionValue !== null && captionValue !== undefined) {\n                    filteredArray.unshift(CAPTION_PLACEHOLDER);\n                }\n            }\n        } else {\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n        }\n\n        // The following functions can run at two different times:\n        // The first is when the whole array is being updated directly from this binding handler.\n        // The second is when an observable value for a specific array entry is updated.\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n        let itemUpdate = false;\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\n            if (oldOptions.length) {\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [readSelectOrOptionValue(oldOptions[0])] : [];\n                itemUpdate = true;\n            }\n            let option = element.ownerDocument.createElement(\"option\");\n            if (arrayEntry === CAPTION_PLACEHOLDER) {\n                let captionText = unwrapObservable(allBindings.get('optionsCaption'));\n                // we have a fresh option element, so let's not use ko.utils.setTextContent\n                option.textContent = (captionText === null || captionText === undefined) ? '' : captionText;\n                writeSelectOrOptionValue(option, undefined);\n            } else {\n                // Apply a value to the option element\n                let optionValue = _unwrapBindingForOption(allBindings.get('optionsValue'), arrayEntry, arrayEntry);\n                writeSelectOrOptionValue(option, optionValue);\n\n                // Apply some text to the option element\n                let optionText = _unwrapBindingForOption(allBindings.get('optionsText'), arrayEntry, optionValue);\n                // we have a fresh option element, so let's not use ko.utils.setTextContent\n                option.textContent = (optionText === null || optionText === undefined) ? '' : optionText;\n            }\n            return [option];\n        }\n\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n        arrayToDomNodeChildrenOptions.beforeRemove = option => element.removeChild(option);\n\n        const _setSelectionCallback = (arrayEntry, newOptions) => {\n            if (itemUpdate && valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                bindingEvent.notify(element, EVENT_CHILDREN_COMPLETE);\n            } else if (previousSelectedValues.length) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                let isSelected = previousSelectedValues.includes(readSelectOrOptionValue(newOptions[0]));\n                setOptionNodeSelectionState(newOptions[0], isSelected);\n\n                // If this option was changed from being selected during a single-item update, notify the change\n                if (itemUpdate && !isSelected) {\n                    ignoreDependencyDetection(triggerEvent, null, [element, \"change\"]);\n                }\n            }\n        };\n\n        let _optionsAfterRender = allBindings.has('optionsAfterRender') && allBindings.get('optionsAfterRender'),\n            callback = (typeof _optionsAfterRender === 'function') ? \n                (arrayEntry, newOptions) => {\n                    _setSelectionCallback(arrayEntry, newOptions);\n                    ignoreDependencyDetection(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== CAPTION_PLACEHOLDER ? arrayEntry : undefined]);\n                } : \n                _setSelectionCallback;\n\n        setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\n        if (!valueAllowUnset) {\n            // Determine if the selection has changed as a result of updating the options list\n            let selectionChanged;\n            if (multiple) {\n                // For a multiple-select box, compare the new selection count to the previous one\n                // But if nothing was selected before, the selection can't have changed\n                selectionChanged = previousSelectedValues.length && _getSelectedOptions().length < previousSelectedValues.length;\n            } else {\n                // For a single-select box, compare the current value to the previous value\n                // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n                    ? (readSelectOrOptionValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                    : (previousSelectedValues.length || element.selectedIndex >= 0);\n            }\n\n            // Ensure consistency between model value and selected option.\n            // If the dropdown was changed so that selection is no longer the same,\n            // notify the value or selectedOptions binding.\n            if (selectionChanged) {\n                ignoreDependencyDetection(triggerEvent, null, [element, \"change\"]);\n            }\n        }\n\n        if (valueAllowUnset || isInitialDependency()) {\n            bindingEvent.notify(element, EVENT_CHILDREN_COMPLETE);\n        }\n\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20) {\n            element.scrollTop = previousScrollTop;\n        }\n    }\n};\n","import {writeValueToProperty, twoWayBindings} from '../expressionRewriting';\nimport {bindingEvent, EVENT_CHILDREN_COMPLETE} from '../bindingAttributeSyntax';\nimport {registerEventHandler, unwrapObservable, setOptionNodeSelectionState} from '../../utils';\nimport {computed} from '../../subscribables/dependentObservable';\nimport {readSelectOrOptionValue} from '../selectExtensions';\nimport {bindingHandlers} from '../bindingHandlers';\n\nbindingHandlers.selectedOptions = {\n    /**\n     * @param {HTMLSelectElement} element\n     */\n    init(element, valueAccessor, allBindings) {\n        if (element.tagName.toLowerCase() !== 'select') {\n            throw new Error(\"selectedOptions binding applies only to SELECT elements\");\n        }\n        \n        const _updateFromView = () => {\n            let value = valueAccessor(), \n                valueToWrite = [];\n            \n            for (let option of element.options) {\n                option.selected && valueToWrite.push(readSelectOrOptionValue(option)); \n            }\n            writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n        };\n\n        function updateFromModel() {\n            let newValue = unwrapObservable(valueAccessor()),\n                previousScrollTop = element.scrollTop;\n\n            if (newValue && typeof newValue.length === 'number') {\n                for (let node of element.options) {\n                    let isSelected = newValue.includes(readSelectOrOptionValue(node));\n                    if (node.selected !== isSelected /* This check prevents flashing of the select element in IE */ ) {      \n                        setOptionNodeSelectionState(node, isSelected);\n                    }\n                }\n            }\n\n            element.scrollTop = previousScrollTop;\n        }\n\n        let isChangeHandlerBound = false;\n        bindingEvent.subscribe(element, EVENT_CHILDREN_COMPLETE, () => {\n            if (isChangeHandlerBound) {\n                _updateFromView();\n            } else {\n                registerEventHandler(element, \"change\", _updateFromView);\n                computed(updateFromModel, null, {disposeWhenNodeIsRemoved: element});\n                isChangeHandlerBound = true;\n            }\n        }, null, {notifyImmediately: true});\n    },\n    update() {\n        // Keep for backwards compatibility with code that may have wrapped binding\n    } \n};\n\ntwoWayBindings.selectedOptions = true;\n","import {unwrapObservable} from '../../utils';\nimport {bindingHandlers} from '../bindingHandlers';\n\nconst CUSTOM_CSS_PROPERTY_REGEX = /^--/;\n\nbindingHandlers.style = {\n    update(element, valueAccessor) {\n        let value = unwrapObservable(valueAccessor() || {});\n        if (!value) {\n            return;\n        }\n        \n        const _elementStyle = element.style;\n        \n        for (let styleName of Object.keys(value)) {\n            let newStyleValue = unwrapObservable(value[styleName]);\n\n            if (newStyleValue === null || newStyleValue === undefined || newStyleValue === false) {\n                // Empty string removes the value, whereas null/undefined have no effect\n                newStyleValue = '';\n            }\n\n            if (CUSTOM_CSS_PROPERTY_REGEX.test(styleName)) {\n                // Is styleName a custom CSS property?\n                _elementStyle.setProperty(styleName, newStyleValue);\n            } else {\n                styleName = styleName.replace(/-(\\w)/g, (all, letter) => letter.toUpperCase());\n\n                let previousStyleValue = _elementStyle[styleName];\n                _elementStyle[styleName] = newStyleValue;\n\n                if (newStyleValue !== previousStyleValue && _elementStyle[styleName] === previousStyleValue && !isNaN(newStyleValue)) {\n                    _elementStyle[styleName] = newStyleValue + 'px';\n                }\n            }\n        }\n    }\n};\n","import {registerEventHandler} from '../../utils';\nimport {bindingHandlers} from '../bindingHandlers';\n\nbindingHandlers.submit = {\n    init(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        if (typeof valueAccessor() !== 'function') {\n            throw new Error('The value for a submit binding must be a function');\n        }\n        registerEventHandler(element, 'submit', event => {\n            let handlerReturnValue,\n                value = valueAccessor();\n            try {\n                handlerReturnValue = value.call(bindingContext['$data'], element);\n            } finally {\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    event.preventDefault();\n                }\n            }\n        });\n    }\n};\n","import {unwrapObservable, setTextContent} from '../../utils';\nimport {bindingHandlers} from '../bindingHandlers';\nimport {allowedVirtualElementBindings} from '../../virtualElements';\n\nbindingHandlers.text = {\n    init() {\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n        return {controlsDescendantBindings: true};\n    },\n    update(element, valueAccessor) {\n        \n        if (element.nodeType === 1) {\n            let text = unwrapObservable(valueAccessor());\n            // We have an element node and 'controlsDescendantBindings' is true, so there is no point in \n            // wasting cycles trying to cleanup any child nodes, because whatever there is, it wasn't generated by knockout.  \n            // (see thrown error \"trying to control descendant bindings of the same element\" in 'bindingAttributeSyntax.js')\n            element.textContent = (text === undefined || text === null) ? '' : text;\n            return;\n        }\n        \n        setTextContent(element, valueAccessor());\n    }\n};\n\nallowedVirtualElementBindings.text = true;\n","import {setTimeoutWithCatchError, registerEventHandler, unwrapObservable} from '../../utils';\nimport {writeValueToProperty, twoWayBindings} from '../expressionRewriting';\nimport {bindingHandlers} from '../bindingHandlers';\nimport {computed} from '../../subscribables/dependentObservable';\n\nbindingHandlers.textInput = {\n    /** \n     * @param {HTMLInputElement|HTMLSelectElement|HTMLButtonElement} element \n     **/\n    init(element, valueAccessor, allBindings) {\n\n        let previousElementValue = element.value,\n            timeoutHandle,\n            elementValueBeforeEvent;\n\n        const _updateModel = (event) => {\n            timeoutHandle = timeoutHandle && void clearTimeout(timeoutHandle);\n            elementValueBeforeEvent = undefined;\n\n            let elementValue = element.value;\n            if (previousElementValue !== elementValue) {\n                if (DEBUG && event) {\n                    // Provide a way for tests to know exactly which event was processed\n                    element['_ko_textInputProcessedEvent'] = event.type;\n                }\n                previousElementValue = elementValue;\n                writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n            }\n        };\n\n        const _deferUpdateModel = (event) => {\n            if (timeoutHandle) {\n                return;\n            }\n            // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n            // event firing and the updateModel function running. This allows us to ignore model\n            // updates that are from the previous state of the element, usually due to techniques\n            // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n            elementValueBeforeEvent = element.value;\n            let handler = DEBUG ? () => _updateModel({type: event.type}) : _updateModel;\n            timeoutHandle = setTimeoutWithCatchError(handler, 4);\n        };\n        \n        const _updateView = function () {\n            let modelValue = unwrapObservable(valueAccessor());\n\n            if (modelValue === null || modelValue === undefined) {\n                modelValue = '';\n            }\n\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n                setTimeoutWithCatchError(_updateView, 4);\n                return;\n            }\n            \n            // Update the element only if the element and model are different. On some browsers, updating the value\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\n            if (element.value !== modelValue) {\n                element.value = modelValue;\n                previousElementValue = element.value; // In case the browser changes the value (see #2281)\n            }\n        };\n\n        /** @type {string[]} */\n        const _forceUpdateOn = DEBUG && bindingHandlers.textInput._forceUpdateOn; \n        if (_forceUpdateOn) {\n            // Provide a way for tests to specify exactly which events are bound\n            for (let eventName of _forceUpdateOn) {\n                if (eventName.startsWith('after')) {\n                    registerEventHandler(element, eventName.slice(5), _deferUpdateModel);\n                } else {\n                    registerEventHandler(element, eventName, _updateModel);\n                }\n            }\n        } else {\n            registerEventHandler(element, 'input', _updateModel);\n        }\n\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n        registerEventHandler(element, 'change', _updateModel);\n\n        // To deal with browsers that don't notify any kind of event for some changes (IE, Safari, etc.)\n        registerEventHandler(element, 'blur', _updateModel);\n\n        computed(_updateView, null, {disposeWhenNodeIsRemoved: element});\n    }\n};\n\ntwoWayBindings['textInput'] = true;\n\n// TODO this textinput alias should rather throw an error than foster sloppy programming\n// textinput is an alias for textInput\nbindingHandlers.textinput = {\n    // preprocess is the only way to set up a full alias\n    preprocess(value, name, addBinding) {\n        addBinding('textInput', value);\n    }\n};\n","import {bindingHandlers} from '../bindingHandlers';\n\nlet __uniqueNameCurrentIndex = 0;\n\nbindingHandlers.uniqueName = {\n    init: (element, valueAccessor) => valueAccessor() && (element.name = 'ko_unique_' + (++__uniqueNameCurrentIndex))\n};\n","import {applyBindingsToDescendants} from '../bindingAttributeSyntax';\nimport {bindingHandlers} from '../bindingHandlers';\nimport {allowedBindings} from '../../virtualElements';\n\nbindingHandlers.using = {\n    init(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        let options;\n\n        if (allBindings.has('as')) {\n            options = {as: allBindings.get('as'), noChildContext: allBindings.get('noChildContext')};\n        }\n\n        let innerContext = bindingContext.createChildContext(valueAccessor, options);\n        applyBindingsToDescendants(innerContext, element);\n\n        return {controlsDescendantBindings: true};\n    }\n};\n\nallowedBindings.using = true;\n","import {readSelectOrOptionValue, writeSelectOrOptionValue} from '../selectExtensions';\nimport {registerEventHandler, setTimeoutWithCatchError, arrayGetDistinctValues, unwrapObservable, arrayRemoveItem} from '../../utils';\nimport {writeValueToProperty, twoWayBindings} from '../expressionRewriting';\nimport {EVENT_CHILDREN_COMPLETE, applyBindingAccessorsToNode, bindingEvent} from '../bindingAttributeSyntax';\nimport {ignoreDependencyDetection} from '../../subscribables/dependencyDetection';\nimport {bindingHandlers} from '../bindingHandlers';\nimport {computed} from '../../subscribables/dependentObservable';\n\nbindingHandlers.value = {\n    /** \n     * @param {HTMLInputElement|HTMLButtonElement|HTMLSelectElement} element \n     **/\n    init(element, valueAccessor, allBindings) {\n        let tagName = element.nodeName.toLowerCase(),\n            isInputElement = tagName === 'input',\n            inputType = isInputElement && element.type;\n\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n        if (inputType === 'checkbox' || inputType === 'radio') {\n            applyBindingAccessorsToNode(element, {checkedValue: valueAccessor});\n            return;\n        }\n        \n        let requestedEventsToCatch = allBindings.get('valueUpdate'),\n            elementValueBeforeEvent = null,\n            eventsToCatch = [];\n        \n        if (requestedEventsToCatch) {\n            // Allow both individual event names, and arrays of event names\n            if (typeof requestedEventsToCatch === 'string') {\n                eventsToCatch.push(requestedEventsToCatch);\n            } else {\n                eventsToCatch = arrayGetDistinctValues(requestedEventsToCatch);\n            }\n            arrayRemoveItem(eventsToCatch, 'change');  // We'll subscribe to 'change' events later\n        }\n\n        const _valueUpdateHandler = () => {\n            elementValueBeforeEvent = null;\n            let modelValue = valueAccessor(),\n                elementValue = readSelectOrOptionValue(element);\n            writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n        };\n\n        for (let eventName of eventsToCatch) {\n            // The syntax 'after<eventname>' means 'run the handler asynchronously after the event'\n            // This is useful, for example, to catch 'keydown' events after the browser has updated the control\n            // (otherwise, readSelectOrOptionValue(this) will receive the control's value *before* the key event)\n            if (eventName.startsWith('after')) {\n                registerEventHandler(element, eventName.substring(5), () => {\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n                    // techniques like rateLimit can trigger model changes at critical moments that will\n                    // override the user's inputs, causing keystrokes to be lost.\n                    elementValueBeforeEvent = readSelectOrOptionValue(element);\n                    setTimeoutWithCatchError(_valueUpdateHandler, 0);\n                });\n            } else {\n                registerEventHandler(element, eventName, _valueUpdateHandler);\n            }\n        }\n\n        let _updateFromModel;\n\n        if (inputType === 'file') {\n            // For file input elements, can only write the empty string\n            _updateFromModel = () => {\n                let newValue = unwrapObservable(valueAccessor());\n                if (newValue === null || newValue === undefined || newValue === '') {\n                    element.value = '';\n                } else {\n                    ignoreDependencyDetection(_valueUpdateHandler);  // reset the model to match the element\n                }\n            };\n        } else {\n            _updateFromModel = () => {\n                let newValue = unwrapObservable(valueAccessor()),\n                    elementValue = readSelectOrOptionValue(element);\n\n                if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n                    setTimeoutWithCatchError(_updateFromModel, 0);\n                    return;\n                }\n                if (newValue === elementValue && elementValue !== undefined) {\n                    return; // no changes\n                }\n                if (tagName === 'select') {\n                    let allowUnset = allBindings.get('valueAllowUnset');\n                    writeSelectOrOptionValue(element, newValue, allowUnset);\n                    if (!allowUnset && newValue !== readSelectOrOptionValue(element)) {\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n                        ignoreDependencyDetection(_valueUpdateHandler);\n                    }\n                    return;\n                }\n                writeSelectOrOptionValue(element, newValue);\n            };\n        }\n\n        if (tagName === 'select') {\n            let isChangeHandlerBound = false;\n            bindingEvent.subscribe(element, EVENT_CHILDREN_COMPLETE, () => {\n                if (!isChangeHandlerBound) {\n                    registerEventHandler(element, 'change', _valueUpdateHandler);\n                    isChangeHandlerBound = !!computed(_updateFromModel, null, {disposeWhenNodeIsRemoved: element});\n                } else if (allBindings.get('valueAllowUnset')) {\n                    _updateFromModel();\n                } else {\n                    _valueUpdateHandler();\n                }\n            }, null, {notifyImmediately: true});\n        } else {\n            registerEventHandler(element, 'change', _valueUpdateHandler);\n            computed(_updateFromModel, null, {disposeWhenNodeIsRemoved: element});\n        }\n    },\n    update() {} // Keep for backwards compatibility with code that may have wrapped value binding\n};\n\ntwoWayBindings.value = true;\n","import {unwrapObservable} from '../../utils';\nimport {bindingHandlers} from '../bindingHandlers';\n\nconst __visibleBindingUpdateFn = (element, valueAccessor) => {\n    let value = unwrapObservable(valueAccessor()),\n        isCurrentlyVisible = element.style.display !== 'none';\n    \n    if (value && !isCurrentlyVisible) {\n        element.style.display = '';\n    } else if ((!value) && isCurrentlyVisible) {\n        element.style.display = 'none';\n    }\n}; \n\nbindingHandlers.visible = {\n    update: __visibleBindingUpdateFn \n};\n\nbindingHandlers.hidden = {\n    update: (element, valueAccessor) => __visibleBindingUpdateFn(element, () => !unwrapObservable(valueAccessor()))\n};\n","import {applyBindingsToDescendants, bindingEvent, EVENT_DESCENDENTS_COMPLETE} from '../binding/bindingAttributeSyntax';\nimport {allowedBindings, childNodes, emptyNode, setDomNodeChildren} from '../virtualElements';\nimport {addDisposeCallback} from '../utils.domNodeDisposal';\nimport {unwrapObservable, cloneNodes} from '../utils';\nimport {getComponent} from './loaderRegistry';\nimport {bindingHandlers} from '../binding/bindingHandlers';\nimport {computed} from '../subscribables/dependentObservable';\n\nlet componentLoadingOperationUniqueId = 0;\n\nallowedBindings.component = true;\n\nbindingHandlers.component = {\n    init: (element, valueAccessor, ignored1, ignored2, bindingContext) => {\n        let currentViewModel,\n            currentLoadingOperationId,\n            afterRenderSub,\n            disposeAssociatedComponentViewModel = () => {\n                let currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                if (typeof currentViewModelDispose === 'function') {\n                    currentViewModelDispose.call(currentViewModel);\n                }\n                if (afterRenderSub) {\n                    afterRenderSub.dispose();\n                }\n                afterRenderSub = null;\n                currentViewModel = null;\n                // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                currentLoadingOperationId = null;\n            },\n            originalChildNodes = Array.from(childNodes(element));\n\n        emptyNode(element);\n        addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n        computed(function () {\n            let value = unwrapObservable(valueAccessor()),\n                componentName, componentParams;\n\n            if (typeof value === 'string') {\n                componentName = value;\n            } else {\n                componentName = unwrapObservable(value['name']);\n                componentParams = unwrapObservable(value['params']);\n            }\n\n            if (!componentName) {\n                throw new Error('No component name specified');\n            }\n\n            let asyncContext = bindingEvent.startPossiblyAsyncContentBinding(element, bindingContext);\n\n            let loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n            getComponent(componentName, componentDefinition => {\n                if (currentLoadingOperationId !== loadingOperationId) {\n                    // If this is not the current load operation for this element, ignore it.\n                    return;\n                }\n\n                // Clean up previous state\n                disposeAssociatedComponentViewModel();\n\n                // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                if (!componentDefinition) {\n                    throw new Error('Unknown component \\'' + componentName + '\\'');\n                }\n                _cloneTemplateIntoElement(componentName, componentDefinition, element);\n\n                let componentInfo = {\n                    element,\n                    templateNodes: originalChildNodes\n                };\n\n                let componentViewModel = _createViewModel(componentDefinition, componentParams, componentInfo),\n                    childBindingContext = asyncContext['createChildContext'](componentViewModel, {\n                        extend(ctx) {\n                            ctx['$component'] = componentViewModel;\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\n                        }\n                    });\n\n                let _viewModelDescendantsComplete = componentViewModel && componentViewModel.koDescendantsComplete;\n                if (_viewModelDescendantsComplete) {\n                    afterRenderSub = bindingEvent.subscribe(element, EVENT_DESCENDENTS_COMPLETE, _viewModelDescendantsComplete, componentViewModel);\n                }\n\n                currentViewModel = componentViewModel;\n                applyBindingsToDescendants(childBindingContext, element);\n            });\n        }, null, {disposeWhenNodeIsRemoved: element});\n\n        return {controlsDescendantBindings: true};\n    }\n};\n\nconst _cloneTemplateIntoElement = (componentName, componentDefinition, element) => {\n    let template = componentDefinition['template'];\n    if (!template) {\n        throw new Error('Component \\'' + componentName + '\\' has no template');\n    }\n    let clonedNodesArray = cloneNodes(template);\n    setDomNodeChildren(element, clonedNodesArray);\n};\n\nconst _createViewModel = (componentDefinition, componentParams, componentInfo) => {\n    let componentViewModelFactory = componentDefinition['createViewModel'];\n    return componentViewModelFactory\n        ? componentViewModelFactory.call(componentDefinition, componentParams, componentInfo)\n        : componentParams; // Template-only component\n};\n","// This is the final knockout library to be built. \n// Anything that's not contained in the default export at the bottom of this file won't be accessible later.  \n\nimport {onError, _overrideOnError} from './onError';\nimport {childNodes, firstChild, nextSibling, emptyNode, insertAfter, allowedBindings, prepend, setDomNodeChildren} from './virtualElements';\nimport {cleanNode, removeNode, addDisposeCallback, removeDisposeCallback, _cleanExternalData, _overrideCleanExternalData} from './utils.domNodeDisposal';\nimport {dataFor, contextFor, applyBindings, applyBindingsToNode, applyBindingsToDescendants,\n        bindingEvent, applyBindingAccessorsToNode, _setKoReferenceForBindingContexts} from './binding/bindingAttributeSyntax';\nimport {bindingHandlers, getBindingHandler, _overrideGetBindingHandler} from './binding/bindingHandlers';\nimport * as utils from './utils';\nimport {parseHtmlForTemplateNodes, parseHtmlFragment, setHtml} from './utils.domManipulation';\nimport {cancelTask, runEarly, resetForTesting, scheduleTask, _scheduler, _overrideScheduler} from './tasks';\nimport {options} from './options';\nimport {computed, dependentObservable, pureComputed} from './subscribables/dependentObservable';\nimport {observable} from './subscribables/observable';\nimport {isWritableObservable, isSubscribable, isComputed, isPureComputed, isObservable, isObservableArray} from './subscribables/observableUtils';\nimport {Subscribable} from './subscribables/subscribable';\nimport {observableArray} from './subscribables/observableArray';\nimport {memoize, unmemoize, parseMemoText, unmemoizeDomNodeAndDescendants} from './memoization';\nimport {applyMemoizedBindingsToNextSibling} from './templating/templateRewriting';\nimport {getDomData, setDomData, clearDomData} from './utils.domData';\nimport {extenders} from './subscribables/extenders';\nimport {ignoreDependencyDetection, getDependencies, getDependenciesCount, isInitialDependency, registerDependency} from './subscribables/dependencyDetection';\nimport {toJS, toJSON} from './subscribables/mappingHelpers';\nimport {NativeTemplateEngine} from './templating/native/nativeTemplateEngine';\nimport {setTemplateEngine} from './templating/templating';\nimport {when} from './subscribables/when';\nimport {TemplateEngine} from './templating/templateEngine';\nimport {AnonymousTemplate, DomElementTemplate} from './templating/templateSources';\nimport {bindingRewriteValidators, parseObjectLiteral, preProcessBindings, _twoWayBindings} from './binding/expressionRewriting';\nimport {loaders as componentLoaders, _setComponentLoaders, getComponent, clearCachedDefinition} from './components/loaderRegistry';\nimport {defaultLoader, isComponentRegistered, registerComponent, unregisterComponent} from './components/defaultLoader';\nimport {setDomNodeChildrenFromArrayMapping} from './binding/editDetection/arrayToDomNodeChildren';\nimport {renderTemplate} from './templating/templating';\nimport {compareArrays, _overrideCompareArrays, findMovesInArrayComparison} from './binding/editDetection/compareArrays';\nimport {KoBindingProvider} from './binding/bindingProvider';\nimport {addBindingsForCustomElement, getComponentNameForNode, _overrideGetComponentNameForNode} from './components/customElements';\nimport './binding/defaultBindings/allDefaultBindings';\nimport {readSelectOrOptionValue, writeSelectOrOptionValue} from './binding/selectExtensions';\nimport {unwrapObservable} from './utils';\n\nconst expressionRewriting = {\n    bindingRewriteValidators,\n    parseObjectLiteral,\n    preProcessBindings,\n    _twoWayBindings,\n    insertPropertyAccessorsIntoJson: preProcessBindings // alias for backwards compat\n};\n\n\n// ********************** export all props/methods/namespaces to be exposed publicly *********************************\n\nconst ko = {\n    version, // eslint-disable-line no-undef\n    options,\n    utils: Object.assign({\n        setTimeout: utils.setTimeoutWithCatchError,  // alias for backwards compat.\n\n        parseHtmlFragment,\n        parseHtmlForTemplateNodes,\n        setHtml,\n        parseJson: JSON.parse,\n        setDomNodeChildrenFromArrayMapping,\n        get compareArrays() { return compareArrays; },\n        set compareArrays(fn) { _overrideCompareArrays(fn); },\n        findMovesInArrayComparison,\n\n        domData: {\n            get: getDomData,\n            set: setDomData,\n            clear: clearDomData\n        },\n        domNodeDisposal: {\n            removeNode,\n            get cleanExternalData() { return _cleanExternalData; },\n            set cleanExternalData(fn) { _overrideCleanExternalData(fn); },\n            addDisposeCallback,\n            removeDisposeCallback\n        }\n    }, utils),\n    unwrap: unwrapObservable,\n    removeNode,\n    cleanNode,\n    memoization: {\n        memoize,\n        unmemoize,\n        parseMemoText,\n        unmemoizeDomNodeAndDescendants\n    },\n    tasks: {\n        cancel: cancelTask,\n        runEarly,\n        resetForTesting,\n        schedule: scheduleTask,\n        get scheduler() { return _scheduler; },\n        set scheduler(s) { _overrideScheduler(s); }\n    },\n    extenders,\n    subscribable: Subscribable,\n    isSubscribable,\n    computedContext: {\n        getDependenciesCount,\n        getDependencies,\n        isInitial: isInitialDependency,\n        registerDependency\n    },\n    ignoreDependencies: ignoreDependencyDetection,\n    observable,\n    isObservable,\n    isWritableObservable,\n    isWriteableObservable: isWritableObservable,\n    observableArray,\n    isObservableArray,\n    computed,\n    dependentObservable,\n    isComputed,\n    isPureComputed,\n    pureComputed,\n    toJSON,\n    toJS,\n    when,\n    selectExtensions: {\n        readValue: readSelectOrOptionValue,\n        writeValue: writeSelectOrOptionValue\n    },\n    expressionRewriting,\n    jsonExpressionRewriting: expressionRewriting,\n    virtualElements: {\n        childNodes,\n        firstChild,\n        nextSibling,\n        allowedBindings,\n        emptyNode,\n        insertAfter,\n        prepend,\n        setDomNodeChildren\n    },\n    bindingProvider: KoBindingProvider,\n    get getBindingHandler() { return getBindingHandler; },\n    set getBindingHandler(fn) { _overrideGetBindingHandler(fn); },\n    bindingHandlers,\n    bindingEvent,\n    applyBindings,\n    applyBindingsToDescendants,\n    applyBindingAccessorsToNode,\n    applyBindingsToNode,\n    contextFor,\n    dataFor,\n    components: {\n        get loaders() { return componentLoaders; },\n        set loaders(newLoaders) { _setComponentLoaders(newLoaders); },\n        // Expose the default loader so that developers can directly ask it for configuration or to resolve configuration\n        defaultLoader,\n        get: getComponent,\n        clearCachedDefinition,\n        isRegistered: isComponentRegistered,\n        register: registerComponent,\n        unregister: unregisterComponent,\n        addBindingsForCustomElement,\n        get getComponentNameForNode() { return getComponentNameForNode; },\n        set getComponentNameForNode(fn) { _overrideGetComponentNameForNode(fn); }\n    },\n    templateEngine: TemplateEngine,\n    __tr_ambtns: applyMemoizedBindingsToNextSibling, // eslint-disable-line camelcase\n    templateSources: {\n        domElement: DomElementTemplate,\n        anonymousTemplate: AnonymousTemplate\n    },\n    setTemplateEngine,\n    renderTemplate,\n    nativeTemplateEngine: NativeTemplateEngine,\n    get onError() { return onError; },\n    set onError(fnOrNull) { _overrideOnError(fnOrNull); }\n};\n\n_setKoReferenceForBindingContexts(ko);\n\nexport default ko;\n"],"names":["setDomNodeChildren","utilsSetDomNodeChildren","virtualElementsSetDomNodeChildren","options","koOptions","ko","utils.setTimeoutWithCatchError","componentLoaders"],"mappings":"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"}