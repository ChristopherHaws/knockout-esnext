{"version":3,"file":"knockout.debug.mjs","sources":["../src/onError.js","../src/utils.domData.js","../src/subscribables/observableUtils.js","../src/subscribables/dependencyDetection.js","../src/utils.domNodeDisposal.js","../src/utils.domNodes.js","../src/virtualElements.js","../src/options.js","../src/utils.js","../src/tasks.js","../src/subscribables/deferredExtender.js","../src/subscribables/extenders.js","../src/subscribables/subscription.js","../src/subscribables/subscribable.js","../src/subscribables/dependentObservable.js","../src/binding/bindingHandlers.js","../src/binding/expressionRewriting.js","../src/components/loaderRegistry.js","../src/utils.domManipulation.js","../src/components/defaultLoader.js","../src/components/customElements.js","../src/binding/bindingProvider.js","../src/binding/bindingAttributeSyntax.js","../src/subscribables/observable.js","../src/binding/editDetection/compareArrays.js","../src/subscribables/observableArray.changeTracking.js","../src/subscribables/observableArray.js","../src/memoization.js","../src/templating/templateRewriting.js","../src/subscribables/mappingHelpers.js","../src/binding/editDetection/arrayToDomNodeChildren.js","../src/templating/templateSources.js","../src/templating/templateEngine.js","../src/templating/templating.js","../src/templating/native/nativeTemplateEngine.js","../src/subscribables/when.js","../src/binding/defaultBindings/attr.js","../src/binding/defaultBindings/checked.js","../src/binding/defaultBindings/event.js","../src/binding/defaultBindings/click.js","../src/binding/defaultBindings/css.js","../src/binding/defaultBindings/enableDisable.js","../src/binding/defaultBindings/foreach.js","../src/binding/defaultBindings/hasfocus.js","../src/binding/defaultBindings/html.js","../src/binding/defaultBindings/ifIfnotWith.js","../src/binding/defaultBindings/let.js","../src/binding/selectExtensions.js","../src/binding/defaultBindings/options.js","../src/binding/defaultBindings/selectedOptions.js","../src/binding/defaultBindings/style.js","../src/binding/defaultBindings/submit.js","../src/binding/defaultBindings/text.js","../src/binding/defaultBindings/textInput.js","../src/binding/defaultBindings/uniqueName.js","../src/binding/defaultBindings/using.js","../src/binding/defaultBindings/value.js","../src/binding/defaultBindings/visibleHidden.js","../src/components/componentBinding.js","../src/ko.js"],"sourcesContent":["\r\n/** @type {function} */\r\nexport let onError = null;\r\n\r\nexport const _overrideOnError = (fnOrNull) => {\r\n    if (fnOrNull && typeof fnOrNull !== 'function') {\r\n        throw new Error('ko.onError must be function or nullish');\r\n    }\r\n    onError = fnOrNull;\r\n};\r\n","\r\nexport const DOM_DATASTORE_PROP = Symbol('ko-domdata');\r\n\r\nconst KEY_PREFIX = 'ko_' + Date.now().toString(36) + '_';\r\n\r\nlet _keyCount = 0;\r\nexport const nextDomDataKey = () => KEY_PREFIX + (++_keyCount);\r\n\r\nexport const getDomData = (node, key) => node[DOM_DATASTORE_PROP] && node[DOM_DATASTORE_PROP][key]; //@inline-global:DOM_DATASTORE_PROP\r\n\r\nexport const setDomData = (node, key, value) => {\r\n    // Make sure we don't actually create a new domData key if we are actually deleting a value\r\n    let dataForNode = node[DOM_DATASTORE_PROP] || (value !== undefined && (node[DOM_DATASTORE_PROP] = {}));\r\n    if (dataForNode) {\r\n        dataForNode[key] = value;\r\n    }\r\n};\r\n\r\n/**\r\n *\r\n * @param {Node} node\r\n * @return {boolean} - true if there was actually a domData deleted on the node\r\n */\r\nexport const clearDomData = (node) => node[DOM_DATASTORE_PROP] ? !(node[DOM_DATASTORE_PROP] = undefined) : false;\r\n\r\n","export const IS_SUBSCRIBABLE = Symbol('IS_SUBSCRIBABLE');\r\nexport const isSubscribable = (obj) => !!(obj && obj[IS_SUBSCRIBABLE]); //@inline-global:IS_SUBSCRIBABLE\r\n\r\nexport const IS_OBSERVABLE = Symbol('IS_OBSERVABLE');\r\nexport const isObservable = (obj) => !!(obj && obj[IS_OBSERVABLE]);\r\nexport const unwrapObservable = (value) => value && (value[IS_OBSERVABLE] ? value() : value);\r\n\r\nexport const IS_OBSERVABLE_ARRAY = Symbol('IS_OBSERVABLE_ARRAY');\r\nexport const isObservableArray = (obj) => !!(obj && obj[IS_OBSERVABLE_ARRAY]);\r\n\r\nexport const IS_COMPUTED = Symbol('IS_COMPUTED');\r\nexport const isComputed = (obj) => !!(obj && obj[IS_COMPUTED]);\r\n\r\nexport const IS_PURE_COMPUTED = Symbol('IS_PURE_COMPUTED');\r\nexport const isPureComputed = (obj) => !!(obj && obj[IS_PURE_COMPUTED]);\r\n\r\nexport const isWritableObservable = (obj) => !!(obj && (obj[IS_COMPUTED] ? obj.hasWriteFunction : obj[IS_OBSERVABLE]));\r\nexport const isWriteable = isWritableObservable;\r\n","import {isSubscribable} from './observableUtils';\r\n\r\nconst outerFrames = [];\r\nlet currentFrame,\r\n    lastId = 0;\r\n\r\nexport const beginDependencyDetection = options => {\r\n    outerFrames.push(currentFrame);\r\n    currentFrame = options;\r\n};\r\n\r\nconst _beginDependencyDetectionWithEmptyFrame = () => currentFrame = void outerFrames.push(currentFrame); //@inline\r\n\r\nexport const endDependencyDetection = () => currentFrame = outerFrames.pop(); //@inline\r\n\r\n/**\r\n * For ko-internal usages without callbackTarget and callbackArgs use {@link ignoreDependencyDetectionNoArgs}.\r\n * @param {function} callback\r\n * @param {?Object} [callbackTarget]\r\n * @param {any[]} [callbackArgs]\r\n * @return {*} the callback's return value\r\n */\r\nexport const ignoreDependencyDetection = (callback, callbackTarget, callbackArgs) => {\r\n    try {\r\n        _beginDependencyDetectionWithEmptyFrame();\r\n        \r\n        // there's a high percentage of calls without callbackTarget and/or callbackArgs, \r\n        // so let's speed up things by not using `apply` or args in those cases.\r\n        return callbackTarget ? callback.apply(callbackTarget, callbackArgs || []) :\r\n               callbackArgs ? callback(...callbackArgs) : callback();\r\n    } finally {\r\n        endDependencyDetection();\r\n    }\r\n};\r\n\r\n/**\r\n * Slim version of {@link ignoreDependencyDetection} intended for pure, no-args callbacks. \r\n * @param {function} callback\r\n * @return {*}\r\n * @internal\r\n */\r\nexport const ignoreDependencyDetectionNoArgs = (callback) => {\r\n    try {\r\n        _beginDependencyDetectionWithEmptyFrame();\r\n        return callback();\r\n    } finally {\r\n        endDependencyDetection();\r\n    }\r\n};\r\n\r\n\r\n// Return a unique ID that can be assigned to an observable for dependency tracking.\r\n// Theoretically, you could eventually overflow the number storage size, resulting\r\n// in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\r\n// or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\r\n// take over 285 years to reach that number.\r\n// Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\r\nconst _getId = () => ++lastId; //@inline\r\n\r\nconst _runCallback = (subscribable) => currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = _getId())); //@inline\r\n\r\n/**\r\n * For ko-internal usage, there is no reason to waste cycles with 'isSubscribable'-checks.  \r\n */\r\nexport const registerDependencyInternal = (subscribable) => currentFrame && _runCallback(subscribable);\r\n\r\nexport const registerDependencyExternal = (subscribable) => {\r\n    if (currentFrame) {\r\n        if (!isSubscribable(subscribable)) {\r\n            throw new Error('Only subscribable things can act as dependencies');\r\n        }\r\n        _runCallback(subscribable);\r\n    }\r\n};\r\n\r\nexport const getDependenciesCount = () => currentFrame ? currentFrame.computed.getDependenciesCount() : undefined;\r\nexport const getDependencies = () => currentFrame ? currentFrame.computed.getDependencies() : undefined;\r\nexport const isInitialDependency = () => currentFrame ? currentFrame.isInitial : undefined;\r\nexport const getCurrentComputed = () => currentFrame ? currentFrame.computed : undefined;\r\n","import {DOM_DATASTORE_PROP,\r\n    nextDomDataKey\r\n} from './utils.domData';\r\nimport {ignoreDependencyDetectionNoArgs} from './subscribables/dependencyDetection';\r\n\r\nconst DISPOSE_CALLBACKS_DOM_DATA_KEY = nextDomDataKey();\r\n\r\n// Node types: Element(1), Comment(8), Document(9)\r\nconst _isNodeTypeCleanable = nodeType => nodeType === 1 || nodeType === 8 || nodeType === 9; //@inline\r\nconst _isNodeTypeCleanableWithDescendents = nodeType => nodeType === 1 || nodeType === 9; //@inline\r\n\r\n\r\n/** @type {function|boolean} */\r\nexport let _cleanExternalData = false;\r\nexport const _overrideCleanExternalData = (fn) => _cleanExternalData = fn;\r\n\r\nconst _cleanSingleNode = (node) => {\r\n    // Run all the dispose callbacks & ease the DOM data\r\n    let domData = node[DOM_DATASTORE_PROP];\r\n    if (domData) {\r\n        let disposeCallbackFns = domData[DISPOSE_CALLBACKS_DOM_DATA_KEY];\r\n        if (disposeCallbackFns) {\r\n            for (let fn of disposeCallbackFns.slice(0)) {\r\n                fn(node);\r\n            }\r\n        }\r\n        node[DOM_DATASTORE_PROP] = undefined;\r\n    }\r\n    \r\n    // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\r\n    if (_cleanExternalData) {\r\n        _cleanExternalData(node);\r\n    }\r\n    \r\n    // Clear any immediate-child comment nodes, as these wouldn't have been found by\r\n    // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\r\n    if (_isNodeTypeCleanableWithDescendents(node.nodeType)) {\r\n        if (node.hasChildNodes()) {\r\n            _cleanNodesInList(node.childNodes, true /*onlyComments*/);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @param {HTMLCollection|NodeList} nodeList\r\n * @param {boolean} [onlyComments]\r\n * @private\r\n */\r\nconst _cleanNodesInList = (nodeList, onlyComments) => {\r\n    let cleanedNodes = [],\r\n        cleanedNodesIndex = -1,    \r\n        lastCleanedNode;\r\n    \r\n    for (let i = 0, node; i < nodeList.length; i++) {\r\n        node = nodeList[i]; \r\n        if (!onlyComments || node.nodeType === 8) {\r\n            _cleanSingleNode(cleanedNodes[++cleanedNodesIndex] = lastCleanedNode = node);\r\n            if (nodeList[i] !== lastCleanedNode) {\r\n                while (i-- && !cleanedNodes.includes(nodeList[i])) {\r\n                    // just do\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @param {Node} node\r\n * @param {function} callback \r\n */\r\nexport const addDisposeCallback = (node, callback) => {\r\n    let dataForNode = node[DOM_DATASTORE_PROP] || (node[DOM_DATASTORE_PROP] = {}),\r\n        itemArray = dataForNode[DISPOSE_CALLBACKS_DOM_DATA_KEY];\r\n\r\n    if (itemArray) {\r\n        itemArray.push(callback);\r\n    } else {\r\n        dataForNode[DISPOSE_CALLBACKS_DOM_DATA_KEY] = [callback];\r\n    }\r\n};\r\n\r\n /**\r\n * @param {Node} node\r\n * @param {function} callbackToRemove\r\n */\r\nexport const removeDisposeCallback = (node, callbackToRemove) => {\r\n    let dataForNode = node[DOM_DATASTORE_PROP],\r\n        callbacks,\r\n        index;\r\n\r\n    if (dataForNode && (callbacks = dataForNode[DISPOSE_CALLBACKS_DOM_DATA_KEY]) && (index = callbacks.indexOf(callbackToRemove)) >= 0) {\r\n        if (callbacks.length === 1) {\r\n            // just leave the entire array to garbage collection \r\n            // not using 'delete' here as it seems 98% slower in chrome  \r\n            dataForNode[DISPOSE_CALLBACKS_DOM_DATA_KEY] = undefined;\r\n        } else if (!index) {\r\n            callbacks.shift();\r\n        } else {\r\n            callbacks.splice(index, 1);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Cleanable node types: Element 1, Comment 8, Document 9\r\n * @param {Node|HTMLElement} node\r\n * @return {Node|HTMLElement}\r\n */\r\nexport const cleanNode = (node) => {\r\n    if (_isNodeTypeCleanable(node.nodeType)) {\r\n        ignoreDependencyDetectionNoArgs(() => {\r\n            // First clean this node, where applicable\r\n            _cleanSingleNode(node);\r\n            // ... then its descendants, where applicable\r\n            if (_isNodeTypeCleanableWithDescendents(node.nodeType)) {\r\n                let cleanableNodesList = node.getElementsByTagName('*');\r\n                if (cleanableNodesList.length) {\r\n                    _cleanNodesInList(cleanableNodesList);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return node;\r\n};\r\n\r\nexport const removeNode = (node) => cleanNode(node).remove(); //@inline-global:cleanNode\r\n","import {removeNode} from './utils.domNodeDisposal';\r\n\r\nexport const emptyDomNode = (domNode) => {\r\n    let child;\r\n    while (child = domNode.firstChild) {\r\n        removeNode(child);\r\n    }\r\n};\r\n\r\nexport const setDomNodeChildren = (domNode, childNodes) => {\r\n    emptyDomNode(domNode);\r\n    if (childNodes) {\r\n        for (let i = 0, j = childNodes.length; i < j; i++) {\r\n            domNode.appendChild(childNodes[i]);\r\n        }\r\n    }\r\n};\r\n","// \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\r\n// may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\r\n// If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\r\n// of that virtual hierarchy\r\n//\r\n// The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\r\n// without having to scatter special cases all over the binding and templating code.\r\nimport {emptyDomNode, setDomNodeChildren as utilsSetDomNodeChildren} from './utils.domNodes';\r\nimport {removeNode} from './utils.domNodeDisposal';\r\n\r\nexport const START_COMMENT_REGEX = /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\r\nexport const END_COMMENT_REGEX =   /^\\s*\\/ko\\s*$/;\r\n\r\nconst SYM_MATCHED_END_COMMENT = Symbol('__ko_matchedEndComment__');\r\n\r\nexport const allowedBindings = {};\r\nexport const allowedVirtualElementBindings = allowedBindings;\r\n\r\nconst _isStartComment = (node) => (node.nodeType === 8) && START_COMMENT_REGEX.test(node.nodeValue); //@inline-global:START_COMMENT_REGEX\r\nconst _isEndComment = (node) => (node.nodeType === 8) && END_COMMENT_REGEX.test(node.nodeValue); //@inline-global:END_COMMENT_REGEX\r\n\r\nexport const _getVirtualChildren = (startComment, allowUnbalanced) => {\r\n        let currentNode = startComment.nextSibling,\r\n            depth = 1,\r\n            childIndex = -1,\r\n            children = [];\r\n        \r\n        while (currentNode) {\r\n            if (_isEndComment(currentNode)) {\r\n                currentNode[SYM_MATCHED_END_COMMENT] = true;\r\n                if (!--depth) {\r\n                    return children;\r\n                }\r\n            }\r\n            children[++childIndex] = currentNode;\r\n            if (_isStartComment(currentNode)) {\r\n                depth++;\r\n            }\r\n            currentNode = currentNode.nextSibling;\r\n        }\r\n        if (!allowUnbalanced) {\r\n            throw new Error('Cannot find closing comment tag to match: ' + startComment.nodeValue);\r\n        }\r\n        return null;\r\n    };\r\n\r\nconst _getMatchingEndComment = (startComment, allowUnbalanced) => {\r\n    let allVirtualChildren = _getVirtualChildren(startComment, allowUnbalanced);\r\n    if (allVirtualChildren) {\r\n        let totalVirtualChildren = allVirtualChildren.length;\r\n        return (totalVirtualChildren ? allVirtualChildren[totalVirtualChildren - 1] : startComment).nextSibling;\r\n    }\r\n    return null; // Must have no matching end comment, and allowUnbalanced is true\r\n};\r\n\r\nexport const childNodes = (node) => _isStartComment(node) ? _getVirtualChildren(node) : node.childNodes; //@inline-global:START_COMMENT_REGEX,_getVirtualChildren\r\n\r\nexport const emptyNode = (node) => {\r\n    if (!_isStartComment(node)) {\r\n        emptyDomNode(node);\r\n        return;\r\n    }\r\n    let virtualChildren = childNodes(node);\r\n    for (let i = 0, j = virtualChildren.length; i < j; i++) {\r\n        removeNode(virtualChildren[i]);\r\n    }\r\n};\r\n\r\nexport const setDomNodeChildren = (node, childNodes) => {\r\n    if (!_isStartComment(node)) {\r\n        utilsSetDomNodeChildren(node, childNodes);\r\n        return;\r\n    }\r\n    emptyNode(node);\r\n    let endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\r\n    for (let i = 0, j = childNodes.length; i < j; i++) {\r\n        endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\r\n    }\r\n};\r\n\r\nexport const prepend = (containerNode, nodeToPrepend) => {\r\n    let insertBeforeNode;\r\n\r\n    if (_isStartComment(containerNode)) {\r\n        // Start comments must always have a parent and at least one following sibling (the end comment)\r\n        insertBeforeNode = containerNode.nextSibling;\r\n        containerNode = containerNode.parentNode;\r\n    } else {\r\n        insertBeforeNode = containerNode.firstChild;\r\n    }\r\n\r\n    if (!insertBeforeNode) {\r\n        containerNode.appendChild(nodeToPrepend);\r\n    } else if (nodeToPrepend !== insertBeforeNode) {       // IE will sometimes crash if you try to insert a node before itself\r\n        containerNode.insertBefore(nodeToPrepend, insertBeforeNode);\r\n    }\r\n};\r\n\r\nexport const insertAfter = (containerNode, nodeToInsert, insertAfterNode) => {\r\n    if (!insertAfterNode) {\r\n        prepend(containerNode, nodeToInsert);\r\n        return;\r\n    }\r\n    // Children of start comments must always have a parent and at least one following sibling (the end comment)\r\n    let insertBeforeNode = insertAfterNode.nextSibling;\r\n\r\n    if (_isStartComment(containerNode)) {\r\n        containerNode = containerNode.parentNode;\r\n    }\r\n\r\n    if (!insertBeforeNode) {\r\n        containerNode.appendChild(nodeToInsert);\r\n    } else if (nodeToInsert !== insertBeforeNode) {       // IE will sometimes crash if you try to insert a node before itself\r\n        containerNode.insertBefore(nodeToInsert, insertBeforeNode);\r\n    }\r\n};\r\n\r\nexport const firstChild = (node) => {\r\n    if (!_isStartComment(node)) {\r\n        let _nodeFirstChild = node.firstChild; \r\n        if (_nodeFirstChild && _isEndComment(_nodeFirstChild)) {\r\n            throw new Error('Found invalid end comment, as the first child of ' + node);\r\n        }\r\n        return _nodeFirstChild;\r\n    } \r\n    let _nodeNextSibling = node.nextSibling;\r\n    if (!_nodeNextSibling|| _isEndComment(_nodeNextSibling)) {\r\n        return null;\r\n    }\r\n    return _nodeNextSibling;\r\n};\r\n\r\nexport const nextSibling = (node) => {\r\n    if (_isStartComment(node)) {\r\n        node = _getMatchingEndComment(node);\r\n    }\r\n    let _nodeNextSibling = node.nextSibling;\r\n    if (_nodeNextSibling && _isEndComment(_nodeNextSibling)) {\r\n        if (!_nodeNextSibling[SYM_MATCHED_END_COMMENT]) {\r\n            // unmatched end comment!\r\n            throw Error('Found end comment without a matching opening comment, as child of ' + node);\r\n        } \r\n        return null;\r\n    }\r\n    return _nodeNextSibling;\r\n};\r\n\r\n","// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\r\nexport const options = {\r\n    deferUpdates: false,\r\n    useOnlyNativeEvents: false,\r\n    foreachHidesDestroyed: false\r\n};\r\n","import {isObservable, unwrapObservable} from './subscribables/observableUtils';\r\nimport {cleanNode, removeNode} from './utils.domNodeDisposal';\r\nimport {firstChild, nextSibling, setDomNodeChildren as virtualElementsSetDomNodeChildren} from './virtualElements';\r\nimport {onError} from './onError';\r\n\r\n\r\n// For details on the pattern for changing node classes\r\n// see: https://github.com/knockout/knockout/issues/1597\r\nconst CSS_CLASSNAME_REGEX = /\\S+/g;\r\n\r\n// using a map for lookups is 33% faster than plain objects in Chrome 79, and only 5ish % slower in Firefox 72 \r\nconst KNOWN_EVENT_TYPES_BY_EVENT_NAME = new Map();\r\nfor (let eventName of ['keyup', 'keydown', 'keypress']) {\r\n    KNOWN_EVENT_TYPES_BY_EVENT_NAME.set(eventName, 'UIEvents');\r\n}\r\nfor (let eventName of ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave']) {\r\n    KNOWN_EVENT_TYPES_BY_EVENT_NAME.set(eventName, 'MouseEvents');\r\n}\r\n\r\nexport const canSetPrototype = ({__proto__: []} instanceof Array);\r\n    \r\nexport const hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport const objectForEach = (obj, action) => {\r\n    if (obj) {\r\n        for (let prop of Object.keys(obj)) {\r\n            action(prop, obj[prop]);\r\n        }\r\n    }\r\n};\r\n\r\nexport const extend = Object.assign;\r\n\r\nexport const setPrototypeOf = (obj, proto)  => {\r\n    obj.__proto__ = proto;\r\n    return obj;\r\n};\r\n\r\n// shortcut for if (canSetPrototype) ... \r\nexport const trySetPrototypeOf = canSetPrototype ? setPrototypeOf : () => null;\r\n\r\nexport const setPrototypeOfOrExtend = canSetPrototype ? setPrototypeOf : extend;\r\n\r\nexport const toggleObjectClassPropertyString = (obj, prop, classNames, shouldHaveClass) => {\r\n    // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\r\n    let currentClassNames = obj[prop].match(CSS_CLASSNAME_REGEX) || [];\r\n    for (let className of classNames.match(CSS_CLASSNAME_REGEX)) {\r\n        addOrRemoveItem(currentClassNames, className, shouldHaveClass);\r\n    }\r\n    obj[prop] = currentClassNames.join(' ');\r\n};\r\n\r\nexport const toggleDomNodeCssClass = (node, classNames, shouldHaveClass) => {\r\n    if (classNames) {\r\n        if (typeof node.classList === 'object') {\r\n            let addOrRemove = shouldHaveClass ? 'add' : 'remove';\r\n            for (let className of classNames.match(CSS_CLASSNAME_REGEX)) {\r\n                node.classList[addOrRemove](className);\r\n            }\r\n        } else if (typeof node.className['baseVal'] === 'string') {\r\n            // SVG tag .classNames is an SVGAnimatedString instance\r\n            toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\r\n        } else {\r\n            // node.className ought to be a string.\r\n            toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\r\n        }\r\n    }\r\n};\r\n\r\nexport const fieldsIncludedWithJsonPost = ['authenticity_token', /^__RequestVerificationToken(_.*)?$/];\r\n\r\nexport const arrayForEach = (array, action, actionOwner) => {\r\n    for (let i = 0, j = array.length; i < j; i++) {\r\n        action.call(actionOwner, array[i], i, array);\r\n    }\r\n};\r\n\r\nexport const arrayIndexOf = (array, item) => array.indexOf(item);\r\n\r\nexport const arrayFirst = function (array, predicate, predicateOwner) {\r\n    for (let i = 0, j = array.length; i < j; i++) {\r\n        if (predicate.call(predicateOwner, array[i], i, array)) {\r\n            return array[i];\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\n\r\nexport const arrayRemoveItem = (array, itemToRemove) => {\r\n    let index = (array && array.length) ? array.indexOf(itemToRemove) : -1;\r\n    if (index === 0) {\r\n        array.shift();\r\n    } else if (index > 0) {\r\n        array.splice(index, 1);\r\n    }\r\n};\r\n\r\nexport const arrayGetDistinctValues = (array) => {\r\n    let result = [],\r\n        nextIndex = 0;\r\n    if (array) {\r\n        for (let item of array) {\r\n            if (!result.includes(item)) {\r\n                result[nextIndex++] = item;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const arrayMap = (array, mapping, mappingOwner) => {\r\n    let result = [],\r\n        nextIndex = 0;\r\n    if (array) {\r\n        for (let i = 0, j = array.length; i < j; i++) {\r\n            result[nextIndex++] = mapping.call(mappingOwner, array[i], i);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const arrayFilter = (array, predicate, predicateOwner) => {\r\n    let result = [],\r\n        nextIndex = 0;\r\n    if (array) {\r\n        for (let i = 0, j = array.length; i < j; i++) {\r\n            if (predicate.call(predicateOwner, array[i], i)) {\r\n                result[nextIndex++] = array[i];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const arrayPushAll = (array, valuesToPush) => {\r\n    for (let i = 0, targetIndex = array.length, len = valuesToPush.length; i < len; i++, targetIndex++) {\r\n        array[targetIndex] = valuesToPush[i];\r\n    }\r\n    return array;\r\n};\r\n\r\nexport const peekObservable = (value) => isObservable(value) ? value.peek() : value;\r\n\r\nexport const addOrRemoveItem = (array, value, included) => {\r\n    let existingEntryIndex = peekObservable(array).indexOf(value);\r\n    if (existingEntryIndex < 0) {\r\n        if (included) {\r\n            array.push(value);\r\n        }\r\n    } else if (!included) {\r\n        array.splice(existingEntryIndex, 1);\r\n    }\r\n};\r\n\r\nexport const objectMap = (source, mapping, mappingOwner) => {\r\n    if (!source) {\r\n        return source;\r\n    }\r\n    let target = {};\r\n    for (let prop of Object.keys(source)) {\r\n        target[prop] = mapping.call(mappingOwner, source[prop], prop, source);\r\n    }\r\n    return target;\r\n};\r\n\r\nexport const moveCleanedNodesToContainerElement = (nodes) => {\r\n    // Ensure it's a real array, as we're about to re-parent the nodes and\r\n    // we don't want the underlying collection to change while we're doing that.\r\n    // (!) don't use 'nodesArray = [...nodes]' as rest parameter is rel. slow; see comment in parseHtmlFragment()\r\n    let nodesArray = [],\r\n        len = nodes.length,\r\n        container = (len && nodes[0].ownerDocument || document).createElement('div');\r\n    \r\n    for (let i = 0; i < len; i++) {\r\n        nodesArray[i] = nodes[i];\r\n    }\r\n    for (let i = 0; i < len; i++) {\r\n        container.appendChild(cleanNode(nodesArray[i]));\r\n    }\r\n    return container;\r\n};\r\n\r\nexport const cloneNodes = (nodesArray, shouldCleanNodes) => {\r\n    let newNodesArray = [];\r\n    for (let i = 0, len = nodesArray.length; i < len; i++) {\r\n        newNodesArray[i] = shouldCleanNodes ? cleanNode(nodesArray[i].cloneNode(true)) : nodesArray[i].cloneNode(true);\r\n    }\r\n    return newNodesArray;\r\n};\r\n\r\nexport const replaceDomNodes = (nodeToReplaceOrNodeArray, newNodesArray) => {\r\n    let nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\r\n    if (nodesToReplaceArray.length > 0) {\r\n        let insertionPoint = nodesToReplaceArray[0];\r\n        let parent = insertionPoint.parentNode;\r\n        for (let i = 0, j = newNodesArray.length; i < j; i++) {\r\n            parent.insertBefore(newNodesArray[i], insertionPoint);\r\n        }\r\n        for (let i = 0, j = nodesToReplaceArray.length; i < j; i++) {\r\n            removeNode(nodesToReplaceArray[i]);\r\n        }\r\n    }\r\n};\r\n\r\nexport const fixUpContinuousNodeArray = (continuousNodeArray, parentNode) => {\r\n    // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\r\n    // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\r\n    // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\r\n    // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\r\n    // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\r\n    //\r\n    // Rules:\r\n    //   [A] Any leading nodes that have been removed should be ignored\r\n    //       These most likely correspond to memoization nodes that were already removed during binding\r\n    //       See https://github.com/knockout/knockout/pull/440\r\n    //   [B] Any trailing nodes that have been remove should be ignored\r\n    //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\r\n    //       See https://github.com/knockout/knockout/pull/1903\r\n    //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\r\n    //       and include any nodes that have been inserted among the previous collection\r\n\r\n    if (continuousNodeArray.length) {\r\n        // The parent node can be a virtual element; so get the real parent node\r\n        parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\r\n\r\n        // Rule [A]\r\n        while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode) {\r\n            continuousNodeArray.splice(0, 1);\r\n        }\r\n        // Rule [B]\r\n        while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode) {\r\n            continuousNodeArray.length--;\r\n        }\r\n        // Rule [C]\r\n        if (continuousNodeArray.length > 1) {\r\n            let current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\r\n            // Replace with the actual new continuous node set\r\n            continuousNodeArray.length = 0;\r\n            while (current !== last) {\r\n                continuousNodeArray.push(current);\r\n                current = current.nextSibling;\r\n            }\r\n            continuousNodeArray.push(last);\r\n        }\r\n    }\r\n    return continuousNodeArray;\r\n};\r\n\r\nexport const setOptionNodeSelectionState = (optionNode, isSelected) => optionNode.selected = isSelected;\r\n\r\nexport const stringTrim = (string) => (string === null || string === undefined) ? '' : \r\n                                       string.trim ? string.trim() : string.toString().trim();\r\n\r\n/** @deprecated */\r\nexport const stringStartsWith = (string, startsWith) => (string || '').startsWith(startsWith);\r\n\r\nexport const domNodeIsContainedBy = (node, containedByNode) => {\r\n    if (node === containedByNode) {\r\n        return true;\r\n    }\r\n    if (containedByNode.contains) {\r\n        return containedByNode.contains(node.nodeType !== 1 ? node.parentNode : node);\r\n    }\r\n    if (containedByNode.compareDocumentPosition) {\r\n        return (containedByNode.compareDocumentPosition(node) & 16) === 16;\r\n    }\r\n    while (node && node !== containedByNode) {\r\n        node = node.parentNode;\r\n    }\r\n    return !!node;\r\n};\r\n\r\nexport const domNodeIsAttachedToDocument = (node) => node ? !!node.isConnected : false;\r\n\r\n/**\r\n * @param {Node[]} nodes\r\n * @return {boolean}\r\n */\r\nexport const anyDomNodeIsAttachedToDocument = (nodes) => {\r\n    for (let node of nodes) {\r\n        if (node.isConnected) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\n// For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\r\n// Possible future optimization: If we know it's an element from an XHTML document (not HTML),\r\n// we don't need to do the .toLowerCase() as it will always be lower case anyway.\r\nexport const tagNameLower = (element) => {\r\n    let tagName = element && element.tagName;\r\n    return tagName && tagName.toLowerCase();\r\n};\r\n\r\nexport const catchFunctionErrors = (delegate) => {\r\n    return onError ? function() {\r\n            try {\r\n                // direct call is faster than delegate.apply, and the delegate itself is responsible of its 'this' \r\n                return delegate(...arguments);\r\n            } catch (e) {\r\n                onError && onError(e);\r\n                throw e;\r\n            }\r\n        } : delegate;\r\n};\r\n\r\nexport const setTimeoutWithCatchError = (handler, timeout) => setTimeout(catchFunctionErrors(handler), timeout);\r\n\r\nexport const deferError = (error) => {\r\n    setTimeout(() => {\r\n        onError && onError(error);\r\n        throw error;\r\n    }, 0);\r\n};\r\n\r\nexport const valuesArePrimitiveAndEqual = (PRIMITIVE_TYPES => (a, b) => {\r\n    let oldValueIsPrimitive = (a === null) || PRIMITIVE_TYPES[typeof a];\r\n    return oldValueIsPrimitive ? (a === b) : false;\r\n})({'undefined': 1, 'boolean': 1, 'number': 1, 'string': 1});\r\n\r\nexport const registerEventHandler = (element, eventType, handler) => {\r\n    if (typeof element.addEventListener === 'function') {\r\n        element.addEventListener(eventType, catchFunctionErrors(handler), false);\r\n        return;\r\n    }\r\n    throw new Error('Browser doesn\\'t support addEventListener');\r\n};\r\n\r\nexport const triggerEvent = (element, eventType) => {\r\n    if (!(element && element.nodeType)) {\r\n        throw new Error('element must be a DOM node when calling triggerEvent');\r\n    }\r\n\r\n    if (typeof element.dispatchEvent === 'function') {\r\n        let eventCategory = KNOWN_EVENT_TYPES_BY_EVENT_NAME.get(eventType) || 'HTMLEvents',\r\n            event = document.createEvent(eventCategory);\r\n        event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\r\n        element.dispatchEvent(event);\r\n        return;\r\n    }\r\n    throw new Error('The supplied element doesn\\'t support dispatchEvent');\r\n};\r\n\r\nexport const setTextContent = (element, textContent) => {\r\n    let value = unwrapObservable(textContent);\r\n    if (value === null || value === undefined) {\r\n        value = '';\r\n    }\r\n\r\n    // We need there to be exactly one child: a text node.\r\n    // If there are no children, more than one, or if it's not a text node,\r\n    // we'll clear everything and create a single text node.\r\n    let innerTextNode = firstChild(element);\r\n    if (!innerTextNode || innerTextNode.nodeType !== 3 || nextSibling(innerTextNode)) {\r\n        virtualElementsSetDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\r\n    } else {\r\n        innerTextNode.data = value;\r\n    }\r\n};\r\n\r\n/** @deprecated - too trivial*/\r\nexport const setElementName = (element, name) => element.name = name;\r\n\r\nexport const range = function (min, max) {\r\n    let result = [];\r\n    for (let i = unwrapObservable(min), max = unwrapObservable(max); i <= max; i++) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n};\r\n\r\n/** @deprecated - modern ES has enough means to turn array-like structures into Arrays -> Array.from(), [...values] */\r\nexport const makeArray = (arrayLikeObject) => {\r\n    let result = [];\r\n    for (let i = 0, j = arrayLikeObject.length; i < j; i++) {\r\n        result[i] = arrayLikeObject[i];\r\n    }\r\n    return result;\r\n};\r\n\r\n/**\r\n * @param {string} identifier\r\n * @return {symbol}\r\n * @deprecated - in here for legacy purposes only\r\n */\r\nexport const createSymbolOrString = identifier => Symbol(identifier);\r\n\r\nexport const getFormFields = (form, fieldName) => {\r\n    let fields = [...form.getElementsByTagName('input'), ...form.getElementsByTagName('textarea')];\r\n    let isMatchingField = (typeof fieldName === 'string') ? (field) => field.name === fieldName\r\n                                                         : (field) => fieldName.test(field.name);\r\n        // Treat fieldName as regex or object containing predicate\r\n    let matches = [];\r\n    for (let i = fields.length - 1; i >= 0; i--) {\r\n        if (isMatchingField(fields[i])) {\r\n            matches.push(fields[i]);\r\n        }\r\n    }\r\n    return matches;\r\n};\r\n\r\n// replacer and space are optional\r\nexport const stringifyJson = (data, replacer, space) => JSON.stringify(unwrapObservable(data), replacer, space);\r\n\r\nexport const postJson = function(urlOrForm, data, options) {\r\n    options = options || {};\r\n    let params = options['params'] || {},\r\n        includeFields = options['includeFields'] || fieldsIncludedWithJsonPost,\r\n        url = urlOrForm;\r\n\r\n    // If we were given a form, use its 'action' URL and pick out any requested field values\r\n    if ((typeof urlOrForm === 'object') && (tagNameLower(urlOrForm) === 'form')) {\r\n        let originalForm = urlOrForm;\r\n        url = originalForm.action;\r\n        for (let i = includeFields.length - 1; i >= 0; i--) {\r\n            let fields = getFormFields(originalForm, includeFields[i]);\r\n            for (let j = fields.length - 1; j >= 0; j--) {\r\n                params[fields[j].name] = fields[j].value;\r\n            }\r\n        }\r\n    }\r\n    data = unwrapObservable(data);\r\n    let form = document.createElement('form');\r\n    form.style.display = 'none';\r\n    form.action = url;\r\n    form.method = 'post';\r\n    if (data) {\r\n        for (let key of Object.keys(data)) {\r\n            // Since 'data' this is a model object, we include all properties including those inherited from its prototype\r\n            let input = document.createElement('input');\r\n            input.type = 'hidden';\r\n            input.name = key;\r\n            input.value = stringifyJson(unwrapObservable(data[key]));\r\n            form.appendChild(input);\r\n        }\r\n    }\r\n    if (params) {\r\n        for (let key of Object.keys(params)) {\r\n            let input = document.createElement('input');\r\n            input.type = 'hidden';\r\n            input.name = key;\r\n            input.value = params[key];\r\n            form.appendChild(input);\r\n        }\r\n    }\r\n    document.body.appendChild(form);\r\n    options.submitter ? options.submitter(form) : form.submit();\r\n    setTimeout(() => form.parentNode.removeChild(form), 0);\r\n};\r\n\r\n/**\r\n * Converts a kebab-case string into camelCase.\r\n * @param {string} s - a kebab string; a leading dash or contained double dashes are considered non-kebab\r\n * @return {string} - the converted string if the input was kebab, otherwise the original string\r\n */\r\nexport const kebabToCamelCase = (s) => {\r\n    let lastI = 0,\r\n        i = s.indexOf('-'),\r\n        out = '';\r\n\r\n    while (i > 0) {\r\n        if (s[i+1] === '-') {\r\n            return s; // early-exit if non-kebab detected\r\n        }\r\n        out += s.substring(lastI, i) + s[i+1].toUpperCase();\r\n        i = s.indexOf('-', lastI = i + 2);\r\n    }\r\n    return lastI ? out + s.substring(lastI) : s;\r\n};\r\n","import {deferError} from './utils';\r\n\r\nconst _taskQueue = [];\r\n\r\nlet _taskQueueLength = 0,\r\n    _nextHandle = 1,\r\n    _nextIndexToProcess = 0;\r\n\r\nexport let _scheduler;\r\n\r\n// allows for overriding the default scheduler by assigning 'ko.tasks.scheduler = someCustomScheduler' (see ko.js)\r\nexport const _overrideScheduler = newScheduler => {\r\n    if (typeof newScheduler !== 'function') {\r\n        throw new Error('Scheduler must be a function');    \r\n    }\r\n    _scheduler = newScheduler;\r\n};\r\n\r\nconst _processTasks = () => {\r\n    if (!_taskQueueLength) {\r\n        return;\r\n    }\r\n    // Each mark represents the end of a logical group of tasks and the number of these groups is\r\n    // limited to prevent unchecked recursion.\r\n    let mark = _taskQueueLength, \r\n        countMarks = 0;\r\n\r\n    // _nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\r\n    for (let task; _nextIndexToProcess < _taskQueueLength;) {\r\n        if (!(task = _taskQueue[_nextIndexToProcess++])) {\r\n            continue;\r\n        }\r\n        if (_nextIndexToProcess > mark) {\r\n            if (++countMarks >= 5000) {\r\n                _nextIndexToProcess = _taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\r\n                deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\r\n                break;\r\n            }\r\n            mark = _taskQueueLength;\r\n        }\r\n        try {\r\n            task();\r\n        } catch (ex) {\r\n            deferError(ex);\r\n        }\r\n    }\r\n};\r\n\r\nconst _scheduledProcess = () => {\r\n    _processTasks();\r\n    // Reset the queue\r\n    _nextIndexToProcess = 0;\r\n    _taskQueueLength = 0;\r\n    _taskQueue.length = 0;\r\n};\r\n\r\nif (typeof MutationObserver !== 'undefined') {\r\n    // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\r\n    // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\r\n    _scheduler = (callback => {\r\n        let elem = document.createElement('b'),\r\n            val = 1;\r\n        new MutationObserver(callback).observe(elem, {attributes: true});\r\n        return () => elem.title = (val = -val); // original classList.toggle is 60% slower in Chrome 85\r\n    })(_scheduledProcess);\r\n\r\n} else if (typeof process === 'object') {\r\n    // Running tests in NodeJS\r\n    _scheduler = (callback) => setTimeout(callback, 0);\r\n} else {\r\n    throw new Error('Browser is too old, does not know MutationObserver');\r\n}\r\n\r\nexport const scheduleTask = (func) => {\r\n    if (!_taskQueueLength) {\r\n        _scheduler(_scheduledProcess);\r\n    }\r\n    _taskQueue[_taskQueueLength++] = func;\r\n    return _nextHandle++;\r\n};\r\n\r\nexport const cancelTask = (handle) => {\r\n    let index = handle - (_nextHandle - _taskQueueLength);\r\n    if (index >= _nextIndexToProcess && index < _taskQueueLength) {\r\n        _taskQueue[index] = null;\r\n    }\r\n};\r\n\r\n// For testing only: reset the queue and return the previous queue length\r\nexport const resetForTesting = () => {\r\n    let length = _taskQueueLength - _nextIndexToProcess;\r\n    _nextIndexToProcess = _taskQueueLength = _taskQueue.length = 0;\r\n    return length;\r\n};\r\n\r\nexport const runEarly = _processTasks;\r\n","import {cancelTask, scheduleTask} from '../tasks';\r\n\r\nexport const deferredExtender = (target, options) => {\r\n    if (options !== true) {\r\n        throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.');\r\n    }\r\n    if (target._deferUpdates) {\r\n        return;\r\n    }\r\n    target._deferUpdates = true;\r\n    target.limit(callback => {\r\n        let ignoreUpdates = false,\r\n            handle;\r\n\r\n        return () => {\r\n            if (ignoreUpdates) {\r\n                return;\r\n            }\r\n            cancelTask(handle);\r\n            handle = scheduleTask(callback);\r\n\r\n            try {\r\n                ignoreUpdates = true;\r\n                target.notifySubscribers(undefined, 'dirty');\r\n            } finally {\r\n                ignoreUpdates = false;\r\n            }\r\n        };\r\n    });\r\n};\r\n","import {deferredExtender} from './deferredExtender';\r\n\r\nexport const extenders = Object.create(null);\r\n\r\nextenders.deferred = deferredExtender;\r\n\r\nexport function applyExtenders(requestedExtenders) {\r\n    let target = this;\r\n    if (requestedExtenders) {\r\n        for (let key of Object.keys(requestedExtenders)) {\r\n            let extenderHandler = extenders[key];\r\n            if (typeof extenderHandler === 'function') {\r\n                target = extenderHandler(target, requestedExtenders[key]) || target;\r\n            } else {\r\n                console.warn('Missing extender: ' + key); // eslint-disable-line no-console\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\n\r\nconst _throttle = (callback, timeout) => {\r\n    let timeoutInstance;\r\n    return () => {\r\n        if (timeoutInstance) {\r\n            return;\r\n        }\r\n        timeoutInstance = setTimeout(() => {\r\n            timeoutInstance = undefined;\r\n            callback();\r\n        }, timeout);\r\n    };\r\n};\r\n\r\nconst _debounce = (callback, timeout) => {\r\n    let timeoutInstance;\r\n    return () => {\r\n        clearTimeout(timeoutInstance);\r\n        timeoutInstance = setTimeout(callback, timeout);\r\n    };\r\n};\r\n\r\nextenders.rateLimit = (target, options) => {\r\n    let timeout, \r\n        method, \r\n        limitFunction;\r\n\r\n    if (typeof options === 'number') {\r\n        timeout = options;\r\n    } else {\r\n        timeout = options.timeout;\r\n        method = options.method;\r\n    }\r\n\r\n    // rateLimit supersedes deferred updates\r\n    target._deferUpdates = false;\r\n\r\n    limitFunction = (typeof method === 'function') ? method : (method === 'notifyWhenChangesStop') ? _debounce : _throttle;\r\n    target.limit(callback => limitFunction(callback, timeout, options));\r\n};\r\n\r\nconst ORIGINAL_EQUALITY_COMPARER = Symbol();\r\n\r\nextenders.notify = (target, notifyWhen) => {\r\n    let currentEqualityComparer = target.equalityComparer;\r\n    if (notifyWhen === 'always') {\r\n        if (currentEqualityComparer) {\r\n            target[ORIGINAL_EQUALITY_COMPARER] = currentEqualityComparer;\r\n            target.equalityComparer = null; // null equalityComparer means to always notify\r\n        }\r\n    } else if (!currentEqualityComparer) {\r\n        target.equalityComparer = target[ORIGINAL_EQUALITY_COMPARER]; \r\n    }\r\n};\r\n\r\nexport const defineThrottleExtender = (dependentObservable) => {\r\n    extenders.throttle = (target, timeout) => {\r\n        // Throttling means two things:\r\n\r\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\r\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\r\n        target.throttleEvaluation = timeout;\r\n\r\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\r\n        //     so the target cannot change value synchronously or faster than a certain rate\r\n        let writeTimeoutInstance = null;\r\n        return dependentObservable({\r\n            read: target,\r\n            write(value) {\r\n                clearTimeout(writeTimeoutInstance);\r\n                writeTimeoutInstance = setTimeout(() => target(value), timeout);\r\n            }\r\n        });\r\n    };\r\n};\r\n","import {addDisposeCallback, removeDisposeCallback} from '../utils.domNodeDisposal.js';\r\n\r\nexport class Subscription {\r\n\r\n    constructor(target, callback, disposeCallback) {\r\n        this._target = target;\r\n        this._callback = callback;\r\n        this._disposeCallback = disposeCallback;\r\n        this._isDisposed = false;\r\n        this._node = null;\r\n        this._domNodeDisposalCallback = null;\r\n    }\r\n\r\n    dispose() {\r\n        if (this._isDisposed) {\r\n            return;\r\n        }\r\n        if (this._domNodeDisposalCallback) {\r\n            removeDisposeCallback(this._node, this._domNodeDisposalCallback);\r\n        }\r\n        this._isDisposed = true;\r\n        this._disposeCallback();\r\n        this._target = this._callback = this._disposeCallback = this._node = this._domNodeDisposalCallback = null;\r\n    }\r\n\r\n    disposeWhenNodeIsRemoved(node) {\r\n        this._node = node;\r\n        addDisposeCallback(node, this._domNodeDisposalCallback = this.dispose.bind(this));\r\n    }\r\n}\r\n","import {trySetPrototypeOf} from '../utils';\r\nimport {applyExtenders} from './extenders';\r\nimport {beginDependencyDetection, endDependencyDetection} from './dependencyDetection';\r\nimport {isObservable, IS_SUBSCRIBABLE} from './observableUtils';\r\nimport {Subscription} from './subscription.js';\r\n\r\nconst DEFAULT_EVENT = 'change';\r\n\r\n// Moved out of \"limit\" to avoid the extra closure\r\nfunction _limitNotifySubscribers(value, event) {\r\n    if (!event || event === DEFAULT_EVENT) {\r\n        this._limitChange(value);\r\n    } else if (event === 'beforeChange') {\r\n        this._limitBeforeChange(value);\r\n    } else {\r\n        this._origNotifySubscribers(value, event);\r\n    }\r\n}\r\n\r\nexport const updateSubscribableVersion = (subscribableOrComputed) => subscribableOrComputed._versionNumber++; //@inline-global\r\n\r\nexport const hasSubscriptionsForEvent = (subscribable, event) => (subscribable._subscriptions[event] || 0).length; //@inline-global\r\n\r\n/**\r\n * (!) must not be shortcut so `subscribable._versionNumber !== versionToCheck`\r\n * @internal\r\n */\r\nexport const hasSubscribableChanged = (subscribable, versionToCheck) => subscribable.getVersion() !== versionToCheck; //@inline-global\r\n\r\n/**\r\n * @param subscribable\r\n * cleaner but slower would be { [DEFAULT_EVENT]: [] } instead of {change: []}\r\n * TODO remove the && once macros with function bodies are supported\r\n */\r\nexport const initSubscribableInternal = (subscribable) => (subscribable._subscriptions = {change: []}) && (subscribable._versionNumber = 1); //@inline-global\r\n\r\nexport const SUBSCRIBABLE_PROTOTYPE = {\r\n    [IS_SUBSCRIBABLE]: true,\r\n\r\n    init(instance) {\r\n        initSubscribableInternal(instance);\r\n    },\r\n\r\n    subscribe(callback, callbackTarget, event) {\r\n        event = event || DEFAULT_EVENT;\r\n\r\n        let subscription = new Subscription(this, callbackTarget ? callback.bind(callbackTarget) : callback, () => {\r\n            let _subscriptions = this._subscriptions[event],\r\n                foundIndex = _subscriptions.indexOf(subscription);\r\n            if (foundIndex >= 0) {\r\n                _subscriptions.splice(foundIndex, 1);\r\n            }\r\n            if (this.afterSubscriptionRemove) {\r\n                this.afterSubscriptionRemove(event);\r\n            }\r\n        });\r\n\r\n        if (this.beforeSubscriptionAdd) {\r\n            this.beforeSubscriptionAdd(event);\r\n        }\r\n        let _subscriptions = this._subscriptions,\r\n            existingSubscriptionsForEvent = _subscriptions[event];\r\n        if (existingSubscriptionsForEvent) {\r\n            existingSubscriptionsForEvent.push(subscription);\r\n        } else {\r\n            _subscriptions[event] = [subscription];\r\n        }\r\n        return subscription;\r\n    },\r\n\r\n    notifySubscribers(valueToNotify, event = DEFAULT_EVENT) {\r\n        if (event === DEFAULT_EVENT) {\r\n            updateSubscribableVersion(this);\r\n        }\r\n        if (!hasSubscriptionsForEvent(this, event)) {\r\n            return;\r\n        }\r\n        let subs = (event === DEFAULT_EVENT) && this._changeSubscriptions || this._subscriptions[event].slice();\r\n        try {\r\n            beginDependencyDetection(); // Begin suppressing dependency detection (by setting the top frame to undefined)\r\n            for (let i = 0, subscription; subscription = subs[i]; ++i) { // TODO check if subs changes during loop\r\n                // In case a subscription was disposed during the arrayForEach cycle, check\r\n                // for isDisposed on each subscription before invoking its callback\r\n                if (!subscription._isDisposed) {\r\n                    subscription._callback(valueToNotify);\r\n                }\r\n            }\r\n        } finally {\r\n            endDependencyDetection(); // End suppressing dependency detection\r\n        }\r\n    },\r\n\r\n    getVersion() {\r\n        return this._versionNumber;\r\n    },\r\n\r\n    /**\r\n     * Only for external use.\r\n     * KO-internally use {@link hasSubscribableChanged} macro directly to save another function call\r\n     * @param {number} versionToCheck\r\n     * @return {boolean}\r\n     */\r\n    hasChanged(versionToCheck) {\r\n        return hasSubscribableChanged(this, versionToCheck);\r\n    },\r\n\r\n    limit(limitFunction) {\r\n        let selfIsObservable = isObservable(this),\r\n            ignoreBeforeChange,\r\n            notifyNextChange,\r\n            previousValue,\r\n            pendingValue,\r\n            didUpdate,\r\n            beforeChange = 'beforeChange';\r\n\r\n        if (!this._origNotifySubscribers) {\r\n            this._origNotifySubscribers = this.notifySubscribers;\r\n            this.notifySubscribers = _limitNotifySubscribers;\r\n        }\r\n\r\n        let finish = limitFunction(() => {\r\n            this._notificationIsPending = false;\r\n\r\n            // If an observable provided a reference to itself, access it to get the latest value.\r\n            // This allows computed observables to delay calculating their value until needed.\r\n            if (selfIsObservable && pendingValue === this) {\r\n                pendingValue = this._evalIfChanged ? this._evalIfChanged() : this();\r\n            }\r\n            let shouldNotify = notifyNextChange || (didUpdate && (!this.equalityComparer || !this.equalityComparer(previousValue, pendingValue)));\r\n\r\n            didUpdate = notifyNextChange = ignoreBeforeChange = false;\r\n\r\n            if (shouldNotify) {\r\n                this._origNotifySubscribers(previousValue = pendingValue);\r\n            }\r\n        });\r\n\r\n        this._limitChange = (value, isDirty) => {\r\n            if (!isDirty || !this._notificationIsPending) {\r\n                didUpdate = !isDirty;\r\n            }\r\n            this._changeSubscriptions = this._subscriptions[DEFAULT_EVENT].slice();\r\n            this._notificationIsPending = ignoreBeforeChange = true;\r\n            pendingValue = value;\r\n            finish();\r\n        };\r\n        this._limitBeforeChange = (value) => {\r\n            if (!ignoreBeforeChange) {\r\n                previousValue = value;\r\n                this._origNotifySubscribers(value, beforeChange);\r\n            }\r\n        };\r\n        this._recordUpdate = () => didUpdate = true;\r\n\r\n        this._notifyNextChangeIfValueIsDifferent = () => {\r\n            let equalityComparer = this.equalityComparer;\r\n            if (!equalityComparer || !equalityComparer(previousValue, this.peek(true /*evaluate*/))) {\r\n                notifyNextChange = true;\r\n            }\r\n        };\r\n    },\r\n\r\n    getSubscriptionsCount(event) {\r\n        let event2subscriptions = this._subscriptions;\r\n        if (event) {\r\n            let subscriptions = event2subscriptions[event];\r\n            return subscriptions ? subscriptions.length : 0;\r\n        }\r\n        let total = 0;\r\n        if (event2subscriptions) {\r\n            for (let eventName of Object.keys(event2subscriptions)) {\r\n                let subscriptions = event2subscriptions[eventName];\r\n                if (eventName !== 'dirty') {\r\n                    total += subscriptions.length;\r\n                }\r\n            }\r\n        }\r\n        return total;\r\n    },\r\n\r\n    // /** @deprecated */\r\n    // isDifferent(oldValue, newValue) {\r\n    //     return !this.equalityComparer || !this.equalityComparer(oldValue, newValue);\r\n    // },\r\n\r\n    toString() {\r\n      return '[object Object]';\r\n    },\r\n\r\n    extend: applyExtenders\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport const Subscribable = function () {\r\n    Subscribable.fn.init(this);\r\n};\r\n\r\nSubscribable.prototype = SUBSCRIBABLE_PROTOTYPE;\r\nSubscribable.fn = SUBSCRIBABLE_PROTOTYPE;\r\n\r\n// For browsers that support proto assignment, we overwrite the prototype of each\r\n// observable instance. Since observables are functions, we need Function.prototype\r\n// to still be in the prototype chain.\r\ntrySetPrototypeOf(SUBSCRIBABLE_PROTOTYPE, Function.prototype);\r\n","import {options as koOptions} from '../options';\r\nimport {registerDependencyInternal, beginDependencyDetection, endDependencyDetection} from './dependencyDetection';\r\nimport {deferredExtender} from './deferredExtender';\r\nimport {hasSubscriptionsForEvent, SUBSCRIBABLE_PROTOTYPE, updateSubscribableVersion, hasSubscribableChanged, initSubscribableInternal} from './subscribable';\r\nimport {removeDisposeCallback, addDisposeCallback} from '../utils.domNodeDisposal';\r\nimport {setPrototypeOfOrExtend, trySetPrototypeOf, valuesArePrimitiveAndEqual, canSetPrototype} from '../utils';\r\nimport {IS_COMPUTED, IS_OBSERVABLE, IS_PURE_COMPUTED} from './observableUtils';\r\nimport {defineThrottleExtender} from './extenders';\r\n\r\nconst COMPUTED_STATE = Symbol('_state');\r\nconst THROTTLE_TIMER = Symbol();\r\n\r\nexport function computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\r\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\r\n        // Single-parameter syntax - everything is on this \"options\" param\r\n        options = evaluatorFunctionOrOptions;\r\n    } else {\r\n        // Multi-parameter syntax - construct the options according to the params passed\r\n        options = options || {};\r\n        if (evaluatorFunctionOrOptions) {\r\n            options.read = evaluatorFunctionOrOptions;\r\n        }\r\n    }\r\n    if (typeof options.read !== 'function') {\r\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\r\n    }\r\n\r\n    let writeFunction = options.write,\r\n        state = {\r\n            latestValue: undefined,\r\n            isStale: true,\r\n            isDirty: true,\r\n            isBeingEvaluated: false,\r\n            suppressDisposalUntilDisposeWhenReturnsFalse: false,\r\n            isDisposed: false,\r\n            pure: false,\r\n            isSleeping: false,\r\n            readFunction: options.read,\r\n            evaluatorFunctionTarget: evaluatorFunctionTarget || options.owner,\r\n            disposeWhenNodeIsRemoved: options.disposeWhenNodeIsRemoved || null,\r\n            disposeWhen: options.disposeWhen,\r\n            domNodeDisposalCallback: null,\r\n            dependencyTracking: {},\r\n            dependenciesCount: 0,\r\n            evaluationTimeoutInstance: null\r\n        };\r\n\r\n    function _computedObservable() {\r\n        if (arguments.length) {\r\n            if (typeof writeFunction === 'function') {\r\n                // Writing a value\r\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\r\n                return this; // Permits chained assignments\r\n            } \r\n            throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\r\n        } \r\n        // Reading the value\r\n        if (!state.isDisposed) {\r\n            registerDependencyInternal(_computedObservable);\r\n        }\r\n        if (state.isDirty || (state.isSleeping && _computedObservable.haveDependenciesChanged())) {\r\n            _computedObservable.evaluate();\r\n        }\r\n        return state.latestValue;\r\n    }\r\n\r\n    _computedObservable[COMPUTED_STATE] = state;\r\n    _computedObservable.hasWriteFunction = typeof writeFunction === 'function';\r\n    \r\n    // Inherit from './subscribable.js'\r\n    if (!canSetPrototype) {\r\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\r\n        Object.assign(_computedObservable, SUBSCRIBABLE_PROTOTYPE);\r\n    }\r\n    initSubscribableInternal(_computedObservable);\r\n\r\n    // Inherit from './computed.js'\r\n    setPrototypeOfOrExtend(_computedObservable, COMPUTED_PROTOTYPE);\r\n\r\n    if (options.pure) {\r\n        _computedObservable[IS_PURE_COMPUTED] = true;\r\n        state.pure = true;\r\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\r\n        //Object.assign(_computedObservable, pureComputedOverrides);\r\n        //above Object.assign for just 3 properties is 25% slower in Chrome85 & 50% slower in FF81 compared to manual assignment \r\n        _computedObservable.afterSubscriptionRemove = _pureAfterSubscriptionRemove;\r\n        _computedObservable.beforeSubscriptionAdd = _pureBeforeSubscriptionAdd;\r\n        _computedObservable.getVersion = _pureGetVersion;\r\n    } else if (options.deferEvaluation) {\r\n        Object.assign(_computedObservable, deferEvaluationOverrides);\r\n    }\r\n\r\n    if (koOptions.deferUpdates) {\r\n        deferredExtender(_computedObservable, true);\r\n    }\r\n\r\n    if (DEBUG) {\r\n        // #1731 - Aid debugging by exposing the computed's options\r\n        _computedObservable._options = options;\r\n    }\r\n\r\n    let __disposeWhenNodeIsRemoved = state.disposeWhenNodeIsRemoved; \r\n    \r\n    if (__disposeWhenNodeIsRemoved) {\r\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\r\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\r\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\r\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\r\n\r\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\r\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\r\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\r\n        // be documented or used by application code, as it's likely to change in a future version of KO.\r\n        if (!__disposeWhenNodeIsRemoved.nodeType) {\r\n            state.disposeWhenNodeIsRemoved = null;\r\n        }\r\n    }\r\n\r\n    // Evaluate, unless sleeping or deferEvaluation is true\r\n    if (!state.isSleeping && !options.deferEvaluation) {\r\n        _computedObservable.evaluate();\r\n    }\r\n\r\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\r\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\r\n    __disposeWhenNodeIsRemoved = state.disposeWhenNodeIsRemoved;\r\n    if (__disposeWhenNodeIsRemoved && _computedObservable.isActive()) {\r\n        addDisposeCallback(__disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = () => _computedObservable.dispose());\r\n    }\r\n\r\n    return _computedObservable;\r\n}\r\n\r\n// This function gets called each time a dependency is detected while evaluating a computed.\r\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\r\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\r\n    let computedObservable = this.computedObservable,\r\n        state = computedObservable[COMPUTED_STATE];\r\n    \r\n    if (!state.isDisposed) {\r\n        let __disposalCandidate = this.disposalCount && this.disposalCandidates[id];\r\n        if (__disposalCandidate) {\r\n            // Don't want to dispose this subscription, as it's still being used\r\n            computedObservable.addDependencyTracking(id, subscribable, __disposalCandidate);\r\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\r\n            --this.disposalCount;\r\n        } else if (!state.dependencyTracking[id]) {\r\n            // Brand new subscription - add it\r\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? {_target: subscribable} : computedObservable.subscribeToDependency(subscribable));\r\n        }\r\n        // If the observable we've accessed has a pending notification, ensure we get notified of the actual final value (bypass equality checks)\r\n        if (subscribable._notificationIsPending) {\r\n            subscribable._notifyNextChangeIfValueIsDifferent();\r\n        }\r\n    }\r\n}\r\n\r\nconst COMPUTED_PROTOTYPE = {\r\n    [IS_OBSERVABLE]: true,\r\n    [IS_COMPUTED]: true,\r\n    equalityComparer: valuesArePrimitiveAndEqual,\r\n    \r\n    getDependenciesCount() {\r\n        return this[COMPUTED_STATE].dependenciesCount;\r\n    },\r\n    getDependencies() {\r\n        let dependencyTracking = this[COMPUTED_STATE].dependencyTracking,\r\n            dependentObservables = [];\r\n        \r\n        if (dependencyTracking) {\r\n            for (let id of Object.keys(dependencyTracking)) {\r\n                let dependency = dependencyTracking[id];\r\n                dependentObservables[dependency._order] = dependency._target;\r\n            }\r\n        }\r\n        return dependentObservables;\r\n    },\r\n    hasAncestorDependency(obs) {\r\n        let computedState = this[COMPUTED_STATE];\r\n        if (!computedState.dependenciesCount) {\r\n            return false;\r\n        }\r\n        /**\r\n         * Given how often this method is called and regarding its recursive nature,\r\n         * let's forget DRY for a sec & pull a copy of `getDependencies` right here..\r\n         */\r\n        let dependencyTracking = computedState.dependencyTracking;\r\n        if (!dependencyTracking) {\r\n            return false;\r\n        }\r\n        let dependentObservables = [];\r\n        \r\n        for (let id of Object.keys(dependencyTracking)) {\r\n            let dependency = dependencyTracking[id];\r\n            dependentObservables[dependency._order] = dependency._target;\r\n        }\r\n        return dependentObservables.includes(obs) || !!dependentObservables.find(dep => dep.hasAncestorDependency && dep.hasAncestorDependency(obs));\r\n    },\r\n    addDependencyTracking(id, target, trackingObj) {\r\n        let computedState = this[COMPUTED_STATE]; \r\n        if (computedState.pure && target === this) {\r\n            throw Error(\"A 'pure' computed must not be called recursively\");\r\n        }\r\n        computedState.dependencyTracking[id] = trackingObj;\r\n        trackingObj._order = computedState.dependenciesCount++;\r\n        trackingObj._version = target.getVersion();\r\n    },\r\n    haveDependenciesChanged() {\r\n        let dependencyTracking = this[COMPUTED_STATE].dependencyTracking;\r\n        if (dependencyTracking) {\r\n            let hasEvalDelayed = this._evalDelayed;\r\n            for (let id of Object.keys(dependencyTracking)) {\r\n                let dependency = dependencyTracking[id],\r\n                    depTarget = dependency._target;\r\n                if ((hasEvalDelayed && depTarget._notificationIsPending) || hasSubscribableChanged(depTarget, dependency._version)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    markDirty() {\r\n        let __evalDelayed = this._evalDelayed;\r\n        // Process \"dirty\" events if we can handle delayed notifications\r\n        if (__evalDelayed && !this[COMPUTED_STATE].isBeingEvaluated) {\r\n            __evalDelayed(false /*isChange*/);\r\n        }\r\n    },\r\n    isActive() {\r\n        let state = this[COMPUTED_STATE];\r\n        return state.isDirty || state.dependenciesCount > 0;\r\n    },\r\n    respondToChange() {\r\n        // Ignore \"change\" events if we've already scheduled a delayed notification\r\n        if (!this._notificationIsPending) {\r\n            this.evaluate(true, true /* checkPossiblyAsync */); \r\n            return;\r\n        }\r\n        let computedState = this[COMPUTED_STATE];\r\n        if (computedState.isDirty) {\r\n            computedState.isStale = true;\r\n        }\r\n    },\r\n    subscribeToDependency(target) {\r\n        if (target._deferUpdates) {\r\n            let dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\r\n                changeSub = target.subscribe(this.respondToChange, this);\r\n            return {\r\n                _target: target,\r\n                dispose: () => {\r\n                    dirtySub.dispose();\r\n                    changeSub.dispose();\r\n                }\r\n            };\r\n        }\r\n        return target.subscribe(val => this.evaluate(val, true /* checkPossiblyAsync */), this);\r\n    },\r\n    evaluate(notifyChange, checkPossiblyAsync) {\r\n        if (checkPossiblyAsync) {\r\n            if (this.throttleEvaluation) {\r\n                clearTimeout(this[THROTTLE_TIMER]);\r\n                this[THROTTLE_TIMER] = setTimeout(() => this.evaluate(true), this.throttleEvaluation);\r\n                return;\r\n            } \r\n            if (this._evalDelayed) {\r\n                this._evalDelayed(true /*isChange*/);\r\n                return;\r\n            }\r\n            notifyChange = true;\r\n        }\r\n\r\n        let state = this[COMPUTED_STATE],\r\n            disposeWhen = state.disposeWhen,\r\n            changed = false;\r\n        \r\n        if (state.isBeingEvaluated) {\r\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\r\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\r\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\r\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\r\n            return;\r\n        }\r\n\r\n        // Do not evaluate (and possibly capture new dependencies) if disposed\r\n        if (state.isDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (state.disposeWhenNodeIsRemoved && !state.disposeWhenNodeIsRemoved.isConnected || disposeWhen && disposeWhen()) {\r\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\r\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\r\n                this.dispose();\r\n                return;\r\n            }\r\n        } else {\r\n            // It just did return false, so we can stop suppressing now\r\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\r\n        }\r\n\r\n        state.isBeingEvaluated = true;\r\n        try {\r\n            changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\r\n        } finally {\r\n            state.isBeingEvaluated = false;\r\n        }\r\n\r\n        return changed;\r\n    },\r\n    evaluateImmediate_CallReadWithDependencyDetection(notifyChange) {  // eslint-disable-line camelcase\r\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\r\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\r\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\r\n\r\n        let computedObservable = this,\r\n            state = computedObservable[COMPUTED_STATE],\r\n            changed = false;\r\n\r\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\r\n        // Then, during evaluation, we cross off any that are in fact still being used.\r\n        let isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\r\n            dependencyDetectionContext = {\r\n                computedObservable,\r\n                disposalCandidates: state.dependencyTracking,\r\n                disposalCount: state.dependenciesCount\r\n            };\r\n\r\n        beginDependencyDetection({\r\n            callbackTarget: dependencyDetectionContext,\r\n            callback: computedBeginDependencyDetectionCallback,\r\n            computed: computedObservable,\r\n            isInitial\r\n        });\r\n\r\n        // TODO check: Map might be more efficient (at least in Chrome, how about firefox?)\r\n        state.dependencyTracking = {};\r\n        state.dependenciesCount = 0;\r\n\r\n        let newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\r\n\r\n        if (!state.dependenciesCount) {\r\n            computedObservable.dispose();\r\n            changed = true; // When evaluation causes a disposal, make sure all dependent computeds get notified so they'll see the new state\r\n        } else {\r\n            let equalityComparer = computedObservable.equalityComparer;\r\n            changed = !equalityComparer || !equalityComparer(state.latestValue, newValue);\r\n        }\r\n\r\n        if (changed) {\r\n            if (!state.isSleeping) {\r\n                computedObservable.notifySubscribers(state.latestValue, \"beforeChange\");\r\n            } else {\r\n                updateSubscribableVersion(computedObservable);\r\n            }\r\n\r\n            state.latestValue = newValue;\r\n            if (DEBUG) {\r\n                computedObservable._latestValue = newValue;\r\n            }\r\n\r\n            computedObservable.notifySubscribers(state.latestValue, \"spectate\");\r\n\r\n            if (!state.isSleeping && notifyChange) {\r\n                computedObservable.notifySubscribers(state.latestValue);\r\n            }\r\n            if (computedObservable._recordUpdate) {\r\n                computedObservable._recordUpdate();\r\n            }\r\n        }\r\n\r\n        if (isInitial) {\r\n            computedObservable.notifySubscribers(state.latestValue, \"awake\");\r\n        }\r\n\r\n        return changed;\r\n    },\r\n    evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext) {  // eslint-disable-line camelcase\r\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\r\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\r\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\r\n        // overhead of computed evaluation (on V8 at least).\r\n\r\n        try {\r\n            let readFunction = state.readFunction;\r\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\r\n        } finally {\r\n            endDependencyDetection();\r\n\r\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\r\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\r\n                for (let entryToDispose of Object.values(dependencyDetectionContext.disposalCandidates)) {\r\n                    if (entryToDispose && entryToDispose.dispose) {\r\n                        entryToDispose.dispose();\r\n                    }\r\n                }\r\n            }\r\n\r\n            state.isStale = state.isDirty = false;\r\n        }\r\n    },\r\n    peek(evaluate) {\r\n        // By default, peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\r\n        // Pass in true to evaluate if needed.\r\n        let state = this[COMPUTED_STATE];\r\n        if ((state.isDirty && (evaluate || !state.dependenciesCount)) || (state.isSleeping && this.haveDependenciesChanged())) {\r\n            this.evaluate();\r\n        }\r\n        return state.latestValue;\r\n    },\r\n    limit(limitFunction) {\r\n        // Override the limit function with one that delays evaluation as well\r\n        SUBSCRIBABLE_PROTOTYPE.limit.call(this, limitFunction);\r\n        this._evalIfChanged = () => {\r\n            let computedState = this[COMPUTED_STATE];\r\n            if (!computedState.isSleeping) {\r\n                if (computedState.isStale) {\r\n                    this.evaluate();\r\n                } else {\r\n                    computedState.isDirty = false;\r\n                }\r\n            }\r\n            return computedState.latestValue;\r\n        };\r\n        this._evalDelayed = (isChange) => {\r\n            let computedState = this[COMPUTED_STATE];\r\n            this._limitBeforeChange(computedState.latestValue);\r\n\r\n            // Mark as dirty\r\n            computedState.isDirty = true;\r\n            if (isChange) {\r\n                computedState.isStale = true;\r\n            }\r\n            // Pass the observable to the \"limit\" code, which will evaluate it when\r\n            // it's time to do the notification.\r\n            this._limitChange(this, !isChange /* isDirty */);\r\n        };\r\n    },\r\n    dispose() {\r\n        let state = this[COMPUTED_STATE];\r\n        if (!state.isSleeping) {\r\n            let __depTracking = state.dependencyTracking;\r\n            if (__depTracking) {\r\n                for (let id of Object.keys(__depTracking)) {\r\n                    let dep = __depTracking[id];\r\n                    if (dep.dispose) {\r\n                        dep.dispose();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\r\n            removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\r\n        }\r\n        state.dependencyTracking = undefined;\r\n        state.dependenciesCount = 0;\r\n        state.isDisposed = true;\r\n        state.isStale = false;\r\n        state.isDirty = false;\r\n        state.isSleeping = false;\r\n        state.disposeWhenNodeIsRemoved = undefined;\r\n        state.disposeWhen = undefined;\r\n        state.readFunction = undefined;\r\n        if (!this.hasWriteFunction) {\r\n            state.evaluatorFunctionTarget = undefined;\r\n        }\r\n    }\r\n};\r\n\r\n// pure overrides: beforeSubscriptionAdd, afterSubscriptionRemove, getVersion\r\nfunction _pureBeforeSubscriptionAdd(event) {\r\n    // If asleep, wake up the computed by subscribing to any dependencies.\r\n    let computedObservable = this,\r\n        state = computedObservable[COMPUTED_STATE];\r\n    if (!state.isDisposed && state.isSleeping && event === 'change') {\r\n        state.isSleeping = false;\r\n        if (state.isStale || computedObservable.haveDependenciesChanged()) {\r\n            state.dependencyTracking = null;\r\n            state.dependenciesCount = 0;\r\n            if (computedObservable.evaluate()) {\r\n                updateSubscribableVersion(computedObservable);\r\n            }\r\n        } else {\r\n            // First put the dependencies in order\r\n            let dependenciesOrder = [],\r\n                __dependencyTracking = state.dependencyTracking;\r\n            \r\n            if (__dependencyTracking) {\r\n                for (let id of Object.keys(__dependencyTracking)) {\r\n                    dependenciesOrder[__dependencyTracking[id]._order] = id;\r\n                }\r\n            }\r\n            \r\n            // Next, subscribe to each one\r\n            dependenciesOrder.forEach((id, order) => {\r\n                let dependency = __dependencyTracking[id],\r\n                    subscription = computedObservable.subscribeToDependency(dependency._target);\r\n                subscription._order = order;\r\n                subscription._version = dependency._version;\r\n                __dependencyTracking[id] = subscription;\r\n            });\r\n            \r\n            // Waking dependencies may have triggered effects\r\n            if (computedObservable.haveDependenciesChanged()) {\r\n                if (computedObservable.evaluate()) {\r\n                    updateSubscribableVersion(computedObservable);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!state.isDisposed) {     // test since evaluating could trigger disposal\r\n            computedObservable.notifySubscribers(state.latestValue, \"awake\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction _pureAfterSubscriptionRemove(event) {\r\n    let state = this[COMPUTED_STATE];\r\n    if (!state.isDisposed && event === 'change' && !hasSubscriptionsForEvent(this, 'change')) {\r\n        let __dependencyTracking = state.dependencyTracking;\r\n        if (__dependencyTracking) {\r\n            for (let id of Object.keys(__dependencyTracking)) {\r\n                let dependency = __dependencyTracking[id];\r\n                if (dependency.dispose) {\r\n                    __dependencyTracking[id] = {\r\n                        _target: dependency._target,\r\n                        _order: dependency._order,\r\n                        _version: dependency._version\r\n                    };\r\n                    dependency.dispose();\r\n                }\r\n            }\r\n        }\r\n        state.isSleeping = true;\r\n        this.notifySubscribers(undefined, \"asleep\");\r\n    }\r\n}\r\n\r\nfunction _pureGetVersion() {\r\n    // Because a pure computed is not automatically updated while it is sleeping, we can't\r\n    // simply return the version number. Instead, we check if any of the dependencies have\r\n    // changed and conditionally re-evaluate the computed observable.\r\n    let state = this[COMPUTED_STATE];\r\n    if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\r\n        this.evaluate();\r\n    }\r\n    return SUBSCRIBABLE_PROTOTYPE.getVersion.call(this);\r\n}\r\n\r\n\r\nconst deferEvaluationOverrides = {\r\n    beforeSubscriptionAdd(event) {\r\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\r\n        if (event === 'change' || event === 'beforeChange') {\r\n            this.peek();\r\n        }\r\n    }\r\n};\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.computed constructor\r\ntrySetPrototypeOf(COMPUTED_PROTOTYPE, SUBSCRIBABLE_PROTOTYPE);\r\n\r\n// const PROTO_PROPERTY = ko.observable.protoProperty; // already defined in observable.js \r\n\r\ncomputed.fn = COMPUTED_PROTOTYPE;\r\n\r\nexport const dependentObservable = computed;\r\n\r\ndefineThrottleExtender(dependentObservable);\r\n\r\nexport const pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\r\n    if (typeof evaluatorFunctionOrOptions === 'function') {\r\n        return computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {pure: true});\r\n    } \r\n    evaluatorFunctionOrOptions = Object.assign({}, evaluatorFunctionOrOptions); // make a copy of the parameter object\r\n    evaluatorFunctionOrOptions.pure = true;\r\n    return computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\r\n};\r\n","\r\nexport const bindingHandlers = Object.create(null);\r\n\r\n// Use an overridable method for retrieving binding handlers so that plugins may support dynamically created handlers\r\nexport let getBindingHandler = bindingKey => bindingHandlers[bindingKey];\r\n\r\nexport const _overrideGetBindingHandler = (fn) => getBindingHandler = fn;\r\n","import {IS_OBSERVABLE, isWritableObservable} from '../subscribables/observableUtils';\r\nimport {getBindingHandler} from './bindingHandlers';\r\n\r\nconst JS_RESERVED_WORDS = {'true': true, 'false': true, 'null': true, 'undefined': true};\r\n\r\nconst PROPERTY_WRITERS_BINDING_KEY = '_ko_property_writers';\r\n\r\n/**\r\n * Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\r\n * This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\r\n * This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\r\n * */\r\nconst JS_ASSIGNMENT_TARGET = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+]))$/i;\r\n\r\n// The following regular expressions will be used to split an object-literal string into tokens\r\n\r\n/** These characters have special meaning to the parser and must not appear in the middle of a token, except as part of a string. */\r\nconst SPECIALS = ',\"\\'`{}()/:[\\\\]';\r\n\r\n/** The actual regular expression by or-ing the following regex strings. The order is important. */\r\nconst BINDING_TOKEN = RegExp([\r\n    // These match strings, either with double quotes, single quotes, or backticks\r\n    '\"(?:\\\\\\\\.|[^\"])*\"',\r\n    \"'(?:\\\\\\\\.|[^'])*'\",\r\n    \"`(?:\\\\\\\\.|[^`])*`\",\r\n    // Match C style comments\r\n    \"/\\\\*(?:[^*]|\\\\*+[^*/])*\\\\*+/\",\r\n    // Match C++ style comments\r\n    \"//.*\\n\",\r\n    // Match a regular expression (text enclosed by slashes), but will also match sets of divisions\r\n    // as a regular expression (this is handled by the parsing loop below).\r\n    '/(?:\\\\\\\\.|[^/])+/\\\\w*',\r\n    // Match text (at least two characters) that does not contain any of the above special characters,\r\n    // although some of the special characters are allowed to start it (all but the colon and comma).\r\n    // The text can contain spaces, but leading or trailing spaces are skipped.\r\n    '[^\\\\s:,/][^' + SPECIALS + ']*[^\\\\s' + SPECIALS + ']',\r\n    // Match any non-space character not matched already. This will match colons and commas, since they're\r\n    // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\r\n    // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\r\n    '[^\\\\s]'\r\n].join('|'), 'g');\r\n\r\n// Match end of previous token to determine whether a slash is a division or regex.\r\nconst DIVISION_LOOK_BEHIND = /[\\])\"'A-Za-z0-9_$]+$/;\r\nconst KEYWORD_REGEX_LOOK_BEHIND = {'in': 1, 'return': 1, 'typeof': 1};\r\n\r\nexport const parseObjectLiteral = (objectLiteralString) => {\r\n    // Trim leading and trailing spaces from the string\r\n    let str = objectLiteralString ? objectLiteralString.trim() : '';\r\n\r\n    // Trim braces '{' surrounding the whole object literal\r\n    if (str && str[0] === '{') {\r\n        str = str.slice(1, -1);\r\n    }\r\n\r\n    // Add a newline to correctly match a C++ style comment at the end of the string and\r\n    // add a comma so that we don't need a separate code block to deal with the last item\r\n    str += \"\\n,\";\r\n\r\n    // Split into tokens\r\n    let result = [],\r\n        tokens = str.match(BINDING_TOKEN);\r\n\r\n    if (tokens.length > 1) {\r\n        let depth = 0;\r\n        for (let i = 0, tok, key = null, values = []; tok = tokens[i]; ++i) {\r\n            let c = tok.charCodeAt(0);\r\n            // A comma signals the end of a key/value pair if depth is zero\r\n            if (c === 44) { // \",\"\r\n                if (depth <= 0) {\r\n                    result.push((key && values.length) ? {key, value: values.join('')} :\r\n                        {unknown: key || values.join('')});\r\n                    key = 0;\r\n                    depth = 0;\r\n                    values = [];\r\n                    continue;\r\n                }\r\n                // Simply skip the colon that separates the name and value\r\n            } else if (c === 58) { // \":\"\r\n                if (!depth && !key && values.length === 1) {\r\n                    key = values.pop();\r\n                    continue;\r\n                }\r\n                // Comments: skip them\r\n            } else if (c === 47 && tok.length > 1 && (tok.charCodeAt(1) === 47 || tok.charCodeAt(1) === 42)) {  // \"//\" or \"/*\"\r\n                continue;\r\n                // A set of slashes is initially matched as a regular expression, but could be division\r\n            } else if (c === 47 && i && tok.length > 1) {  // \"/\"\r\n                // Look at the end of the previous token to determine if the slash is actually division\r\n                let match = tokens[i - 1].match(DIVISION_LOOK_BEHIND);\r\n                if (match && !KEYWORD_REGEX_LOOK_BEHIND[match[0]]) {\r\n                    // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\r\n                    str = str.substring(str.indexOf(tok) + 1);\r\n                    tokens = str.match(BINDING_TOKEN);\r\n                    i = -1;\r\n                    // Continue with just the slash\r\n                    tok = '/';\r\n                }\r\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\r\n            } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\r\n                ++depth;\r\n            } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\r\n                --depth;\r\n                // The key will be the first token; if it's a string, trim the quotes\r\n            } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\r\n                tok = tok.slice(1, -1);\r\n            }\r\n            values.push(tok);\r\n        }\r\n        if (depth > 0) {\r\n            throw Error(\"Unbalanced parentheses, braces, or brackets\");\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\n// Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\r\nexport const twoWayBindings = {};\r\n\r\nexport const preProcessBindings = (bindingsStringOrKeyValueArray, bindingOptions) => {\r\n    bindingOptions = bindingOptions || {};\r\n\r\n    const _processKeyValue = (key, val) => {\r\n        const _callPreprocessHook = (obj) => (obj && obj.preprocess) ? (val = obj.preprocess(val, key, _processKeyValue)) : true;\r\n\r\n        if (!bindingParams) {\r\n            if (!_callPreprocessHook(getBindingHandler(key))) {\r\n                return;\r\n            }\r\n\r\n            let twoWayBindingsValue = twoWayBindings[key],\r\n                match = twoWayBindingsValue && !JS_RESERVED_WORDS[val] && val.match(JS_ASSIGNMENT_TARGET);\r\n            if (match) {\r\n                let writableVal = match[1] ? ('Object(' + match[1] + ')' + match[2]) : val;\r\n                // For two-way bindings, provide a write method in case the value\r\n                // isn't a writable observable.\r\n                let writeKey = typeof twoWayBindingsValue === 'string' ? twoWayBindingsValue : key;\r\n                propertyAccessorResultStrings += \",'\" + writeKey + \"':function(_z){\" + writableVal + \"=_z}\";\r\n            }\r\n        }\r\n        \r\n        resultStrings += \",'\" + key + \"':\" + (makeValueAccessors ? 'function(){return ' + val + ' }' : val);\r\n    };\r\n    \r\n    let resultStrings = '',\r\n        propertyAccessorResultStrings = '',\r\n        makeValueAccessors = bindingOptions['valueAccessors'],\r\n        bindingParams = bindingOptions['bindingParams'],\r\n        keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\r\n            parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\r\n\r\n    for (let keyValue of keyValueArray) {\r\n        _processKeyValue(keyValue.key || keyValue.unknown, keyValue.value);\r\n    }\r\n\r\n    if (propertyAccessorResultStrings.length) {\r\n        _processKeyValue(PROPERTY_WRITERS_BINDING_KEY, \"{\" + propertyAccessorResultStrings.substring(1) + \" }\");\r\n    }\r\n\r\n    return resultStrings.substring(1);\r\n};\r\n\r\nexport const bindingRewriteValidators = [];\r\n\r\nexport const keyValueArrayContainsKey = (keyValueArray, key) => {\r\n        // unfortunately !!keyValueArray.find(keyVal => keyVal.key === key)` is 10x slower in Chrome \r\n        for (let i = 0, len = keyValueArray.length; i < len; i++) {\r\n            if (keyValueArray[i].key === key) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n// Internal, private KO utility for updating model properties from within bindings\r\n// property:            If the property being updated is (or might be) an observable, pass it here\r\n//                      If it turns out to be a writable observable, it will be written to directly\r\n// allBindings:         An object with a get method to retrieve bindings in the current execution context.\r\n//                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\r\n// key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\r\n// value:               The value to be written\r\n// checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\r\n//                      it is !== existing value on that writable observable\r\nexport const writeValueToProperty = (property, allBindings, key, value, checkIfDifferent) => {\r\n    if (!property || !property[IS_OBSERVABLE]) {\r\n        let propWriters = allBindings.get(PROPERTY_WRITERS_BINDING_KEY);\r\n        if (propWriters && propWriters[key]) {\r\n            propWriters[key](value);\r\n        }\r\n    } else if (isWritableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\r\n        property(value);\r\n    }\r\n};\r\n\r\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\r\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\r\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\r\n// as an internal implementation detail in the short term.\r\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\r\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\r\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\r\nexport const _twoWayBindings = twoWayBindings;\r\n\r\n// alias For backward compatibility (see 'ko.jsonExpressionRewriting' alias below)\r\n// TODO removed, add to documentation\r\n// export const insertPropertyAccessorsIntoJson = preProcessBindings;\r\n","import {scheduleTask} from '../tasks';\r\nimport {ignoreDependencyDetectionNoArgs} from '../subscribables/dependencyDetection';\r\nimport {Subscribable} from '../subscribables/subscribable';\r\n\r\nconst _loadingSubscribablesCache = new Map(); // Tracks component loads that are currently in flight\r\nconst _loadedDefinitionsCache = new Map();    // Tracks component loads that have already completed\r\n\r\nexport let loaders = [];\r\n\r\nexport const _setComponentLoaders = (newLoaders) => loaders = newLoaders;\r\n\r\nexport const getComponent = (componentName, callback) => {\r\n    let cachedDefinition = _loadedDefinitionsCache.get(componentName);\r\n    if (cachedDefinition) {\r\n        // It's already loaded and cached. Reuse the same definition object.\r\n        // Note that for API consistency, even cache hits complete asynchronously by default.\r\n        // You can bypass this by putting synchronous:true on your component config.\r\n        if (cachedDefinition.isSynchronousComponent) {\r\n            // See comment in loaderRegistryBehaviors.js for reasoning\r\n            ignoreDependencyDetectionNoArgs(() => callback(cachedDefinition.definition));\r\n        } else {\r\n            scheduleTask(() => callback(cachedDefinition.definition));\r\n        }\r\n    } else {\r\n        // Join the loading process that is already underway, or start a new one.\r\n        let loadingSubscribable = _loadingSubscribablesCache.get(componentName);\r\n        if (loadingSubscribable) {\r\n            loadingSubscribable.subscribe(callback);\r\n        } else {\r\n            _loadNotYetLoadingComponentAndNotify(componentName, callback);\r\n        }\r\n    }\r\n};\r\n\r\nexport const clearCachedDefinition = (componentName) => {\r\n    _loadedDefinitionsCache.delete(componentName);\r\n};\r\n\r\n/**\r\n * Start loading a component that is not yet loading, and when it's done, move it to loadedDefinitionsCache.\r\n * @param {string} componentName\r\n * @param {function} callback\r\n * @private\r\n */\r\nconst _loadNotYetLoadingComponentAndNotify = (componentName, callback) => {\r\n    // if (_loadingSubscribablesCache.has(componentName)) {\r\n    //     throw new Error('Component \"' + componentName + '\" is already loading');\r\n    // }\r\n    let _subscribable = new Subscribable(),\r\n        completedAsync;\r\n    \r\n    _loadingSubscribablesCache.set(componentName, _subscribable);\r\n    _subscribable.subscribe(callback);\r\n\r\n    _beginLoadingComponent(componentName, (definition, config) => {\r\n        let isSynchronousComponent = !!(config && config.synchronous);\r\n        _loadedDefinitionsCache.set(componentName, {definition, isSynchronousComponent});\r\n        _loadingSubscribablesCache.delete(componentName);\r\n\r\n        // For API consistency, all loads complete asynchronously. However we want to avoid\r\n        // adding an extra task schedule if it's unnecessary (i.e., the completion is already\r\n        // async).\r\n        //\r\n        // You can bypass the 'always asynchronous' feature by putting the synchronous:true\r\n        // flag on your component configuration when you register it.\r\n        if (completedAsync || isSynchronousComponent) {\r\n            // Note that notifySubscribers ignores any dependencies read within the callback.\r\n            // See comment in loaderRegistryBehaviors.js for reasoning\r\n            _subscribable.notifySubscribers(definition);\r\n        } else {\r\n            scheduleTask(() => _subscribable.notifySubscribers(definition));\r\n        }\r\n    });\r\n    completedAsync = true;\r\n};\r\n\r\nconst _beginLoadingComponent = (componentName, callback) => {\r\n    _getFirstResultFromLoaders('getConfig', [componentName], config => {\r\n        if (config) {\r\n            // We have a config, so now load its definition\r\n            _getFirstResultFromLoaders('loadComponent', [componentName, config], definition => void callback(definition, config));\r\n        } else {\r\n            // The component has no config - it's unknown to all the loaders.\r\n            // Note that this is not an error (e.g., a module loading error) - that would abort the\r\n            // process and this callback would not run. For this callback to run, all loaders must\r\n            // have confirmed they don't know about this component.\r\n            callback(null, null);\r\n        }\r\n    });\r\n};\r\n\r\nexport const _getFirstResultFromLoaders = (methodName, argsExceptCallback, callback, candidateLoaders) => {\r\n    // On the first call in the stack, start with the full set of loaders\r\n    if (!candidateLoaders) {\r\n        candidateLoaders = loaders.slice(); // Use a copy, because we'll be mutating this array\r\n    }\r\n\r\n    // Try the next candidate\r\n    let currentCandidateLoader = candidateLoaders.shift();\r\n    if (!currentCandidateLoader) {\r\n        // No candidates returned a value\r\n        return callback(null);\r\n    }\r\n    \r\n    if (!currentCandidateLoader[methodName]) {\r\n        // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\r\n        return _getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\r\n    }\r\n    let wasAborted = false,\r\n        synchronousReturnValue = currentCandidateLoader[methodName](...argsExceptCallback, result => {\r\n            if (wasAborted) {\r\n                callback(null);\r\n            } else if (result !== null) {\r\n                // This candidate returned a value. Use it.\r\n                callback(result);\r\n            } else {\r\n                // Try the next candidate\r\n                _getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\r\n            }\r\n        });\r\n\r\n    // Currently, loaders may not return anything synchronously. This leaves open the possibility\r\n    // that we'll extend the API to support synchronous return values in the future. It won't be\r\n    // a breaking change, because currently no loader is allowed to return anything except undefined.\r\n    if (synchronousReturnValue !== undefined) {\r\n        wasAborted = true;\r\n\r\n        // Method to suppress exceptions will remain undocumented. This is only to keep\r\n        // KO's specs running tidily, since we can observe the loading got aborted without\r\n        // having exceptions cluttering up the console too.\r\n        if (!currentCandidateLoader['suppressLoaderExceptions']) {\r\n            throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\r\n        }\r\n    }\r\n};\r\n","import {moveCleanedNodesToContainerElement} from './utils';\r\nimport {emptyDomNode} from './utils.domNodes';\r\nimport {unwrapObservable} from './subscribables/observableUtils';\r\n\r\nconst TABLE = [1, '<table>', '</table>'];\r\nconst TBODY = [2, '<table><tbody>', '</tbody></table>'];\r\nconst TR = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\r\nconst SELECT = [1, '<select multiple=\"multiple\">', '</select>'];\r\nconst WRAP_BY_TAG_NAME = {\r\n    thead: TABLE, THEAD: TABLE,\r\n    tbody: TABLE, TBODY: TABLE,\r\n    tfoot: TABLE, TFOOT: TABLE,\r\n    tr: TBODY, TR: TBODY, \r\n    td: TR, TD: TR,\r\n    th: TR, TH: TR,\r\n    option: SELECT, OPTION: SELECT,\r\n    optgroup: SELECT, OPTGROUP: SELECT\r\n};\r\n\r\n// TODO try replacing regex call w/ \"scan for first tagName function\r\nconst TAGS_REGEX = /^(?:<!--.*?-->\\s*?)*<([a-zA-Z]+)[\\s>]/;\r\n\r\n/**\r\n * A DIV element used for parsing HTML fragments exclusively for the own document (which should cover 99% of cases). \r\n * @type {?HTMLDivElement} \r\n */\r\nlet _reusedDiv;\r\n\r\nexport const parseHtmlFragment = (html, doc = document) => {\r\n    let container = (doc === document) ? (_reusedDiv || (_reusedDiv = doc.createElement('div'))) : doc.createElement('div'),\r\n        wrap = TAGS_REGEX.test(html.trim()) && WRAP_BY_TAG_NAME[RegExp.$1];\r\n    \r\n    if (wrap) {\r\n        container.innerHTML = '<div>' + wrap[1] + html + wrap[2] + '</div>';\r\n        for (let depth = wrap[0]; depth >= 0; --depth) {\r\n            container = container.lastChild;\r\n        }\r\n    } else {\r\n        container.innerHTML = '<div>' + html + '</div>';\r\n        container = container.lastChild;\r\n    }\r\n\r\n    // Tried spread -> return [...div.lastChild.childNodes];\r\n    // But rest operator is slow; for-loop filling nodes array is 60% faster in FF81, 80% faster in Chrome (TODO: re-check in the future)\r\n    let nodesArray = [];\r\n    for (let i = 0, nodeList = container.childNodes, len = nodeList.length; i < len; i++) {\r\n        nodesArray[i] = nodeList[i];\r\n    }\r\n\r\n    container.remove(); // make sure to cut ties with the reused div\r\n    \r\n    return nodesArray;\r\n};\r\n\r\nexport const parseHtmlForTemplateNodes = (html, documentContext) => {\r\n    let nodes = parseHtmlFragment(html, documentContext);\r\n    return (nodes.length && nodes[0].parentElement) || moveCleanedNodesToContainerElement(nodes);\r\n};\r\n\r\nexport const setHtml = (node, html) => {\r\n    emptyDomNode(node);\r\n\r\n    // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\r\n    html = unwrapObservable(html);\r\n\r\n    let htmlType = html === null ? 'undefined' : typeof html;\r\n\r\n    if (htmlType !== 'undefined') {\r\n        if (htmlType !== 'string') {\r\n            html = html.toString();\r\n        }\r\n        for (let parsedNode of parseHtmlFragment(html, node.ownerDocument)) {\r\n            node.appendChild(parsedNode);\r\n        }\r\n    }\r\n};\r\n","import {_getFirstResultFromLoaders, clearCachedDefinition} from './loaderRegistry';\r\nimport {parseHtmlFragment} from '../utils.domManipulation';\r\nimport {cloneNodes} from '../utils';\r\nimport {loaders} from './loaderRegistry';\r\n\r\nconst CREATE_VIEW_MODEL_KEY = 'createViewModel';\r\n\r\n// The default loader is responsible for two things:\r\n// 1. Maintaining the default in-memory registry of component configuration objects\r\n//    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\r\n// 2. Answering requests for components by fetching configuration objects\r\n//    from that default in-memory registry and resolving them into standard\r\n//    component definition objects (of the form { createViewModel: ..., template: ... })\r\n// Custom loaders may override either of these facilities, i.e.,\r\n// 1. To supply configuration objects from some other source (e.g., conventions)\r\n// 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\r\nconst defaultConfigRegistry = new Map();\r\n\r\nexport const registerComponent = (componentName, config) => {\r\n    if (!config) {\r\n        throw new Error('Invalid configuration for ' + componentName);\r\n    }\r\n    if (defaultConfigRegistry.has(componentName)) {\r\n        throw new Error('Component ' + componentName + ' is already registered');\r\n    }\r\n    defaultConfigRegistry.set(componentName, config);\r\n};\r\n\r\n/**\r\n * @type {function(string):boolean}\r\n */\r\nexport const isComponentRegistered = defaultConfigRegistry.has.bind(defaultConfigRegistry);\r\n\r\nexport const unregisterComponent = (componentName) => {\r\n    defaultConfigRegistry.delete(componentName);\r\n    clearCachedDefinition(componentName);\r\n};\r\n\r\nexport const defaultLoader = {\r\n    getConfig(componentName, callback) {\r\n        let result = defaultConfigRegistry.get(componentName) || null;\r\n        callback(result);\r\n    },\r\n    \r\n    loadComponent(componentName, config, callback) {\r\n        let errorCallback = _makeErrorCallback(componentName);\r\n        _possiblyGetConfigFromAmd(errorCallback, config, loadedConfig => _resolveConfig(componentName, errorCallback, loadedConfig, callback));\r\n    },\r\n    \r\n    loadTemplate(componentName, templateConfig, callback) {\r\n        _resolveTemplate(_makeErrorCallback(componentName), templateConfig, callback);\r\n    },\r\n    \r\n    loadViewModel(componentName, viewModelConfig, callback) {\r\n        _resolveViewModel(_makeErrorCallback(componentName), viewModelConfig, callback);\r\n    }\r\n};\r\n\r\n// Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\r\n// into the standard component definition format:\r\n//    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\r\n// Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\r\n// in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\r\n// so this is implemented manually below.\r\nconst _resolveConfig = (componentName, errorCallback, config, callback) => {\r\n    let result = {},\r\n        makeCallBackWhenZero = 2,\r\n        tryIssueCallback = () => (--makeCallBackWhenZero === 0) && callback(result),\r\n        templateConfig = config['template'],\r\n        viewModelConfig = config['viewModel'];\r\n\r\n    if (templateConfig) {\r\n        _possiblyGetConfigFromAmd(errorCallback, templateConfig, loadedConfig => {\r\n            _getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], resolvedTemplate => {\r\n                result['template'] = resolvedTemplate;\r\n                tryIssueCallback();\r\n            });\r\n        });\r\n    } else {\r\n        tryIssueCallback();\r\n    }\r\n\r\n    if (viewModelConfig) {\r\n        _possiblyGetConfigFromAmd(errorCallback, viewModelConfig, loadedConfig => {\r\n            _getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], resolvedViewModel => {\r\n                result[CREATE_VIEW_MODEL_KEY] = resolvedViewModel;\r\n                tryIssueCallback();\r\n            });\r\n        });\r\n    } else {\r\n        tryIssueCallback();\r\n    }\r\n};\r\n\r\nconst _resolveTemplate = (errorCallback, templateConfig, callback) => {\r\n    if (typeof templateConfig === 'string') {\r\n        // Markup - parse it\r\n        return callback(parseHtmlFragment(templateConfig));\r\n    } \r\n    if (templateConfig.element) {\r\n        let elementIdOrNode = templateConfig.element,\r\n            elemNode;\r\n        if (typeof elementIdOrNode === 'string') {\r\n            elemNode = document.getElementById(elementIdOrNode);\r\n            if (!elemNode) {\r\n                errorCallback('Cannot find element with ID ' + elementIdOrNode);\r\n            }\r\n        } else if (elementIdOrNode && elementIdOrNode.tagName && elementIdOrNode.nodeType === 1) {\r\n            // isDomElement-check (= less precise than `instanceof HTMLElement' but a lot cheaper) \r\n            elemNode = elementIdOrNode;\r\n        } else {\r\n            errorCallback('Unknown element type: ' + elementIdOrNode);\r\n        }\r\n        // Element instance found - copy its child nodes\r\n        return callback(_cloneNodesFromTemplateSourceElement(elemNode));\r\n    }  \r\n    if (Array.isArray(templateConfig)) {\r\n        // Assume already an array of DOM nodes - pass through unchanged\r\n        return callback(templateConfig);\r\n    }\r\n    if (_isDocumentFragment(templateConfig)) {\r\n        // Document fragment - use its child nodes\r\n        return callback([...templateConfig.childNodes]);\r\n    } \r\n    errorCallback('Unknown template value: ' + templateConfig);\r\n};\r\n\r\nconst _resolveViewModel = (errorCallback, viewModelConfig, callback) => {\r\n    if (typeof viewModelConfig === 'function') {\r\n        // Constructor - convert to standard factory function format\r\n        // By design, this does *not* supply componentInfo to the constructor, as the intent is that\r\n        // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\r\n        // be used in factory functions, not viewmodel constructors.\r\n        return callback((params /*, componentInfo */) => new viewModelConfig(params));\r\n    } \r\n    let factoryFn = viewModelConfig[CREATE_VIEW_MODEL_KEY];\r\n    if (typeof factoryFn === 'function') {\r\n        // Already a factory function - use it as-is\r\n        return callback(factoryFn);\r\n    } \r\n    let fixedInstance = viewModelConfig.instance;\r\n    if (fixedInstance !== undefined) {\r\n        // Fixed object instance - promote to createViewModel format for API consistency\r\n        return callback((params, componentInfo) => fixedInstance);\r\n    } \r\n    let viewModel = viewModelConfig.viewModel;\r\n    if (viewModel !== undefined) {\r\n        // Resolved AMD module whose value is of the form { viewModel: ... }\r\n        return _resolveViewModel(errorCallback, viewModel, callback);\r\n    } \r\n    errorCallback('Unknown viewModel value: ' + viewModelConfig);\r\n};\r\n\r\nconst _cloneNodesFromTemplateSourceElement = (elemInstance) => {\r\n    let tagName = elemInstance.tagName.toLowerCase();\r\n    switch (tagName) {\r\n        case 'script':   \r\n            return parseHtmlFragment(elemInstance.text);\r\n        case 'textarea': \r\n            return parseHtmlFragment(elemInstance.value);\r\n        case 'template':\r\n            // For browsers with proper <template> element support (i.e., where the .content property\r\n            // gives a document fragment), use that document fragment.\r\n            if (_isDocumentFragment(elemInstance.content)) {\r\n                return cloneNodes(elemInstance.content.childNodes);\r\n            }\r\n    }\r\n    // Regular elements such as <div>, and <template> elements on old browsers that don't really\r\n    // understand <template> and just treat it as a regular container\r\n    return cloneNodes(elemInstance.childNodes);\r\n};\r\n\r\nconst _isDocumentFragment = obj => obj && obj.nodeType === 11;\r\n\r\nconst _possiblyGetConfigFromAmd = (errorCallback, config, callback) => {\r\n    if (typeof config.require !== 'string') {\r\n        callback(config);\r\n        return;\r\n    }\r\n    // The config is the value of an AMD module\r\n    let requireFn = typeof amdRequire === 'function' ? amdRequire : window.require; // eslint-disable-line no-undef\r\n    if (requireFn) {\r\n        requireFn([config.require], module => {\r\n            if (module && (typeof module === 'object') && module.__esModule && module.default) {\r\n                module = module.default;\r\n            }\r\n            callback(module);\r\n        });\r\n    } else {\r\n        errorCallback('Uses require, but no AMD loader is present');\r\n    }\r\n};\r\n\r\nconst _makeErrorCallback = (componentName) => message => {\r\n    throw new Error('Component \\'' + componentName + '\\': ' + message);\r\n};\r\n\r\n// By default, the default loader is the only registered component loader\r\nloaders.push(defaultLoader);\r\n","import {isComponentRegistered} from './defaultLoader';\r\nimport {isWritableObservable, unwrapObservable} from '../subscribables/observableUtils';\r\nimport {computed} from '../subscribables/dependentObservable';\r\n\r\n\r\n// Overridable API for determining which component name applies to a given node. By overriding this,\r\n// you can for example map specific tagNames to components that are not preregistered.\r\nexport const _overrideGetComponentNameForNode = fn => getComponentNameForNode = fn;\r\n\r\nexport let getComponentNameForNode = (node) => {\r\n    let tagNameLower = (node && node.tagName || '').toLowerCase();\r\n    if (tagNameLower && isComponentRegistered(tagNameLower)) {\r\n        // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\r\n        if (~tagNameLower.indexOf('-') || ('' + node) === \"[object HTMLUnknownElement]\") {\r\n            return tagNameLower;\r\n        }\r\n    }\r\n};\r\n\r\nexport const addBindingsForCustomElement = (allBindings, node, bindingContext, valueAccessors) => {\r\n    // Determine if it's really a custom element matching a component\r\n    if (node.nodeType === 1) {\r\n        let componentName = getComponentNameForNode(node);\r\n        if (componentName) {\r\n            // It does represent a component, so add a component binding for it\r\n            allBindings = allBindings || {};\r\n\r\n            if (allBindings.component) {\r\n                // Avoid silently overwriting some other 'component' binding that may already be on the element\r\n                throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\r\n            }\r\n\r\n            let componentBindingValue = {name: componentName, params: _getComponentParamsFromCustomElement(node, bindingContext)};\r\n\r\n            allBindings.component = valueAccessors\r\n                ? function() { return componentBindingValue; }\r\n                : componentBindingValue;\r\n        }\r\n    }\r\n\r\n    return allBindings;\r\n};\r\n\r\nlet _nativeBindingProviderInstance;\r\n\r\nexport const _setNativeBindingProviderInstance = bindingProvider => _nativeBindingProviderInstance = bindingProvider;\r\n\r\nconst _getComponentParamsFromCustomElement = (elem, bindingContext) => {\r\n    let paramsAttribute = elem.getAttribute('params');\r\n\r\n    if (!paramsAttribute) {\r\n        // For consistency, absence of a \"params\" attribute is treated the same as the presence of\r\n        // any empty one. Otherwise component viewmodels need special code to check whether or not\r\n        // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\r\n        return {'$raw': {}};\r\n    }\r\n    \r\n    let params = _nativeBindingProviderInstance.parseBindingsString(paramsAttribute, bindingContext, elem, {valueAccessors: true, bindingParams: true}),\r\n        rawParamComputedValues = {},\r\n        result = {},\r\n        hadRawProperty = false; \r\n    \r\n    Object.keys(params).forEach(paramName => {\r\n        let paramValue = params[paramName],\r\n            paramValueComputed = computed(paramValue, null, {disposeWhenNodeIsRemoved: elem}),\r\n            paramValueComputedPeekedValue = paramValueComputed.peek();\r\n        \r\n        rawParamComputedValues[paramName] = paramValueComputed;\r\n\r\n        // Does the evaluation of the parameter value unwrap any observables?\r\n        if (!paramValueComputed.isActive()) {\r\n            // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\r\n            // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\r\n            result[paramName] = paramValueComputedPeekedValue;\r\n        } else {\r\n            // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\r\n            // level of observability, and any inner (resulting model value) level of observability.\r\n            // This means the component doesn't have to worry about multiple unwrapping. If the value is a\r\n            // writable observable, the computed will also be writable and pass the value on to the observable.\r\n            result[paramName] = computed({\r\n                read: () => unwrapObservable(paramValueComputed()),\r\n                write: isWritableObservable(paramValueComputedPeekedValue) && (value => paramValueComputed()(value)),\r\n                disposeWhenNodeIsRemoved: elem\r\n            });\r\n        }\r\n        \r\n        if (paramName === '$raw') {\r\n            hadRawProperty = true;\r\n        }\r\n    });\r\n    \r\n    if (!hadRawProperty) {\r\n        // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\r\n        // This is in case the developer wants to react to outer (binding) observability separately from inner\r\n        // (model value) observability, or in case the model value observable has subobservables.\r\n        result['$raw'] = rawParamComputedValues;\r\n    }\r\n\r\n    return result;\r\n};\r\n","import {START_COMMENT_REGEX} from '../virtualElements';\r\nimport {preProcessBindings} from './expressionRewriting';\r\nimport {addBindingsForCustomElement, getComponentNameForNode, _setNativeBindingProviderInstance} from '../components/customElements';\r\n\r\nconst DEFAULT_BINDING_ATTRIBUTE_NAME = \"data-bind\";\r\n\r\nconst virtualNodeBindingValue = (node) => START_COMMENT_REGEX.test(node.nodeValue) ? RegExp.$1 : null; //@inline\r\n\r\n/**\r\n * The following function is only used internally by this default provider.\r\n * It's not part of the interface definition for a general binding provider.\r\n * @param {Node|HTMLElement} node - type 1 === element, type 8 === comment  \r\n * @return {string|null}\r\n * @private\r\n */\r\nconst _getBindingsString = node => node.nodeType === 1 ? node.getAttribute(DEFAULT_BINDING_ATTRIBUTE_NAME) : node.nodeType === 8 ? virtualNodeBindingValue(node) : null; //@inline\r\n\r\nexport let bindingProviderMaySupportTextNodes = false;\r\n\r\nexport class KoBindingProvider {\r\n\r\n    // getter/setter only added to allow external scripts (jasmine) to replace the provider via 'ko.bindingProvider.instance'\r\n    // Internally, the direct reference to 'bindingProviderInstance' is used \r\n    static get instance() { return bindingProviderInstance; }\r\n    static set instance(newInstance) { \r\n        bindingProviderInstance = newInstance;\r\n        bindingProviderMaySupportTextNodes = true;\r\n    }\r\n    \r\n    constructor() {\r\n        this._cache = new Map();\r\n    }\r\n\r\n    /**\r\n     * (!) If node types other than 1 or 8 are supported here in the future,\r\n     *     make sure to change {@link bindingProviderMaySupportTextNodes} accordingly.\r\n     */\r\n    nodeHasBindings(node) {\r\n        let nodeType = node.nodeType;\r\n        return (nodeType === 1) ? (node.getAttribute(DEFAULT_BINDING_ATTRIBUTE_NAME) !== null || getComponentNameForNode(node)) :\r\n               (nodeType === 8) ? START_COMMENT_REGEX.test(node.nodeValue) : false;\r\n    }\r\n\r\n    getBindings(node, bindingContext) {\r\n        let bindingsString = _getBindingsString(node),\r\n            parsedBindings = bindingsString ? this.parseBindingsString(bindingsString, bindingContext, node) : null;\r\n        return addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\r\n    }\r\n\r\n    getBindingAccessors(node, bindingContext) {\r\n        let bindingsString = _getBindingsString(node),\r\n            parsedBindings = bindingsString ? this.parseBindingsString(bindingsString, bindingContext, node, {'valueAccessors': true}) : null;\r\n        return addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\r\n    }\r\n\r\n    /**\r\n     * The following function is only used internally by this default provider.\r\n     * It's not part of the interface definition for a general binding provider.\r\n     * @return {function}\r\n     * @internal\r\n     */\r\n    parseBindingsString(bindingsString, bindingContext, node, options) {\r\n        let cacheKey = bindingsString + (options && options['valueAccessors'] || ''),\r\n            bindingFunction = this._cache.get(cacheKey);\r\n        \r\n        if (bindingFunction) {\r\n            return bindingFunction(bindingContext, node);\r\n        }\r\n        \r\n        try {\r\n            //binding = this._createBindingsStringEvaluator(bindingsString, options);\r\n            // Build the source for a function that evaluates \"expression\"\r\n            // For each scope variable, add an extra level of \"with\" nesting\r\n            // Example result: with(sc1) { with(sc0) { return (expression) } }\r\n\r\n            bindingFunction = new Function(\"$context\", \"$element\", \r\n                                'with($context){with($data||{}){return{' + preProcessBindings(bindingsString, options) + '}}}');\r\n        } catch (ex) {\r\n            ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\r\n            throw ex;\r\n        }\r\n\r\n        this._cache.set(cacheKey, bindingFunction);\r\n        return bindingFunction(bindingContext, node);\r\n    }\r\n}\r\n\r\nexport let bindingProviderInstance = new KoBindingProvider();\r\n\r\n_setNativeBindingProviderInstance(new KoBindingProvider());\r\n","import {childNodes, nextSibling, firstChild, allowedVirtualElementBindings} from '../virtualElements';\r\nimport {DOM_DATASTORE_PROP, nextDomDataKey} from '../utils.domData';\r\nimport {IS_OBSERVABLE} from '../subscribables/observableUtils';\r\nimport {getCurrentComputed, ignoreDependencyDetectionNoArgs} from '../subscribables/dependencyDetection';\r\nimport {addDisposeCallback, removeDisposeCallback} from '../utils.domNodeDisposal';\r\nimport {dependentObservable, pureComputed} from '../subscribables/dependentObservable';\r\nimport {ignoreDependencyDetection} from '../subscribables/dependencyDetection';\r\nimport {getBindingHandler} from './bindingHandlers';\r\nimport {hasSubscriptionsForEvent, Subscribable} from '../subscribables/subscribable';\r\nimport {bindingProviderInstance, bindingProviderMaySupportTextNodes} from './bindingProvider';\r\n\r\nconst CONTEXT_SUBSCRIBABLE = Symbol('subscribable');\r\nconst CONTEXT_ANCESTOR_BINDING_INFO = Symbol('ancestorBindingInfo');\r\nconst CONTEXT_DATA_DEPENDENCY = Symbol('dataDependency');\r\nconst INHERIT_PARENT_VM_DATA = Symbol('inheritParentVm');\r\nconst IS_BINDING_CONTEXT_INSTANCE = Symbol('isBindingCtx');\r\nconst BINDING_INFO_DOM_DATA_KEY = nextDomDataKey();\r\n\r\n// The following element types will not be recursed into during binding.\r\nconst BINDING_DOES_NOT_RECURSE_INTO_ELEMENT_TYPES = {\r\n    // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\r\n    // because it's unexpected and a potential XSS issue.\r\n    // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\r\n    // and because such elements' contents are always intended to be bound in a different context\r\n    // from where they appear in the document.\r\n    script: 1,\r\n    SCRIPT: 1,\r\n    textarea: 1,\r\n    TEXTAREA: 1,\r\n    template: 1,\r\n    TEMPLATE: 1\r\n};\r\n\r\nlet _koReferenceForBindingContexts;\r\nexport const _setKoReferenceForBindingContexts = (ko) => _koReferenceForBindingContexts = ko;\r\n\r\nconst _getBindingInfoForNode = (node) => node[DOM_DATASTORE_PROP] && node[DOM_DATASTORE_PROP][BINDING_INFO_DOM_DATA_KEY]; //@inline\r\nconst _ensureNodeHasDomData = (node) => node[DOM_DATASTORE_PROP] || (node[DOM_DATASTORE_PROP] = {}); //@inline\r\nconst _getOrAddBindingInfoInDomData = (domData) => domData[BINDING_INFO_DOM_DATA_KEY] || (domData[BINDING_INFO_DOM_DATA_KEY] = {}); //@inline\r\n\r\n/**\r\n * The ko.bindingContext/KoBindingContext constructor is only called directly to create the root context. \r\n * For child contexts, use bindingContextInstance.createChildContext or bindingContextInstance.extend.\r\n */\r\nexport class KoBindingContext {\r\n\r\n    constructor(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {\r\n        const shouldInheritData = (dataItemOrAccessor === INHERIT_PARENT_VM_DATA);\r\n        const realDataItemOrAccessor = shouldInheritData ? undefined : dataItemOrAccessor;\r\n        const isFunc = (typeof realDataItemOrAccessor === 'function') && !realDataItemOrAccessor[IS_OBSERVABLE];\r\n        const dataDependency = options && options.dataDependency;\r\n\r\n        let _subscribable = null;\r\n        \r\n        // The binding context object includes static properties for the current, parent, and root view models.\r\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\r\n        // any child contexts, must be updated when the view model is changed.\r\n        const _updateContext = () => {\r\n                // Most of the time, the context will directly get a view model object, but if a function is given,\r\n                // we call the function to retrieve the view model. If the function accesses any observables or returns\r\n                // an observable, the dependency is tracked, and those observables can later cause the binding\r\n                // context to be updated.\r\n                let dataItemOrObservable = isFunc ? realDataItemOrAccessor() : realDataItemOrAccessor,\r\n                    // unwrapObservable\r\n                    dataItem = dataItemOrObservable && (dataItemOrObservable[IS_OBSERVABLE] ? dataItemOrObservable() : dataItemOrObservable);\r\n\r\n                if (parentContext) {\r\n                    // Copy $root and any custom properties from the parent context\r\n                    Object.assign(this, parentContext);\r\n\r\n                    // Copy Symbol properties\r\n                    if (CONTEXT_ANCESTOR_BINDING_INFO in parentContext) {\r\n                        this[CONTEXT_ANCESTOR_BINDING_INFO] = parentContext[CONTEXT_ANCESTOR_BINDING_INFO];\r\n                    }\r\n                } else {\r\n                    this.$parents = [];\r\n                    this.$root = dataItem;\r\n\r\n                    // Export 'ko' in the binding context so it will be available in bindings and templates\r\n                    // even if 'ko' isn't exported as a global, such as when using an AMD loader.\r\n                    // See https://github.com/SteveSanderson/knockout/issues/490\r\n                    this.ko = _koReferenceForBindingContexts;\r\n                }\r\n\r\n                this[CONTEXT_SUBSCRIBABLE] = _subscribable;\r\n\r\n                if (shouldInheritData) {\r\n                    dataItem = this.$data;\r\n                } else {\r\n                    this.$rawData = dataItemOrObservable;\r\n                    this.$data = dataItem;\r\n                }\r\n\r\n                if (dataItemAlias) {\r\n                    this[dataItemAlias] = dataItem;\r\n                }\r\n\r\n                // The extendCallback function is provided when creating a child context or extending a context.\r\n                // It handles the specific actions needed to finish setting up the binding context. Actions in this\r\n                // function could also add dependencies to this binding context.\r\n                if (extendCallback) {\r\n                    extendCallback(this, parentContext, dataItem);\r\n                }\r\n\r\n                // When a \"parent\" context is given and we don't already have a dependency on its context, register a dependency on it.\r\n                // Thus whenever the parent context is updated, this context will also be updated.\r\n                let parentCtxSubscribable = parentContext && parentContext[CONTEXT_SUBSCRIBABLE];\r\n                if (parentCtxSubscribable && !getCurrentComputed().hasAncestorDependency(parentCtxSubscribable)) {\r\n                    parentCtxSubscribable();\r\n                }\r\n\r\n                if (dataDependency) {\r\n                    this[CONTEXT_DATA_DEPENDENCY] = dataDependency;\r\n                }\r\n\r\n                return this.$data;\r\n            };\r\n\r\n        if (options && options.exportDependencies) {\r\n            // The \"exportDependencies\" option means that the calling code will track any dependencies and re-create\r\n            // the binding context when they change.\r\n            _updateContext();\r\n        } else {\r\n            _subscribable = pureComputed(_updateContext);\r\n            _subscribable.peek();\r\n\r\n            // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\r\n            // subscribed to any observables that were accessed in the process. If there is nothing to track, the\r\n            // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\r\n            // the context object.\r\n            if (_subscribable.isActive()) {\r\n                // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\r\n                _subscribable.equalityComparer = null;\r\n            } else {\r\n                this[CONTEXT_SUBSCRIBABLE] = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\r\n    // any observables, the new child context will automatically get a dependency on the parent context.\r\n    // But this does not mean that the $data value of the child context will also get updated. If the child\r\n    // view model also depends on the parent view model, you must provide a function that returns the correct\r\n    // view model on each update.\r\n    createChildContext(dataItemOrAccessor, dataItemAlias, extendCallback, options) {\r\n        if (!options && dataItemAlias && typeof dataItemAlias === 'object') {\r\n            options = dataItemAlias;\r\n            dataItemAlias = options.as;\r\n            extendCallback = options.extend;\r\n        }\r\n\r\n        if (dataItemAlias && options && options.noChildContext) {\r\n            let isFunc = typeof dataItemOrAccessor === 'function' && !dataItemOrAccessor[IS_OBSERVABLE];\r\n            return new KoBindingContext(INHERIT_PARENT_VM_DATA, this, null, (newContext) => {\r\n                    if (extendCallback) {\r\n                        extendCallback(newContext);\r\n                    }\r\n                    newContext[dataItemAlias] = isFunc ? dataItemOrAccessor() : dataItemOrAccessor;\r\n                }, options);\r\n        }\r\n\r\n        return new KoBindingContext(dataItemOrAccessor, this, dataItemAlias, (newContext, parentContext) => {\r\n            // Extend the context hierarchy by setting the appropriate pointers\r\n            newContext.$parentContext = parentContext;\r\n            newContext.$parent = parentContext.$data;\r\n            newContext.$parents = (parentContext.$parents || []).slice();\r\n            newContext.$parents.unshift(newContext.$parent);\r\n            if (extendCallback) {\r\n                extendCallback(newContext);\r\n            }\r\n        }, options);\r\n    }\r\n\r\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\r\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\r\n    // when an observable view model is updated.\r\n    extend(properties, options) {\r\n        return new KoBindingContext(INHERIT_PARENT_VM_DATA, this, null, (newContext /*, parentContext*/) => {\r\n            Object.assign(newContext, (typeof properties === 'function') ? properties(newContext) : properties);\r\n        }, options);\r\n    }\r\n}\r\n\r\n// allows for replacing 'obj instanceof KoBindingContext' with faster obj[IS_BINDING_CONTEXT_INSTANCE]\r\nKoBindingContext.prototype[IS_BINDING_CONTEXT_INSTANCE] = true;\r\n\r\nconst _asyncContextDispose = (node) => {\r\n    let bindingInfo = _getBindingInfoForNode(node),\r\n        asyncContext = bindingInfo && bindingInfo.asyncContext;\r\n    if (asyncContext) {\r\n        bindingInfo.asyncContext = null;\r\n        asyncContext.notifyAncestor();\r\n    }\r\n};\r\n\r\n\r\nclass AsyncCompleteContext {\r\n    constructor(node, bindingInfo, ancestorBindingInfo) {\r\n        this.node = node;\r\n        this.bindingInfo = bindingInfo;\r\n        this.asyncDescendants = [];\r\n        this.childrenComplete = false;\r\n\r\n        if (!bindingInfo.asyncContext) {\r\n            addDisposeCallback(node, _asyncContextDispose);\r\n        }\r\n\r\n        if (ancestorBindingInfo && ancestorBindingInfo.asyncContext) {\r\n            ancestorBindingInfo.asyncContext.asyncDescendants.push(node);\r\n            this.ancestorBindingInfo = ancestorBindingInfo;\r\n        }\r\n    }\r\n\r\n    notifyAncestor() {\r\n        let asyncContext = this.ancestorBindingInfo && this.ancestorBindingInfo.asyncContext;\r\n        if (asyncContext) {\r\n            asyncContext.descendantComplete(this.node);\r\n        }\r\n    }\r\n\r\n    descendantComplete(node) {\r\n        let descendants = this.asyncDescendants,\r\n            index = (descendants && descendants.length) ? descendants.indexOf(node) : -1;\r\n        if (index === 0) {\r\n            descendants.shift();\r\n        } else if (index > 0) {\r\n            descendants.splice(index, 1);\r\n        }\r\n        if (!descendants.length && this.childrenComplete) {\r\n            this.completeChildren();\r\n        }\r\n    }\r\n\r\n    completeChildren() {\r\n        this.childrenComplete = true;\r\n        if (this.bindingInfo.asyncContext && !this.asyncDescendants.length) {\r\n            this.bindingInfo.asyncContext = null;\r\n            removeDisposeCallback(this.node, _asyncContextDispose);\r\n            bindingEvent.notify(this.node, EVENT_DESCENDENTS_COMPLETE);\r\n            this.notifyAncestor();\r\n        }\r\n    }\r\n}\r\n\r\nexport const EVENT_CHILDREN_COMPLETE = 'childrenComplete';\r\nexport const EVENT_DESCENDENTS_COMPLETE = 'descendantsComplete';\r\n\r\nexport const bindingEvent = {\r\n    childrenComplete: EVENT_CHILDREN_COMPLETE,\r\n    descendantsComplete: EVENT_DESCENDENTS_COMPLETE,\r\n    subscribe(node, event, callback, context, options) {\r\n        _ensureNodeHasDomData(node);\r\n        let nodeDomData = _ensureNodeHasDomData(node),\r\n            bindingInfo = _getOrAddBindingInfoInDomData(nodeDomData),\r\n            eventSubscribable = bindingInfo.eventSubscribable || (bindingInfo.eventSubscribable = new Subscribable());\r\n        \r\n        if (options && options.notifyImmediately && bindingInfo.notifiedEvents[event]) {\r\n            ignoreDependencyDetection(callback, context, [node]);\r\n        }\r\n        return eventSubscribable.subscribe(callback, context, event);\r\n    },\r\n\r\n    notify(node, event) {\r\n        let bindingInfo = _getBindingInfoForNode(node);\r\n        if (!bindingInfo) {\r\n            return;\r\n        }\r\n        bindingInfo.notifiedEvents[event] = true;\r\n        let _eventSubscribable = bindingInfo.eventSubscribable;\r\n        if (_eventSubscribable) {\r\n            _eventSubscribable.notifySubscribers(node, event);\r\n        }\r\n        if (event === EVENT_CHILDREN_COMPLETE) {\r\n            let _asyncContext = bindingInfo.asyncContext; \r\n            if (_asyncContext) {\r\n                _asyncContext.completeChildren();\r\n            } else if (_asyncContext === undefined && _eventSubscribable && hasSubscriptionsForEvent(_eventSubscribable, EVENT_DESCENDENTS_COMPLETE)) {\r\n                // It's currently an error to register a descendantsComplete handler for a node that was never registered as completing asynchronously.\r\n                // That's because without the asyncContext, we don't have a way to know that all descendants have completed.\r\n                throw new Error(\"descendantsComplete event not supported for bindings on this node\");\r\n            }\r\n        }\r\n    },\r\n\r\n    startPossiblyAsyncContentBinding: function (node, bindingContext) {\r\n        let nodeDomData = _ensureNodeHasDomData(node),\r\n            bindingInfo = _getOrAddBindingInfoInDomData(nodeDomData);\r\n\r\n        if (!bindingInfo.asyncContext) {\r\n            bindingInfo.asyncContext = new AsyncCompleteContext(node, bindingInfo, bindingContext[CONTEXT_ANCESTOR_BINDING_INFO]);\r\n        }\r\n\r\n        // If the provided context was already extended with this node's binding info, just return the extended context\r\n        if (bindingContext[CONTEXT_ANCESTOR_BINDING_INFO] === bindingInfo) {\r\n            return bindingContext;\r\n        }\r\n        \r\n        return bindingContext.extend(ctx => ctx[CONTEXT_ANCESTOR_BINDING_INFO] = bindingInfo);\r\n    }\r\n};\r\n\r\n// Given a function that returns bindings, create and return a new object that contains\r\n// binding value-accessors functions. Each accessor function calls the original function\r\n// so that it always gets the latest value and all dependencies are captured. This is used\r\n// by ko.applyBindingsToNode and _getBindingsAndMakeAccessors.\r\nconst _makeAccessorsFromFunction = (callback) => {\r\n    let source = ignoreDependencyDetectionNoArgs(callback);\r\n    if (!source) {\r\n        return null;\r\n    }\r\n    let target = {};\r\n    for (let key of Object.keys(source)) {\r\n        target[key] = () => callback()[key];\r\n    }\r\n    return target;\r\n};\r\n\r\nconst _applyBindingsToDescendantsInternal = (bindingContext, elementOrVirtualElement) => {\r\n    let nextInQueue = firstChild(elementOrVirtualElement);\r\n\r\n    if (nextInQueue) {\r\n        let currentChild;\r\n\r\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\r\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\r\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\r\n        // trigger insertion of <template> contents at that point in the document.\r\n        if (bindingProviderInstance.preprocessNode) {\r\n            while (currentChild = nextInQueue) {\r\n                nextInQueue = nextSibling(currentChild);\r\n                bindingProviderInstance.preprocessNode(currentChild);\r\n            }\r\n            // Reset nextInQueue for the next loop\r\n            nextInQueue = firstChild(elementOrVirtualElement);\r\n        }\r\n\r\n        while (currentChild = nextInQueue) {\r\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\r\n            nextInQueue = nextSibling(currentChild);\r\n            _applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild);\r\n        }\r\n    }\r\n    bindingEvent.notify(elementOrVirtualElement, EVENT_CHILDREN_COMPLETE);\r\n};\r\n\r\nconst _applyBindingsToNodeAndDescendantsInternal = (bindingContext, nodeVerified) => {\r\n    let nodeType = nodeVerified.nodeType;\r\n\r\n    // Perf optimisation: Apply bindings only if...\r\n    // (1) we need to store the binding info for the node (all element nodes)\r\n    // (2) it might have bindings (e.g., it has a data-bind attribute, or it's a start-comment for a containerless template)\r\n    // (3) it's a text node and a custom binding provider was registered which may support text nodes (unlike the default BP) \r\n    if (nodeType === 1 || ((nodeType === 8 || bindingProviderMaySupportTextNodes) && bindingProviderInstance.nodeHasBindings(nodeVerified))) {\r\n        bindingContext = _applyBindingsToNodeInternal(nodeVerified, null, bindingContext).bindingContextForDescendants;\r\n    }\r\n    if (bindingContext && !BINDING_DOES_NOT_RECURSE_INTO_ELEMENT_TYPES[nodeVerified.tagName]) {\r\n        _applyBindingsToDescendantsInternal(bindingContext, nodeVerified);\r\n    }\r\n};\r\n\r\n\r\nconst _applyBindingsToNodeInternal = (node, sourceBindings, bindingContext) => {\r\n    let nodeDomData = _ensureNodeHasDomData(node),\r\n        bindingInfo = _getOrAddBindingInfoInDomData(nodeDomData);\r\n\r\n    // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\r\n    let alreadyBound = bindingInfo.alreadyBound;\r\n    if (!sourceBindings) {\r\n        if (alreadyBound) {\r\n            throw Error(\"You cannot apply bindings multiple times to the same element.\");\r\n        }\r\n        bindingInfo.alreadyBound = true;\r\n    }\r\n    if (!alreadyBound) {\r\n        bindingInfo.context = bindingContext;\r\n    }\r\n    if (!bindingInfo.notifiedEvents) {\r\n        bindingInfo.notifiedEvents = {};\r\n    }\r\n\r\n    // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\r\n    let bindings,\r\n        bindingsUpdater;\r\n\r\n    if (sourceBindings && typeof sourceBindings !== 'function') {\r\n        bindings = sourceBindings;\r\n    } else {\r\n        // Get the binding from the provider within a computed observable so that we can update the bindings whenever\r\n        // the binding context is updated or if the binding provider accesses observables.\r\n        bindingsUpdater = dependentObservable(() => {\r\n            if (sourceBindings) {\r\n                bindings = sourceBindings(bindingContext, node);\r\n            } else if (bindingProviderInstance.getBindingAccessors) {\r\n                bindings = bindingProviderInstance.getBindingAccessors(node, bindingContext);\r\n            } else {\r\n                // If binding provider doesn't include a getBindingAccessors function, we add it now.\r\n                bindings = _makeAccessorsFromFunction(bindingProviderInstance.getBindings.bind(bindingProviderInstance, node, bindingContext));\r\n            }\r\n            // Register a dependency on the binding context to support observable view models.\r\n            if (bindings) {\r\n                let ctxSubscribable = bindingContext[CONTEXT_SUBSCRIBABLE],\r\n                    ctxDataDependency = bindingContext[CONTEXT_DATA_DEPENDENCY];\r\n                if (ctxSubscribable){\r\n                    ctxSubscribable();\r\n                } \r\n                if (ctxDataDependency) {\r\n                    ctxDataDependency();\r\n                }\r\n            }\r\n            return bindings;\r\n        }, null, {disposeWhenNodeIsRemoved: node});\r\n\r\n        if (!bindings || !bindingsUpdater.isActive()) {\r\n            bindingsUpdater = null;\r\n        }\r\n    }\r\n\r\n    if (!bindings) {\r\n        return {\r\n            bindingContextForDescendants: bindingContext\r\n        };\r\n    }\r\n    \r\n    let contextToExtend = bindingContext,\r\n        bindingHandlerThatControlsDescendantBindings;\r\n\r\n    // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\r\n    // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\r\n    // the latest binding value and registers a dependency on the binding updater.\r\n    let getValueAccessor = bindingsUpdater ? \r\n                                (bindingKey) => () => bindingsUpdater()[bindingKey]() : \r\n                                (bindingKey) => bindings[bindingKey];\r\n\r\n    // let allBindings = () => {\r\n    //     throw new Error('Use of allBindings as a function is no longer supported');\r\n    // };\r\n    // ^^^ using a function and add custom methods to it is 98% slower than direct object literals in Firefox 81, \r\n    //     plus the 'no longer supported' message has existed since 2013.. time to drop it  \r\n\r\n    // The following is the 3.x allBindings API\r\n    let allBindings = {\r\n        get: (key) => bindings[key] && getValueAccessor(key)(),\r\n        has: (key) => key in bindings\r\n    };\r\n\r\n    if (EVENT_CHILDREN_COMPLETE in bindings) {\r\n        bindingEvent.subscribe(node, EVENT_CHILDREN_COMPLETE, () => {\r\n            let callback = bindings[EVENT_CHILDREN_COMPLETE]();\r\n            if (callback) {\r\n                let nodes = childNodes(node);\r\n                if (nodes.length) {\r\n                    callback(nodes, dataFor(nodes[0]));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    if (EVENT_DESCENDENTS_COMPLETE in bindings) {\r\n        contextToExtend = bindingEvent.startPossiblyAsyncContentBinding(node, bindingContext);\r\n        bindingEvent.subscribe(node, EVENT_DESCENDENTS_COMPLETE, () => {\r\n            let callback = bindings[EVENT_DESCENDENTS_COMPLETE]();\r\n            if (callback && firstChild(node)) {\r\n                callback(node);\r\n            }\r\n        });\r\n    }\r\n\r\n    // First put the bindings into depth-first order (topologicalSortBindings)\r\n    \r\n    let orderedBindings = [],       // The list of key/handler pairs that we will return\r\n        bindingsConsidered = {},    // A temporary record of which bindings are already in 'orderedBindings'\r\n        cyclicDependencyStack = [], // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\r\n        _pushBinding = (bindingKey) => {\r\n            if (bindingsConsidered[bindingKey]) {\r\n                return;\r\n            }\r\n            bindingsConsidered[bindingKey] = true;\r\n            let binding = getBindingHandler(bindingKey);\r\n            if (!binding) {\r\n                return;\r\n            }\r\n            // First add dependencies (if any) of the current binding\r\n            if (binding.after) {\r\n                cyclicDependencyStack.push(bindingKey);\r\n                for (let bindingDependencyKey of binding.after) {\r\n                    if (bindings[bindingDependencyKey]) {\r\n                        if (cyclicDependencyStack.includes(bindingDependencyKey)) {\r\n                            throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\r\n                        }\r\n                        _pushBinding(bindingDependencyKey);\r\n                    }\r\n                }\r\n                cyclicDependencyStack.length--;\r\n            }\r\n            // Next add the current binding\r\n            orderedBindings.push({key: bindingKey, handler: binding});\r\n        };\r\n\r\n    for (let bindingKey of Object.keys(bindings)) {\r\n        _pushBinding(bindingKey);\r\n    }\r\n    \r\n    // Go through the sorted bindings, calling init and update for each\r\n    for (let bindingKeyAndHandler of orderedBindings) {\r\n        // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\r\n        // so bindingKeyAndHandler.handler will always be nonnull.\r\n        let handlerInitFn = bindingKeyAndHandler.handler.init,\r\n            handlerUpdateFn = bindingKeyAndHandler.handler.update,\r\n            bindingKey = bindingKeyAndHandler.key;\r\n\r\n        if (node.nodeType === 8 && !allowedVirtualElementBindings[bindingKey]) {\r\n            throw new Error(\"The binding '\" + bindingKey + \"' cannot be used with virtual elements\");\r\n        }\r\n\r\n        try {\r\n            // Run init, ignoring any dependencies\r\n            if (typeof handlerInitFn === 'function') {\r\n                ignoreDependencyDetectionNoArgs(() => {\r\n                    let initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, contextToExtend.$data, contextToExtend);\r\n\r\n                    // If this binding handler claims to control descendant bindings, make a note of this\r\n                    if (initResult && initResult.controlsDescendantBindings) {\r\n                        if (bindingHandlerThatControlsDescendantBindings) {\r\n                            throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\r\n                        }\r\n                        bindingHandlerThatControlsDescendantBindings = bindingKey;\r\n                    }\r\n                });\r\n            }\r\n            // Run update in its own computed wrapper\r\n            if (typeof handlerUpdateFn === 'function') {\r\n                dependentObservable(\r\n                    () => handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, contextToExtend.$data, contextToExtend),\r\n                    null,\r\n                    {disposeWhenNodeIsRemoved: node}\r\n                );\r\n            }\r\n        } catch (ex) {\r\n            ex.message = `Unable to process binding \"${bindingKey}: ${bindings[bindingKey]}\"\\nMessage:  + ${ex.message}`;\r\n            throw ex;\r\n        }\r\n    }\r\n\r\n    return {\r\n        bindingContextForDescendants: bindingHandlerThatControlsDescendantBindings ? null : contextToExtend\r\n    };\r\n};\r\n\r\nconst _getBindingContext = (viewModelOrBindingContext, extendContextCallback) => //@inline\r\n            (viewModelOrBindingContext && viewModelOrBindingContext[IS_BINDING_CONTEXT_INSTANCE]) ? viewModelOrBindingContext : \r\n                                new KoBindingContext(viewModelOrBindingContext, undefined, undefined, extendContextCallback);\r\n\r\nexport const applyBindingAccessorsToNode = (node, bindings, viewModelOrBindingContext) => {\r\n    return _applyBindingsToNodeInternal(node, bindings, _getBindingContext(viewModelOrBindingContext, undefined));\r\n};\r\n\r\nexport const applyBindingsToNode = (node, bindings, viewModelOrBindingContext) => {\r\n    let context = _getBindingContext(viewModelOrBindingContext, undefined),\r\n        /** @type {Object} - a new bindings object that contains binding value-accessors functions */\r\n        bindingsWithAccessors;\r\n\r\n    if (typeof bindings === 'function') {\r\n        bindingsWithAccessors = _makeAccessorsFromFunction(() => bindings(context, node));\r\n    } else {\r\n        bindingsWithAccessors = {};\r\n        for (let key of Object.keys(bindings)) {\r\n            let val = bindings[key];\r\n            bindingsWithAccessors[key] = () => val;\r\n        }\r\n    }\r\n    return applyBindingAccessorsToNode(node, bindingsWithAccessors, context);\r\n};\r\n\r\nexport const applyBindingsToDescendants = (viewModelOrBindingContext, rootNode) => {\r\n    if (rootNode.nodeType === 1 || rootNode.nodeType === 8) {\r\n        _applyBindingsToDescendantsInternal(_getBindingContext(viewModelOrBindingContext, undefined), rootNode);\r\n    }\r\n};\r\n\r\nexport function applyBindings(viewModelOrBindingContext, rootNode, extendContextCallback) {\r\n    if (arguments.length < 2) {\r\n        rootNode = document.body;\r\n        if (!rootNode) {\r\n            throw Error(\"ko.applyBindings: could not find document.body; has the document been loaded?\");\r\n        }\r\n    } else if (!rootNode || (rootNode.nodeType !== 1 && rootNode.nodeType !== 8)) {\r\n        throw Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\r\n    }\r\n    _applyBindingsToNodeAndDescendantsInternal(_getBindingContext(viewModelOrBindingContext, extendContextCallback), rootNode);\r\n}\r\n\r\n// Retrieving binding context from arbitrary nodes\r\n// We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\r\nexport const contextFor = (node) => {\r\n    let bindingInfo =  node && _getBindingInfoForNode(node);\r\n    return bindingInfo ? bindingInfo.context : undefined;\r\n};\r\n\r\nexport const dataFor = (node) => {\r\n    // TODO check how often this gets called with falsy node; consider early-exit\r\n    // TODO check how often this gets called with nodeTypes other than 1|8, remove nodeType-check if neglectable  \r\n    let bindingInfo = node && (node.nodeType === 1 || node.nodeType === 8) && _getBindingInfoForNode(node),\r\n        context = bindingInfo && bindingInfo.context;\r\n    return context ? context.$data : undefined;\r\n};\r\n    \r\n","import {options} from '../options';\r\nimport {registerDependencyInternal} from './dependencyDetection';\r\nimport {setPrototypeOfOrExtend, trySetPrototypeOf, canSetPrototype, valuesArePrimitiveAndEqual} from '../utils';\r\nimport {initSubscribableInternal, SUBSCRIBABLE_PROTOTYPE} from './subscribable';\r\nimport {IS_OBSERVABLE} from './observableUtils';\r\nimport {deferredExtender} from './deferredExtender';\r\n\r\n/** @internal */\r\nexport const LATEST_VALUE_KEY = Symbol('_latestValue');\r\n\r\nexport const observable = function (initialValue) {\r\n\r\n    let _observable = function () {\r\n        let _self = _observable;\r\n\r\n        // Lets assume, read happens more often than write\r\n        if (!arguments.length) {\r\n            // Read\r\n            registerDependencyInternal(_self); // The caller only needs to be notified of changes if they did a \"read\" operation\r\n            return _self[LATEST_VALUE_KEY];\r\n        }\r\n        // Write\r\n        // Ignore writes if the value hasn't changed\r\n        let newValue = arguments[0],\r\n            equalityComparer = _self.equalityComparer;\r\n        \r\n        if (!equalityComparer || !equalityComparer(_self[LATEST_VALUE_KEY], newValue)) {\r\n            observableValueWillMutateInternal(_self);\r\n            _self[LATEST_VALUE_KEY] = newValue;\r\n            _self.valueHasMutated();\r\n        }\r\n        return this; // Permits chained assignments (on the parent view model, not the observable)\r\n    };\r\n\r\n    _observable[LATEST_VALUE_KEY] = initialValue;\r\n\r\n    // Inherit from './subscribable.js'\r\n    if (!canSetPrototype) {\r\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\r\n        Object.assign(_observable, SUBSCRIBABLE_PROTOTYPE);\r\n    }\r\n\r\n    initSubscribableInternal(_observable);\r\n\r\n    // Inherit from './observable.js'\r\n    setPrototypeOfOrExtend(_observable, OBSERVABLE_PROTOTYPE);\r\n\r\n    if (options.deferUpdates) {\r\n        deferredExtender(_observable, true);\r\n    }\r\n\r\n    return _observable;\r\n};\r\n\r\n/**\r\n * To be used internally ONLY for observable/observableArrays but NOT for dependentObservables\r\n * (!) On dependent observables use .peek() !\r\n * @internal\r\n */\r\nexport const peekObservableInternal = (observable) => observable[LATEST_VALUE_KEY]; //@inline-global:LATEST_VALUE_KEY\r\n\r\n/** @internal */\r\nexport const observableValueWillMutateInternal = (obs) => obs.notifySubscribers(obs[LATEST_VALUE_KEY], 'beforeChange'); //@inline-global:LATEST_VALUE_KEY\r\n\r\n// Define prototype for observables\r\nexport const OBSERVABLE_PROTOTYPE = {\r\n    [IS_OBSERVABLE]: true,\r\n    equalityComparer: valuesArePrimitiveAndEqual,\r\n    peek() {\r\n        return peekObservableInternal(this);\r\n    },\r\n    valueHasMutated() {\r\n        this.notifySubscribers(this[LATEST_VALUE_KEY], 'spectate');\r\n        this.notifySubscribers(this[LATEST_VALUE_KEY]);\r\n    },\r\n    /** exposed only for external uses. KO-internally use {@link observableValueWillMutateInternal} macro */ \r\n    valueWillMutate() {\r\n        observableValueWillMutateInternal(this);\r\n    }\r\n};\r\n\r\nobservable.fn = OBSERVABLE_PROTOTYPE;\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.observable constructor\r\ntrySetPrototypeOf(OBSERVABLE_PROTOTYPE, SUBSCRIBABLE_PROTOTYPE);\r\n","\r\n// Go through the items that have been added and deleted and try to find matches between them.\r\nexport const findMovesInArrayComparison = (left, right, limitFailedCompares) => {\r\n    if (!left.length || !right.length) {\r\n        return;\r\n    }\r\n    let failedCompares = 0, leftItem, rightItem;\r\n    \r\n    for (let l = 0, r;(!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\r\n        for (r = 0; (rightItem = right[r]); ++r) {\r\n            if (leftItem['value'] === rightItem['value']) {\r\n                leftItem['moved'] = rightItem['index'];\r\n                rightItem['moved'] = leftItem['index'];\r\n                right.splice(r, 1);         // This item is marked as moved; so remove it from right list\r\n                failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\r\n                break;\r\n            }\r\n        }\r\n        failedCompares += r;\r\n    }\r\n};\r\n\r\n// Simple calculation based on Levenshtein distance.\r\nexport let compareArrays = (oldArray, newArray, options) => {\r\n    // For backward compatibility, if the third arg is actually a bool, interpret\r\n    // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\r\n    options = (typeof options === 'boolean') ? {'dontLimitMoves': options} : (options || {});\r\n    oldArray = oldArray || [];\r\n    newArray = newArray || [];\r\n\r\n    return (oldArray.length < newArray.length) ?\r\n         compareSmallArrayToBigArray(oldArray, newArray, STATUS_NOT_IN_OLD, STATUS_NOT_IN_NEW, options) :\r\n         compareSmallArrayToBigArray(newArray, oldArray, STATUS_NOT_IN_NEW, STATUS_NOT_IN_OLD, options);\r\n};\r\n\r\n// allow overriding compareArrays for tests\r\nexport const _overrideCompareArrays = fn => compareArrays = fn;\r\n\r\nconst STATUS_NOT_IN_OLD = 'added'; \r\nconst STATUS_NOT_IN_NEW = 'deleted';\r\n\r\nfunction compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\r\n    let editDistanceMatrix = [],\r\n        smlIndex, smlIndexMax = smlArray.length,\r\n        bigIndex, bigIndexMax = bigArray.length,\r\n        compareRange = (bigIndexMax - smlIndexMax) || 1,\r\n        maxDistance = smlIndexMax + bigIndexMax + 1,\r\n        thisRow, lastRow,\r\n        bigIndexMaxForRow, bigIndexMinForRow;\r\n\r\n    for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\r\n        lastRow = thisRow;\r\n        editDistanceMatrix.push(thisRow = []);\r\n        bigIndexMaxForRow = Math.min(bigIndexMax, smlIndex + compareRange);\r\n        bigIndexMinForRow = smlIndex > 1 ? smlIndex - 1 : 0;\r\n        for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\r\n            if (!bigIndex) {\r\n                thisRow[bigIndex] = smlIndex + 1;\r\n            } else if (!smlIndex) { // Top row - transform empty array into new array via additions\r\n                thisRow[bigIndex] = bigIndex + 1;\r\n            } else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1]) {\r\n                thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\r\n            } else {\r\n                let northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\r\n                let westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\r\n                thisRow[bigIndex] = (northDistance < westDistance ? northDistance : westDistance) + 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    let editScript = [], meMinusOne, notInSml = [], notInBig = [], nextEditScriptIndex = 0;\r\n    for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\r\n        meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\r\n        if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex - 1]) {\r\n            notInSml.push(editScript[nextEditScriptIndex++] = {     // added\r\n                'status': statusNotInSml,\r\n                'value': bigArray[--bigIndex],\r\n                'index': bigIndex\r\n            });\r\n        } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\r\n            notInBig.push(editScript[nextEditScriptIndex++] = {     // deleted\r\n                'status': statusNotInBig,\r\n                'value': smlArray[--smlIndex],\r\n                'index': smlIndex\r\n            });\r\n        } else {\r\n            --bigIndex;\r\n            --smlIndex;\r\n            if (!options['sparse']) {\r\n                editScript[nextEditScriptIndex++] = {\r\n                    'status': \"retained\",\r\n                    'value': bigArray[bigIndex]\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\r\n    // smlIndexMax keeps the time complexity of this algorithm linear.\r\n    findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\r\n\r\n    return editScript.reverse();\r\n}\r\n","import {compareArrays, findMovesInArrayComparison} from '../binding/editDetection/compareArrays';\r\nimport {extenders} from './extenders';\r\nimport {hasSubscriptionsForEvent} from './subscribable.js';\r\n\r\nconst ARRAY_CHANGE_EVENT_NAME = 'arrayChange';\r\n\r\nexport const trackArrayChanges = extenders.trackArrayChanges = (target, options) => {\r\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\r\n    target.compareArrayOptions = {};\r\n    if (options && typeof options === \"object\") {\r\n        Object.assign(target.compareArrayOptions, options);\r\n    }\r\n    target.compareArrayOptions.sparse = true;\r\n\r\n    // Only modify the target observable once\r\n    if (target.cacheDiffForKnownOperation) {\r\n        return;\r\n    }\r\n    let trackingChanges = false,\r\n        cachedDiff = null,\r\n        changeSubscription,\r\n        spectateSubscription,\r\n        pendingChanges = 0,\r\n        previousContents,\r\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\r\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\r\n\r\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\r\n    target.beforeSubscriptionAdd = (event) => {\r\n        if (underlyingBeforeSubscriptionAddFunction) {\r\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\r\n        }\r\n        if (event === ARRAY_CHANGE_EVENT_NAME) {\r\n            _trackChanges();\r\n        }\r\n    };\r\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\r\n    target.afterSubscriptionRemove = (event) => {\r\n        if (underlyingAfterSubscriptionRemoveFunction) {\r\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\r\n        }\r\n        if (event === ARRAY_CHANGE_EVENT_NAME && !hasSubscriptionsForEvent(target, ARRAY_CHANGE_EVENT_NAME)) {\r\n            if (changeSubscription) {\r\n                changeSubscription.dispose();\r\n            }\r\n            if (spectateSubscription) {\r\n                spectateSubscription.dispose();\r\n            }\r\n            spectateSubscription = changeSubscription = null;\r\n            trackingChanges = false;\r\n            previousContents = undefined;\r\n        }\r\n    };\r\n\r\n    const _trackChanges = () => {\r\n        if (trackingChanges) {\r\n            // Whenever there's a new subscription and there are pending notifications, make sure all previous\r\n            // subscriptions are notified of the change so that all subscriptions are in sync.\r\n            notifyChanges();\r\n            return;\r\n        }\r\n\r\n        trackingChanges = true;\r\n\r\n        // Track how many times the array actually changed value\r\n        spectateSubscription = target.subscribe(() => ++pendingChanges, null, \"spectate\");\r\n\r\n        // Each time the array changes value, capture a clone so that on the next\r\n        // change it's possible to produce a diff\r\n        previousContents = [].concat(target.peek() || []);\r\n        cachedDiff = null;\r\n        changeSubscription = target.subscribe(notifyChanges);\r\n\r\n        function notifyChanges() {\r\n            if (!pendingChanges) {\r\n                return;\r\n            }\r\n            // Make a copy of the current contents and ensure it's an array\r\n            let currentContents = [].concat(target.peek() || []), changes;\r\n\r\n                // Compute the diff and issue notifications, but only if someone is listening\r\n            if (hasSubscriptionsForEvent(target, ARRAY_CHANGE_EVENT_NAME)) {\r\n                changes = _getChanges(previousContents, currentContents);\r\n            }\r\n\r\n            // Eliminate references to the old, removed items, so they can be GCed\r\n            previousContents = currentContents;\r\n            cachedDiff = null;\r\n            pendingChanges = 0;\r\n\r\n            if (changes && changes.length) {\r\n                target.notifySubscribers(changes, ARRAY_CHANGE_EVENT_NAME);\r\n            }\r\n        }\r\n    };\r\n\r\n    const _getChanges = (previousContents, currentContents) => {\r\n        // We try to re-use cached diffs.\r\n        // The scenarios where pendingChanges > 1 are when using rate limiting or deferred updates,\r\n        // which without this check would not be compatible with arrayChange notifications. Normally,\r\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\r\n        if (!cachedDiff || pendingChanges > 1) {\r\n            cachedDiff = compareArrays(previousContents, currentContents, target.compareArrayOptions);\r\n        }\r\n\r\n        return cachedDiff;\r\n    };\r\n\r\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\r\n        // Only run if we're currently tracking changes for this observable array\r\n        // and there aren't any pending deferred notifications.\r\n        if (!trackingChanges || pendingChanges) {\r\n            return;\r\n        }\r\n        let diff = [],\r\n            arrayLength = rawArray.length,\r\n            argsLength = args.length,\r\n            offset = 0,\r\n            _nextPushDiffIndex = 0,\r\n            _pushDiff = (status, value, index) => diff[_nextPushDiffIndex++] = {status, value, index};\r\n\r\n        switch (operationName) {\r\n            case 'push':\r\n                offset = arrayLength; \r\n                // eslint-disable-line no-fallthrough\r\n            case 'unshift':\r\n                for (let index = 0; index < argsLength; index++) {\r\n                    _pushDiff('added', args[index], offset + index);\r\n                }\r\n                break;\r\n\r\n            case 'pop':\r\n                offset = arrayLength - 1; \r\n                // eslint-disable-line no-fallthrough\r\n            case 'shift':\r\n                if (arrayLength) {\r\n                    _pushDiff('deleted', rawArray[offset], offset);\r\n                }\r\n                break;\r\n\r\n            case 'splice': {\r\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\r\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\r\n                let startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\r\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\r\n                    endAddIndex = startIndex + argsLength - 2,\r\n                    endIndex = endDeleteIndex > endAddIndex ? endDeleteIndex : endAddIndex,\r\n                    additions = [],\r\n                    nextAdditionIndex = 0,\r\n                    deletions = [],\r\n                    nextDeletionIndex = 0;\r\n\r\n                for (let index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\r\n                    if (index < endDeleteIndex) {\r\n                        deletions[nextDeletionIndex++] = _pushDiff('deleted', rawArray[index], index);\r\n                    }\r\n                    if (index < endAddIndex) {\r\n                        additions[nextAdditionIndex++] = _pushDiff('added', args[argsIndex], index);\r\n                    }\r\n                }\r\n                findMovesInArrayComparison(deletions, additions);\r\n                break;\r\n            }\r\n            default:\r\n                return;\r\n        }\r\n        cachedDiff = diff;\r\n    };\r\n};\r\n","import {observable, OBSERVABLE_PROTOTYPE, observableValueWillMutateInternal, peekObservableInternal} from './observable';\r\nimport {setPrototypeOfOrExtend, trySetPrototypeOf} from '../utils';\r\nimport {IS_OBSERVABLE_ARRAY, IS_OBSERVABLE} from './observableUtils';\r\nimport {trackArrayChanges} from './observableArray.changeTracking';\r\n\r\n\r\nexport const observableArray = function (initialValues) {\r\n    if (initialValues && !Array.isArray(initialValues)) {\r\n        throw new Error('The argument passed when initializing an observable array must be an array, or null, or undefined.');\r\n    }\r\n    let _obsArrayInstance = observable(initialValues || []);\r\n    setPrototypeOfOrExtend(_obsArrayInstance, OBSERVABLE_ARRAY_PROTOTYPE);\r\n    trackArrayChanges(_obsArrayInstance);\r\n    return _obsArrayInstance;\r\n};\r\n\r\n/**\r\n * @param {*} valueOrPredicate\r\n * @return {(function(*): boolean)}\r\n */\r\nconst _getItemFilterPredicate = valueOrPredicate => //@inline\r\n            (typeof valueOrPredicate === 'function' && !valueOrPredicate[IS_OBSERVABLE]) ? valueOrPredicate \r\n                                                                                         : (value) => value === valueOrPredicate;\r\n\r\nconst OBSERVABLE_ARRAY_PROTOTYPE = {\r\n    [IS_OBSERVABLE_ARRAY]: true,\r\n    remove(valueOrPredicate) {\r\n        let underlyingArray = peekObservableInternal(this),\r\n            removedValues = [],\r\n            totalRemovedValues = 0,\r\n            predicate = _getItemFilterPredicate(valueOrPredicate);\r\n        \r\n         for (let i = 0; i < underlyingArray.length; i++) {\r\n            let value = underlyingArray[i];\r\n            if (predicate(value)) {\r\n                if (!totalRemovedValues) {\r\n                    observableValueWillMutateInternal(this);\r\n                }\r\n                if (underlyingArray[i] !== value) {\r\n                    throw Error('Array modified during remove; cannot remove item');\r\n                }\r\n                totalRemovedValues = removedValues.push(value);\r\n                underlyingArray.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n        if (totalRemovedValues) {\r\n            this.valueHasMutated();\r\n        }\r\n        return removedValues;\r\n    },\r\n\r\n    removeAll(arrayOfValues) {\r\n        // If you passed zero args, we remove everything\r\n        if (arrayOfValues === undefined) {\r\n            let underlyingArray = peekObservableInternal(this),\r\n                allValues = underlyingArray.slice();\r\n            \r\n            observableValueWillMutateInternal(this);\r\n            underlyingArray.splice(0, underlyingArray.length);\r\n            this.valueHasMutated();\r\n            return allValues;\r\n        }\r\n        // If you passed an arg, we interpret it as an array of entries to remove\r\n        return arrayOfValues ? this.remove(value => arrayOfValues.includes(value)) : [];\r\n    },\r\n\r\n    destroy(valueOrPredicate) {\r\n        let underlyingArray = peekObservableInternal(this),\r\n            predicate = _getItemFilterPredicate(valueOrPredicate);\r\n        \r\n        observableValueWillMutateInternal(this);\r\n        for (let i = underlyingArray.length - 1; i >= 0; i--) {\r\n            let value = underlyingArray[i];\r\n            if (predicate(value)) {\r\n                value._destroy = true;\r\n            }\r\n        }\r\n        this.valueHasMutated();\r\n    },\r\n\r\n    destroyAll(arrayOfValues) {\r\n        // If you passed zero args, we destroy everything\r\n\r\n        // If you passed an arg, we interpret it as an array of entries to destroy\r\n        return (arrayOfValues === undefined) ? this.destroy(() => true) : \r\n                arrayOfValues ? this.destroy(value => arrayOfValues.includes(value)) : [];\r\n    },\r\n\r\n    indexOf(item) {\r\n        return this().indexOf(item);\r\n    },\r\n\r\n    replace(oldItem, newItem) {\r\n        let underlyingArray = this(),\r\n            index = underlyingArray.indexOf(oldItem);\r\n        if (index >= 0) {\r\n            observableValueWillMutateInternal(this);\r\n            underlyingArray[index] = newItem;\r\n            this.valueHasMutated();\r\n        }\r\n    },\r\n\r\n    sorted(compareFunction) {\r\n        let arrayCopy = this().slice();\r\n        return compareFunction ? arrayCopy.sort(compareFunction) : arrayCopy.sort();\r\n    },\r\n\r\n    reversed() {\r\n        return this().slice().reverse();\r\n    },\r\n\r\n    // Populate ko.observableArray.fn with read-only functions from native arrays\r\n    slice() {\r\n        return this().slice(...arguments);\r\n    }\r\n};\r\n\r\nobservableArray.fn = OBSERVABLE_ARRAY_PROTOTYPE;\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.observableArray constructor\r\ntrySetPrototypeOf(OBSERVABLE_ARRAY_PROTOTYPE, OBSERVABLE_PROTOTYPE);\r\n\r\n// Populate ko.observableArray.fn with read/write functions from native arrays\r\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\r\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\r\nfor (let methodName of ['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift']) {\r\n    OBSERVABLE_ARRAY_PROTOTYPE[methodName] = function () {\r\n        // Use 'peek' to avoid creating a subscription in any computed that we're executing in the context of\r\n        // (for consistency with mutating regular observables)\r\n        let underlyingArray = peekObservableInternal(this);\r\n        observableValueWillMutateInternal(this);\r\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\r\n        \r\n        // using apply instead of direct call with arguments spread here (i.e. underlyingArray[methodName](...arguments) )\r\n        // as spread is ~50% slower in Firefox 87 and ~5% in Chrome.\r\n        let methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\r\n        this.valueHasMutated();\r\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\r\n        return methodCallResult === underlyingArray ? this : methodCallResult;\r\n    };\r\n}\r\n","\r\n/** \r\n * @type {Map<string, function>}\r\n * @internal\r\n */\r\nexport const _memoMap = new Map();\r\n\r\nconst MEMO_TEXT_START = '[!KoMemo:'; // length 9 (= magic number used inside `parseMemoText`)\r\nconst MEMO_ID_PREFIX = Date.now().toString(36) + '_';\r\n\r\nexport const parseMemoText = (memoText) => memoText.startsWith(MEMO_TEXT_START) ? memoText.substring(9) : null; //@inline\r\n\r\nlet _nextMemoId = 1;\r\n\r\nexport const memoize = (callback) => {\r\n    if (typeof callback !== \"function\") {\r\n        throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\r\n    }\r\n    let memoId = MEMO_ID_PREFIX + (_nextMemoId++);\r\n    _memoMap.set(memoId, callback);\r\n    return '<!--' + MEMO_TEXT_START + memoId + '-->';\r\n};\r\n\r\nexport const unmemoize = (memoId, callbackParams) => {\r\n    let callback = _memoMap.get(memoId);\r\n    if (!callback) {\r\n        throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\r\n    }\r\n    try {\r\n        callbackParams ? callback(...callbackParams) : callback();\r\n        return true;\r\n    } finally {\r\n        _memoMap.delete(memoId);\r\n    }\r\n};\r\n\r\nexport const unmemoizeDomNodeAndDescendants = (domNode, extraCallbackParamsArray) => {\r\n    if (!_memoMap.size || !domNode) {\r\n        return;\r\n    }\r\n    let nodeAndMemoIdObjs = [];\r\n\r\n    // (1) find memo comments in sub-tree\r\n    for (let node = domNode, nextNodes = [], memoId, memoText, nodeType; node; node = nextNodes.length && nextNodes.shift()) {\r\n        if ((nodeType = node.nodeType) === 8) {\r\n            // (!) additional memoText assignment to allow inlining of parseMemoText() call\r\n            if ((memoText = node.nodeValue) && (memoId = parseMemoText(memoText))) {\r\n                nodeAndMemoIdObjs.push({node, memoId});\r\n            }\r\n        } else if (nodeType === 1 && node.hasChildNodes()) {\r\n            if (nextNodes.length) {\r\n                nextNodes.unshift(...node.childNodes);\r\n            } else {\r\n                nextNodes = [...node.childNodes];\r\n            }\r\n        }\r\n    }\r\n    \r\n    // (2) unmemoize & run memoized callbacks\r\n    for (let o of nodeAndMemoIdObjs) {\r\n        let node = o.node;\r\n        unmemoize(o.memoId, extraCallbackParamsArray ? [node, ...extraCallbackParamsArray] : [node]);\r\n        node.nodeValue = ''; // Neuter this node so we don't try to unmemoize it again\r\n        node.remove(); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\r\n    }\r\n};\r\n","import {memoize} from '../memoization';\r\nimport {bindingRewriteValidators, preProcessBindings, parseObjectLiteral} from '../binding/expressionRewriting';\r\nimport {applyBindingAccessorsToNode} from '../binding/bindingAttributeSyntax';\r\n\r\nconst MEMOIZE_DATA_BINDING_ATTR_SYNTAX_REGEX = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9-]+(?:=(?:\"[^\"]*\"|'[^']*'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\r\nconst MEMOIZE_VIRTUAL_CONTAINER_BINDING_SYNTAX_REGEX = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\r\n\r\nconst _validateDataBindValuesForRewriting = (keyValueArray) => {\r\n    let allValidators = bindingRewriteValidators;\r\n    for (let {key, value} of keyValueArray) {\r\n        // we can assume allValidators is an augmented Array and has the `hasOwnProperty` method\r\n        if (allValidators.hasOwnProperty(key)) {\r\n            let validator = allValidators[key];\r\n\r\n            if (typeof validator === 'function') {\r\n                let possibleErrorMessage = validator(value);\r\n                if (possibleErrorMessage) {\r\n                    throw new Error(possibleErrorMessage);\r\n                }\r\n            } else if (!validator) {\r\n                throw new Error('This template engine does not support the \\'' + key + '\\' binding within its templates');\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst _constructMemoizedTagReplacement = (dataBindAttributeValue, tagToRetain, nodeName, templateEngine) => {\r\n    let dataBindKeyValueArray = parseObjectLiteral(dataBindAttributeValue);\r\n    _validateDataBindValuesForRewriting(dataBindKeyValueArray);\r\n    let rewrittenDataBindAttributeValue = preProcessBindings(dataBindKeyValueArray, {valueAccessors: true});\r\n\r\n    // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\r\n    // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\r\n    // extra indirection.\r\n    let applyBindingsToNextSiblingScript =\r\n        'ko.__tr_ambtns(function($context,$element){return(function(){return{ ' + rewrittenDataBindAttributeValue + ' } })()},\\'' + nodeName.toLowerCase() + '\\')';\r\n    return templateEngine.createJavaScriptEvaluatorBlock(applyBindingsToNextSiblingScript) + tagToRetain;\r\n};\r\n\r\nexport const applyMemoizedBindingsToNextSibling = (bindings, nodeName) => memoize((domNode, bindingContext) => {\r\n    let nodeToBind = domNode.nextSibling;\r\n    if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\r\n        applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\r\n    }\r\n});\r\n\r\n\r\nexport const ensureTemplateIsRewritten = (template, templateEngine, templateDocument) => {\r\n    if (templateEngine.isTemplateRewritten(template, templateDocument)) {\r\n        return;\r\n    }\r\n    templateEngine.rewriteTemplate(template, htmlString => memoizeBindingAttributeSyntax(htmlString, templateEngine), templateDocument);\r\n};\r\n\r\nexport const memoizeBindingAttributeSyntax = (htmlString, templateEngine) => {\r\n    return htmlString\r\n        .replace(MEMOIZE_DATA_BINDING_ATTR_SYNTAX_REGEX,\r\n            (_0, tagToRetain, nodeName, _3, dataBindAttributeValue) => _constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine))\r\n        .replace(MEMOIZE_VIRTUAL_CONTAINER_BINDING_SYNTAX_REGEX,\r\n            (_0, dataBindAttributeValue) => _constructMemoizedTagReplacement(dataBindAttributeValue, /* tagToRetain: */ '<!-- ko -->', /* nodeName: */ '#comment', templateEngine));\r\n};\r\n","import {isObservable, unwrapObservable} from './observableUtils';\r\n\r\nconst MAX_NESTED_OBSERVABLE_DEPTH = 10; // Escape the (unlikely) pathological case where an observable's current value is itself (or similar reference cycle)\r\n\r\nexport const toJS = function (rootObject) {\r\n    if (!arguments.length) {\r\n        throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\r\n    }\r\n\r\n    // We just unwrap everything at every level in the object graph\r\n    return _mapJsObjectGraph(rootObject, valueToMap => {\r\n        // Loop because an observable's value might in turn be another observable wrapper\r\n        for (let i = 0; isObservable(valueToMap) && (i < MAX_NESTED_OBSERVABLE_DEPTH); i++) {\r\n            valueToMap = valueToMap();\r\n        }\r\n        return valueToMap;\r\n    });\r\n};\r\n\r\n// replacer and space are optional\r\nexport const toJSON = (rootObject, replacer, space) => {\r\n    let plainJavaScriptObject = toJS(rootObject);\r\n    return JSON.stringify(unwrapObservable(plainJavaScriptObject), replacer, space);\r\n};\r\n\r\nconst _mapJsObjectGraph = (rootObject, mapInputCallback, visitedObjects) => {\r\n    visitedObjects = visitedObjects || new Map();\r\n\r\n    rootObject = mapInputCallback(rootObject);\r\n    let canHaveProperties = (typeof rootObject === \"object\") && (rootObject !== null) && (rootObject !== undefined) &&\r\n        (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) &&\r\n        (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\r\n    if (!canHaveProperties) {\r\n        return rootObject;\r\n    }\r\n\r\n    let outputProperties = Array.isArray(rootObject) ? [] : {};\r\n    visitedObjects.set(rootObject, outputProperties);\r\n\r\n    _visitPropertiesOrArrayEntries(rootObject, indexer => {\r\n        let propertyValue = mapInputCallback(rootObject[indexer]);\r\n\r\n        switch (typeof propertyValue) {\r\n            case 'boolean':\r\n            case 'number':\r\n            case 'string':\r\n            case 'function':\r\n                outputProperties[indexer] = propertyValue;\r\n                break;\r\n            case 'object':\r\n            case 'undefined': {\r\n                let previouslyMappedValue = visitedObjects.get(propertyValue);\r\n                outputProperties[indexer] = (previouslyMappedValue !== undefined)\r\n                    ? previouslyMappedValue\r\n                    : _mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\r\n                break;\r\n            }\r\n        }\r\n    });\r\n\r\n    return outputProperties;\r\n};\r\n\r\nconst _visitPropertiesOrArrayEntries = (rootObject, visitorCallback) => {\r\n    if (rootObject instanceof Array) {\r\n        for (let i = 0; i < rootObject.length; i++) {\r\n            visitorCallback(i);\r\n        }\r\n\r\n        // For arrays, also respect toJSON property for custom mappings (fixes #278)\r\n        if (typeof rootObject['toJSON'] === 'function') {\r\n            visitorCallback('toJSON');\r\n        }\r\n    } else {\r\n        for (let propertyName in rootObject) {\r\n            visitorCallback(propertyName);\r\n        }\r\n    }\r\n};\r\n","import {nextDomDataKey, getDomData, setDomData} from '../../utils.domData';\r\nimport {observable, peekObservableInternal} from '../../subscribables/observable';\r\nimport {compareArrays} from './compareArrays';\r\nimport {arrayForEach, anyDomNodeIsAttachedToDocument, fixUpContinuousNodeArray, replaceDomNodes} from '../../utils';\r\nimport {dependentObservable} from '../../subscribables/dependentObservable';\r\nimport {ignoreDependencyDetection} from '../../subscribables/dependencyDetection';\r\nimport {insertAfter} from '../../virtualElements';\r\nimport {cleanNode, removeNode} from '../../utils.domNodeDisposal';\r\n\r\nconst LAST_MAPPING_RESULT_DOM_DATA_KEY = nextDomDataKey();\r\nconst DELETED_ITEM_DUMMY_VALUE = nextDomDataKey();\r\n\r\n// Objective:\r\n// * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\r\n//   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\r\n// * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\r\n//   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\r\n//   previously mapped - retain those nodes, and just insert/delete other ones\r\n\r\n// \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\r\n// You can use this, for example, to activate bindings on those nodes.\r\n\r\nconst _mapNodeAndRefreshWhenChanged = (containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) => {\r\n    // Map this array value inside a dependentObservable so we re-map when any dependency changes\r\n    let mappedNodes = [];\r\n    let _dependentObservable = dependentObservable(() => {\r\n            let newMappedNodes = mapping(valueToMap, index, fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\r\n\r\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\r\n            if (mappedNodes.length) {\r\n                replaceDomNodes(mappedNodes, newMappedNodes);\r\n                if (callbackAfterAddingNodes) {\r\n                    ignoreDependencyDetection(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\r\n                }\r\n            }\r\n\r\n            // Replace the contents of the mappedNodes array, thereby updating the record\r\n            // of which nodes would be deleted if valueToMap was itself later removed\r\n            mappedNodes.length = 0;\r\n            \r\n            for (let i = 0, len = newMappedNodes.length; i < len; i++) {\r\n                mappedNodes[i] = newMappedNodes[i];\r\n            }\r\n            \r\n        }, null, {\r\n            disposeWhenNodeIsRemoved: containerNode, \r\n            disposeWhen: () => !anyDomNodeIsAttachedToDocument(mappedNodes)\r\n        });\r\n    \r\n    return {\r\n        mappedNodes,\r\n        dependentObservable: _dependentObservable.isActive() ? _dependentObservable : undefined\r\n    };\r\n};\r\n\r\nexport const setDomNodeChildrenFromArrayMapping = (domNode, array, mapping, options, callbackAfterAddingNodes, editScript) => {\r\n    array = array || [];\r\n    if (typeof array.length === 'undefined') { \r\n        array = [array]; // Coerce single value into array\r\n    }\r\n\r\n    options = options || {};\r\n    let lastMappingResult = getDomData(domNode, LAST_MAPPING_RESULT_DOM_DATA_KEY);\r\n    let isFirstExecution = !lastMappingResult;\r\n\r\n    // Build the new mapping result\r\n    let newMappingResult = [];\r\n    let lastMappingResultIndex = 0;\r\n    let currentArrayIndex = 0;\r\n\r\n    let nodesToDelete = [];\r\n    let itemsToMoveFirstIndexes = [];\r\n    let itemsForBeforeRemoveCallbacks = [];\r\n    let itemsForMoveCallbacks = [];\r\n    let itemsForAfterAddCallbacks = [];\r\n    let mapData;\r\n    let countWaitingForRemove = 0;\r\n\r\n    const _itemAdded = (value) => {\r\n        mapData = {\r\n            arrayEntry: value, \r\n            indexObservable: observable(currentArrayIndex++)\r\n        };\r\n        newMappingResult.push(mapData);\r\n        if (!isFirstExecution) {\r\n            itemsForAfterAddCallbacks.push(mapData);\r\n        }\r\n    };\r\n\r\n    const _itemMovedOrRetained = (oldPosition) => {\r\n        mapData = lastMappingResult[oldPosition];\r\n        let _indexObservable = mapData.indexObservable;\r\n        if (currentArrayIndex !== peekObservableInternal(_indexObservable)) {\r\n            itemsForMoveCallbacks.push(mapData);\r\n        }\r\n        // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\r\n        _indexObservable(currentArrayIndex++);\r\n        fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\r\n        newMappingResult.push(mapData);\r\n    };\r\n\r\n    const _callCallback = (callback, items) => {\r\n        for (let i = 0, len = items.length; i < len; i++) {\r\n            let item = items[i];\r\n            for (let node of item.mappedNodes) {\r\n                callback(node, i, item.arrayEntry);\r\n            }\r\n        }\r\n    };\r\n\r\n    if (isFirstExecution) {\r\n        array.length && arrayForEach(array, _itemAdded);\r\n    } else {\r\n        if (!editScript || (lastMappingResult && lastMappingResult['_countWaitingForRemove'])) {\r\n            // Compare the provided array against the previous one\r\n            let lastArray = lastMappingResult.map(x => x.arrayEntry),\r\n                compareOptions = {\r\n                    'dontLimitMoves': options['dontLimitMoves'],\r\n                    'sparse': true\r\n                };\r\n            editScript = compareArrays(lastArray, array, compareOptions);\r\n        }\r\n\r\n        for (let i = 0, editScriptItem, movedIndex, itemIndex; editScriptItem = editScript[i]; i++) {\r\n            movedIndex = editScriptItem['moved'];\r\n            itemIndex = editScriptItem['index'];\r\n            switch (editScriptItem['status']) {\r\n                case \"deleted\":\r\n                    while (lastMappingResultIndex < itemIndex) {\r\n                        _itemMovedOrRetained(lastMappingResultIndex++);\r\n                    }\r\n                    if (movedIndex === undefined) {\r\n                        mapData = lastMappingResult[lastMappingResultIndex];\r\n\r\n                        // Stop tracking changes to the mapping for these nodes\r\n                        if (mapData.dependentObservable) {\r\n                            mapData.dependentObservable.dispose();\r\n                            mapData.dependentObservable = undefined;\r\n                        }\r\n\r\n                        // Queue these nodes for later removal\r\n                        if (fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\r\n                            if (options['beforeRemove']) {\r\n                                newMappingResult.push(mapData);\r\n                                countWaitingForRemove++;\r\n                                if (mapData.arrayEntry === DELETED_ITEM_DUMMY_VALUE) {\r\n                                    mapData = null;\r\n                                } else {\r\n                                    itemsForBeforeRemoveCallbacks.push(mapData);\r\n                                }\r\n                            }\r\n                            if (mapData) {\r\n                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\r\n                            }\r\n                        }\r\n                    }\r\n                    lastMappingResultIndex++;\r\n                    break;\r\n\r\n                case \"added\":\r\n                    while (currentArrayIndex < itemIndex) {\r\n                        _itemMovedOrRetained(lastMappingResultIndex++);\r\n                    }\r\n                    if (movedIndex !== undefined) {\r\n                        itemsToMoveFirstIndexes.push(newMappingResult.length);\r\n                        _itemMovedOrRetained(movedIndex);\r\n                    } else {\r\n                        _itemAdded(editScriptItem['value']);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        while (currentArrayIndex < array.length) {\r\n            _itemMovedOrRetained(lastMappingResultIndex++);\r\n        }\r\n\r\n        // Record that the current view may still contain deleted items\r\n        // because it means we won't be able to use a provided editScript.\r\n        newMappingResult['_countWaitingForRemove'] = countWaitingForRemove;\r\n    }\r\n\r\n    // Store a copy of the array items we just considered so we can difference it next time\r\n    setDomData(domNode, LAST_MAPPING_RESULT_DOM_DATA_KEY, newMappingResult);\r\n\r\n    // Call beforeMove first before any changes have been made to the DOM\r\n    options.beforeMove && _callCallback(options.beforeMove, itemsForMoveCallbacks);\r\n\r\n    // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\r\n    // TODO modify so that removeNode() becomes an explicit invocation which can be inlined (removeNode = global macro)\r\n    //       check if the modification makes sense performance-wise though\r\n    nodesToDelete.forEach(options.beforeRemove ? cleanNode : removeNode);\r\n\r\n    let lastNode, \r\n        nodeToInsert, \r\n        mappedNodes;\r\n\r\n    // Since most browsers remove the focus from an element when it's moved to another location,\r\n    // save the focused element and try to restore it later.\r\n    let activeElement = domNode.ownerDocument.activeElement;\r\n\r\n    // Try to reduce overall moved nodes by first moving the ones that were marked as moved by the edit script\r\n    if (itemsToMoveFirstIndexes.length) {\r\n        let i;\r\n        while ((i = itemsToMoveFirstIndexes.shift()) !== undefined) {\r\n            mapData = newMappingResult[i];\r\n            for (lastNode = undefined; i;) {\r\n                if ((mappedNodes = newMappingResult[--i].mappedNodes) && mappedNodes.length) {\r\n                    lastNode = mappedNodes[mappedNodes.length - 1];\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; nodeToInsert = mapData.mappedNodes[j]; lastNode = nodeToInsert, j++) {\r\n                insertAfter(domNode, nodeToInsert, lastNode);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\r\n    for (let i = 0; mapData = newMappingResult[i]; i++) {\r\n        // Get nodes for newly added items\r\n        if (!mapData.mappedNodes) {\r\n            Object.assign(mapData, _mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\r\n        }\r\n\r\n        // Put nodes in the right place if they aren't there already\r\n        for (let j = 0; nodeToInsert = mapData.mappedNodes[j]; lastNode = nodeToInsert, j++) {\r\n            insertAfter(domNode, nodeToInsert, lastNode);\r\n        }\r\n\r\n        // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\r\n        if (!mapData.initialized && callbackAfterAddingNodes) {\r\n            callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\r\n            mapData.initialized = true;\r\n            lastNode = mapData.mappedNodes[mapData.mappedNodes.length - 1];     // get the last node again since it may have been changed by a preprocessor\r\n        }\r\n    }\r\n\r\n    // Restore the focused element if it had lost focus\r\n    if (activeElement && domNode.ownerDocument.activeElement !== activeElement) {\r\n        activeElement.focus();\r\n    }\r\n\r\n    // If there's a beforeRemove callback, call it after reordering.\r\n    // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\r\n    // some sort of animation, which is why we first reorder the nodes that will be removed. If the\r\n    // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\r\n    // Perhaps we'll make that change in the future if this scenario becomes more common.\r\n    options.beforeRemove && _callCallback(options.beforeRemove, itemsForBeforeRemoveCallbacks);\r\n\r\n    // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\r\n    // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\r\n    // with an actual item in the array and appear as \"retained\" or \"moved\".\r\n    for (let i = 0, len = itemsForBeforeRemoveCallbacks.length; i < len; ++i) {\r\n        itemsForBeforeRemoveCallbacks[i].arrayEntry = DELETED_ITEM_DUMMY_VALUE;\r\n    }\r\n\r\n    // Finally call afterMove and afterAdd callbacks\r\n    options.afterMove && _callCallback(options.afterMove, itemsForMoveCallbacks);\r\n    options.afterAdd &&  _callCallback(options.afterAdd, itemsForAfterAddCallbacks);\r\n};\r\n","import {getDomData, setDomData, nextDomDataKey} from '../utils.domData';\r\nimport {setHtml} from '../utils.domManipulation';\r\nimport {parseHtmlForTemplateNodes} from '../utils.domManipulation';\r\n\r\n// A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\r\n// logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\r\n//\r\n// Two are provided by default:\r\n//  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\r\n//  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\r\n//                                           without reading/writing the actual element text content, since it will be overwritten\r\n//                                           with the rendered template output.\r\n// You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\r\n// Template sources need to have the following functions:\r\n//   text()            - returns the template text from your storage location\r\n//   text(value)       - writes the supplied template text to your storage location\r\n//   data(key)         - reads values stored using data(key, value) - see below\r\n//   data(key, value)  - associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\r\n//\r\n// Optionally, template sources can also have the following functions:\r\n//   nodes()            - returns a DOM element containing the nodes of this template, where available\r\n//   nodes(value)       - writes the given DOM element to your storage location\r\n// If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\r\n// for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\r\n//\r\n// Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\r\n// using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\r\n\r\n// ---- ko.templateSources.domElement -----\r\n\r\n// template types\r\nconst TEMPLATE_SCRIPT = 1;\r\nconst TEMPLATE_TEXTAREA = 2;\r\nconst TEMPLATE_TEMPLATE = 3;\r\nconst TEMPLATE_ELEMENT = 4;\r\n\r\nconst DOM_DATA_KEY_PREFIX = nextDomDataKey() + '_';\r\nconst TEMPLATES_DOM_DATA_KEY = nextDomDataKey();\r\n\r\nconst SKIP_TEMPLATE_TYPE = Symbol();\r\n\r\nconst _getTemplateDomData = (element) => getDomData(element, TEMPLATES_DOM_DATA_KEY) || {}; //@inline\r\n\r\nexport class DomElementTemplate {\r\n    constructor(element /*, skipTemplateType */) {\r\n        this.domElement = element;\r\n\r\n        if (element && arguments[1] !== SKIP_TEMPLATE_TYPE) {\r\n            let tagNameLower = element.tagName && element.tagName.toLowerCase();\r\n            this.templateType = tagNameLower === 'script' ? TEMPLATE_SCRIPT :\r\n                                tagNameLower === 'textarea' ? TEMPLATE_TEXTAREA :\r\n                                // For browsers with proper <template> element support, where the .content property gives a document fragment\r\n                                tagNameLower === 'template' && element.content && element.content.nodeType === 11 ? TEMPLATE_TEMPLATE : TEMPLATE_ELEMENT;\r\n        }\r\n    }\r\n\r\n    text(/* valueToWrite */) {\r\n        let elemContentsProperty = this.templateType === TEMPLATE_SCRIPT ? 'text' : \r\n                                   this.templateType === TEMPLATE_TEXTAREA ? 'value' : 'innerHTML';\r\n\r\n        if (!arguments.length) {\r\n            return this.domElement[elemContentsProperty];\r\n        }\r\n        let valueToWrite = arguments[0];\r\n        if (elemContentsProperty === 'innerHTML') {\r\n            setHtml(this.domElement, valueToWrite);\r\n        } else {\r\n            this.domElement[elemContentsProperty] = valueToWrite;\r\n        }\r\n    }\r\n\r\n    data(key /*, valueToWrite */) {\r\n        if (arguments.length === 1) {\r\n            return getDomData(this.domElement, DOM_DATA_KEY_PREFIX + key);\r\n        } \r\n        setDomData(this.domElement, DOM_DATA_KEY_PREFIX + key, arguments[1]);\r\n    }\r\n\r\n    nodes(/* valueToWrite */) {\r\n        let element = this.domElement;\r\n        if (!arguments.length) {\r\n            let templateData = _getTemplateDomData(element),\r\n                nodes = templateData.containerData || (\r\n                        this.templateType === TEMPLATE_TEMPLATE ? element.content :\r\n                        this.templateType === TEMPLATE_ELEMENT ? element : undefined);\r\n            \r\n            if (!nodes || templateData.alwaysCheckText) {\r\n                // If the template is associated with an element that stores the template as text,\r\n                // parse and cache the nodes whenever there's new text content available. This allows\r\n                // the user to update the template content by updating the text of template node.\r\n                let text = this.text();\r\n                if (text && text !== templateData.textData) {\r\n                    nodes = parseHtmlForTemplateNodes(text, element.ownerDocument);\r\n                    setDomData(element, TEMPLATES_DOM_DATA_KEY, {containerData: nodes, textData: text, alwaysCheckText: true});\r\n                }\r\n            }\r\n            return nodes;\r\n        } \r\n    \r\n        let valueToWrite = arguments[0];\r\n        if (this.templateType !== undefined) {\r\n            this.text('');   // clear the text from the node\r\n        }\r\n        setDomData(element, TEMPLATES_DOM_DATA_KEY, {containerData: valueToWrite});\r\n    }\r\n}\r\n\r\n// ---- ko.templateSources.anonymousTemplate -----\r\n// Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\r\n// For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\r\n// Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\r\n\r\nexport class AnonymousTemplate extends DomElementTemplate {\r\n    constructor(element) {\r\n        super(element, SKIP_TEMPLATE_TYPE);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    text(/* valueToWrite */) {\r\n        if (!arguments.length) {\r\n            let templateData = _getTemplateDomData(this.domElement);\r\n            if (templateData.textData === undefined && templateData.containerData) {\r\n                templateData.textData = templateData.containerData.innerHTML;\r\n            }\r\n            return templateData.textData;\r\n        }\r\n        setDomData(this.domElement, TEMPLATES_DOM_DATA_KEY, {textData: arguments[0]});\r\n    }\r\n}\r\n","// If you want to make a custom template engine,\r\n//\r\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\r\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\r\n//\r\n//        function (templateSource, bindingContext, options) {\r\n//            // - templateSource.text() is the text of the template you should render\r\n//            // - bindingContext.$data is the data you should pass into the template\r\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\r\n//            //     and bindingContext.$root available in the template too\r\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\r\n//            // - templateDocument is the document object of the template\r\n//            //\r\n//            // Return value: an array of DOM nodes\r\n//        }\r\n//\r\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\r\n//\r\n//        function (script) {\r\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\r\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\r\n//        }\r\n//\r\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\r\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\r\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\r\n\r\nimport {AnonymousTemplate, DomElementTemplate} from './templateSources';\r\n\r\nexport class TemplateEngine {\r\n\r\n    constructor() {\r\n        this.allowTemplateRewriting = true;\r\n    }\r\n    \r\n    renderTemplateSource(templateSource, bindingContext, options, templateDocument) {\r\n        throw new Error(\"Override renderTemplateSource\");\r\n    }\r\n    \r\n    createJavaScriptEvaluatorBlock(script) {\r\n        throw new Error(\"Override createJavaScriptEvaluatorBlock\");\r\n    }\r\n\r\n    makeTemplateSource(template, templateDocument) {\r\n        if (typeof template === \"string\") {\r\n            // Named template\r\n            let elem = (templateDocument || document).getElementById(template);\r\n            if (elem) {\r\n                return new DomElementTemplate(elem);\r\n            }\r\n            throw new Error(\"Cannot find template with ID \" + template);\r\n        }\r\n        let nodeType = template.nodeType;\r\n        if (nodeType === 1 || nodeType === 8) {\r\n            // Anonymous template (from element or comment node)\r\n            return new AnonymousTemplate(template);\r\n        } \r\n        throw new Error(\"Unknown template type: \" + template);\r\n    }\r\n\r\n    renderTemplate(template, bindingContext, options, templateDocument) {\r\n        let templateSource = this.makeTemplateSource(template, templateDocument);\r\n        return this.renderTemplateSource(templateSource, bindingContext, options, templateDocument);\r\n    }\r\n\r\n    isTemplateRewritten(template, templateDocument) {\r\n        // Skip rewriting if requested\r\n        if (!this.allowTemplateRewriting) {\r\n            return true;\r\n        }\r\n        let templateSource = this.makeTemplateSource(template, templateDocument);\r\n        return templateSource.data('isRewritten');\r\n    }\r\n\r\n    rewriteTemplate(template, rewriterCallback, templateDocument) {\r\n        let templateSource = this.makeTemplateSource(template, templateDocument),\r\n            rewritten = rewriterCallback(templateSource.text());\r\n        templateSource.text(rewritten);\r\n        templateSource.data('isRewritten', true);\r\n    }\r\n}\r\n","import {nextSibling, setDomNodeChildren, emptyNode, childNodes, allowedBindings} from '../virtualElements';\r\nimport {unmemoizeDomNodeAndDescendants, _memoMap} from '../memoization';\r\nimport {fixUpContinuousNodeArray, replaceDomNodes, moveCleanedNodesToContainerElement} from '../utils';\r\nimport {ensureTemplateIsRewritten} from './templateRewriting';\r\nimport {isObservableArray, isObservable, unwrapObservable} from '../subscribables/observableUtils';\r\nimport {bindingRewriteValidators, keyValueArrayContainsKey} from '../binding/expressionRewriting';\r\nimport {applyBindings, bindingEvent, EVENT_CHILDREN_COMPLETE, KoBindingContext} from '../binding/bindingAttributeSyntax';\r\nimport {ignoreDependencyDetection} from '../subscribables/dependencyDetection';\r\nimport {setDomNodeChildrenFromArrayMapping} from '../binding/editDetection/arrayToDomNodeChildren';\r\nimport {getDomData, setDomData, nextDomDataKey} from '../utils.domData';\r\nimport {AnonymousTemplate} from './templateSources';\r\nimport {parseObjectLiteral} from '../binding/expressionRewriting';\r\nimport {TemplateEngine} from './templateEngine';\r\nimport {bindingHandlers} from '../binding/bindingHandlers';\r\nimport {memoize} from '../memoization';\r\nimport {options as koOptions} from '../options';\r\nimport {dependentObservable} from '../subscribables/dependentObservable';\r\nimport {bindingProviderInstance} from '../binding/bindingProvider';\r\nimport {peekObservableInternal} from '../subscribables/observable.js';\r\n\r\n\r\nlet _templateEngine;\r\n\r\nexport const setTemplateEngine = (templateEngine) => {\r\n    if (templateEngine && !(templateEngine instanceof TemplateEngine)) {\r\n        throw new Error('templateEngine must inherit from ko.templateEngine');\r\n    }\r\n    _templateEngine = templateEngine;\r\n};\r\n\r\nconst _invokeForEachNodeInContinuousRange = (firstNode, lastNode, action) => {\r\n    let node, \r\n        nextInQueue = firstNode, \r\n        firstOutOfRangeNode = nextSibling(lastNode);\r\n    \r\n    while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\r\n        nextInQueue = nextSibling(node);\r\n        action(node, nextInQueue);\r\n    }\r\n};\r\n\r\nconst _activateBindingsOnContinuousNodeArray = (continuousNodeArray, bindingContext) => {\r\n    // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\r\n    // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\r\n    // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\r\n    // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\r\n    // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\r\n\r\n    if (!continuousNodeArray.length) {\r\n        return;\r\n    }\r\n    \r\n    let firstNode = continuousNodeArray[0],\r\n        lastNode = continuousNodeArray[continuousNodeArray.length - 1],\r\n        parentNode = firstNode.parentNode;\r\n\r\n    if (bindingProviderInstance.preprocessNode) {\r\n        _invokeForEachNodeInContinuousRange(firstNode, lastNode, (node, nextNodeInRange) => {\r\n            let nodePreviousSibling = node.previousSibling,\r\n                newNodes = bindingProviderInstance.preprocessNode(node);\r\n            if (newNodes) {\r\n                if (node === firstNode) {\r\n                    firstNode = newNodes[0] || nextNodeInRange;\r\n                }\r\n                if (node === lastNode) {\r\n                    lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\r\n        // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\r\n        // first node needs to be in the array).\r\n        continuousNodeArray.length = 0;\r\n        if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\r\n            return;\r\n        }\r\n        if (firstNode === lastNode) {\r\n            continuousNodeArray[0] = firstNode;\r\n        } else {\r\n            continuousNodeArray.push(firstNode, lastNode);\r\n            fixUpContinuousNodeArray(continuousNodeArray, parentNode);\r\n        }\r\n    }\r\n\r\n    // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\r\n    // whereas a regular applyBindings won't introduce new memoized nodes\r\n    _invokeForEachNodeInContinuousRange(firstNode, lastNode, \r\n        (node) => (node.nodeType === 1 || node.nodeType === 8) && applyBindings(bindingContext, node)\r\n    );\r\n    \r\n    if (_memoMap.size) {\r\n        _invokeForEachNodeInContinuousRange(firstNode, lastNode,\r\n            (node) => (node.nodeType === 1 || node.nodeType === 8) && unmemoizeDomNodeAndDescendants(node, [bindingContext])\r\n        );\r\n    }\r\n\r\n    // Make sure any changes done by applyBindings or unmemoize are reflected in the array\r\n    fixUpContinuousNodeArray(continuousNodeArray, parentNode);\r\n};\r\n\r\n/**\r\n * @param {Node|Node[]} nodeOrNodes\r\n * @return {Node|null}\r\n */\r\nconst _getFirstNodeFromPossibleArray = (nodeOrNodes) => nodeOrNodes.nodeType ? nodeOrNodes : nodeOrNodes.length ? nodeOrNodes[0] : null; //@inline\r\n\r\nconst _executeTemplate = (targetNodeOrNodeArray, renderMode, template, bindingContext, options) => {\r\n    options = options || {};\r\n    let firstTargetNode = targetNodeOrNodeArray && _getFirstNodeFromPossibleArray(targetNodeOrNodeArray),\r\n        templateDocument = (firstTargetNode || template || {}).ownerDocument,\r\n        templateEngineToUse = (options.templateEngine || _templateEngine);\r\n    \r\n    ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\r\n    \r\n    let renderedNodesArray = templateEngineToUse.renderTemplate(template, bindingContext, options, templateDocument);\r\n\r\n    // Loosely check result is an array of DOM nodes\r\n    if (typeof renderedNodesArray.length !== 'number' || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType !== 'number')) {\r\n        throw new Error('Template engine must return an array of DOM nodes');\r\n    }\r\n\r\n    let haveAddedNodesToParent = false;\r\n    if (renderMode === 'replaceChildren') {\r\n        setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\r\n        haveAddedNodesToParent = true;\r\n    } else if (renderMode === 'replaceNode') {\r\n        replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\r\n        haveAddedNodesToParent = true;\r\n    } else if (renderMode !== 'ignoreTargetNode') {\r\n        throw new Error('Unknown renderMode: ' + renderMode);\r\n    }\r\n\r\n    if (haveAddedNodesToParent) {\r\n        _activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\r\n        if (options.afterRender) {\r\n            ignoreDependencyDetection(options.afterRender, null, [renderedNodesArray, bindingContext[options['as'] || '$data']]);\r\n        }\r\n        if (renderMode === 'replaceChildren') {\r\n            bindingEvent.notify(targetNodeOrNodeArray, EVENT_CHILDREN_COMPLETE);\r\n        }\r\n    }\r\n\r\n    return renderedNodesArray;\r\n};\r\n\r\n/**\r\n * @param {observable<string>|function|string} template\r\n * @param {*} data\r\n * @param {Object} context\r\n * @return {string}\r\n */\r\nconst _resolveTemplateName = (template, data, context) => //@inline\r\n                                isObservable(template) ? template() : (typeof template === 'function') ? template(data, context) : template; \r\n\r\nexport const renderTemplate = (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) => {\r\n    options = options || {};\r\n    if (!options.templateEngine && !_templateEngine) {\r\n        throw new Error('Set a template engine before calling renderTemplate');\r\n    }\r\n    renderMode = renderMode || 'replaceChildren';\r\n\r\n    if (targetNodeOrNodeArray) {\r\n        let firstTargetNode = _getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n\r\n        // So the DOM is automatically updated when any dependency changes\r\n        return dependentObservable(() => {\r\n                // Ensure we've got a proper binding context to work with\r\n                let bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof KoBindingContext))\r\n                    ? dataOrBindingContext\r\n                    : new KoBindingContext(dataOrBindingContext, null, null, null, {'exportDependencies': true});\r\n    \r\n                let templateName = _resolveTemplateName(template, bindingContext['$data'], bindingContext),\r\n                    renderedNodesArray = _executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\r\n    \r\n                if (renderMode === 'replaceNode') {\r\n                    targetNodeOrNodeArray = renderedNodesArray;\r\n                    firstTargetNode = _getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n                }\r\n            }, null, {\r\n                disposeWhen: () => !(firstTargetNode && firstTargetNode.isConnected), // Passive disposal (on next evaluation) \r\n                disposeWhenNodeIsRemoved: (firstTargetNode && renderMode === 'replaceNode') ? firstTargetNode.parentNode : firstTargetNode\r\n            });\r\n    } \r\n    // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\r\n    return memoize(domNode => renderTemplate(template, dataOrBindingContext, options, domNode, 'replaceNode'));\r\n};\r\n\r\nexport const renderTemplateForEach = (template, arrayOrObservableArray, options, targetNode, parentBindingContext) => {\r\n    // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\r\n    // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\r\n    let arrayItemContext, \r\n        asName = options.as;\r\n\r\n    // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\r\n    let executeTemplateForArrayItem = (arrayValue, index) => {\r\n        // Support selecting template as a function of the data being rendered\r\n        arrayItemContext = parentBindingContext.createChildContext(arrayValue, {\r\n            as: asName,\r\n            noChildContext: options.noChildContext,\r\n            extend(context) {\r\n                context['$index'] = index;\r\n                if (asName) {\r\n                    context[asName + 'Index'] = index;\r\n                }\r\n            }\r\n        });\r\n\r\n        let templateName = _resolveTemplateName(template, arrayValue, arrayItemContext);\r\n        return _executeTemplate(targetNode, 'ignoreTargetNode', templateName, arrayItemContext, options);\r\n    };\r\n\r\n    // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\r\n    let activateBindingsCallback = (arrayValue, addedNodesArray, index) => {\r\n            _activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\r\n            if (options.afterRender) {\r\n                options.afterRender(addedNodesArray, arrayValue);\r\n            }\r\n\r\n            // release the \"cache\" variable, so that it can be collected by\r\n            // the GC when its value isn't used from within the bindings anymore.\r\n            arrayItemContext = null;\r\n        };\r\n    \r\n    let _setDomNodeChildrenFromArrayMappingIgnoringUnwrapped = (newArray, changeList) => {\r\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\r\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\r\n            ignoreDependencyDetection(setDomNodeChildrenFromArrayMapping, null, [targetNode, newArray, executeTemplateForArrayItem, options, activateBindingsCallback, changeList]);\r\n            bindingEvent.notify(targetNode, EVENT_CHILDREN_COMPLETE);\r\n        };\r\n\r\n    let shouldHideDestroyed = (options.includeDestroyed === false) || (koOptions.foreachHidesDestroyed && !options.includeDestroyed);\r\n\r\n    if (!shouldHideDestroyed && !options.beforeRemove && isObservableArray(arrayOrObservableArray)) {\r\n        _setDomNodeChildrenFromArrayMappingIgnoringUnwrapped(peekObservableInternal(arrayOrObservableArray));\r\n\r\n        let subscription = arrayOrObservableArray.subscribe(changeList => _setDomNodeChildrenFromArrayMappingIgnoringUnwrapped(arrayOrObservableArray(), changeList), null, 'arrayChange');\r\n        subscription.disposeWhenNodeIsRemoved(targetNode);\r\n\r\n        return subscription;\r\n    } \r\n    \r\n    return dependentObservable(() => {\r\n        let unwrappedArray = unwrapObservable(arrayOrObservableArray) || [];\r\n        if (typeof unwrappedArray.length === 'undefined') { // Coerce single value into array\r\n            unwrappedArray = [unwrappedArray];\r\n        }\r\n\r\n        if (shouldHideDestroyed && unwrappedArray.length) {\r\n            // Filter out any entries marked as destroyed\r\n            unwrappedArray = unwrappedArray.filter(item => item === undefined || item === null || !unwrapObservable(item['_destroy'])); \r\n        }\r\n        _setDomNodeChildrenFromArrayMappingIgnoringUnwrapped(unwrappedArray);\r\n\r\n    }, null, {disposeWhenNodeIsRemoved: targetNode});\r\n};\r\n\r\nconst TEMPLATE_COMPUTED_DOM_DATA_KEY = nextDomDataKey();\r\n\r\nconst _disposeOldComputedAndStoreNewOne = (element, newComputed) => {\r\n    let oldComputed = getDomData(element, TEMPLATE_COMPUTED_DOM_DATA_KEY);\r\n    if (oldComputed && (typeof oldComputed.dispose === 'function')) {\r\n        oldComputed.dispose();\r\n    }\r\n    setDomData(element, TEMPLATE_COMPUTED_DOM_DATA_KEY, (newComputed && (!newComputed.isActive || newComputed.isActive())) ? newComputed : undefined);\r\n};\r\n\r\nconst CLEAN_CONTAINER_DOM_DATA_KEY = nextDomDataKey();\r\n\r\nbindingHandlers.template = {\r\n    init(element, valueAccessor) {\r\n        // Support anonymous templates\r\n        let bindingValue = unwrapObservable(valueAccessor());\r\n        if (typeof bindingValue === 'string' || 'name' in bindingValue) {\r\n            // It's a named template - clear the element\r\n            emptyNode(element);\r\n        } else if ('nodes' in bindingValue) {\r\n            // We've been given an array of DOM nodes. Save them as the template source.\r\n            // There is no known use case for the node array being an observable array (if the output\r\n            // varies, put that behavior *into* your template - that's what templates are for), and\r\n            // the implementation would be a mess, so assert that it's not observable.\r\n            let nodes = bindingValue['nodes'] || [];\r\n            if (isObservable(nodes)) {\r\n                throw new Error('The \"nodes\" option must be a plain, non-observable array.');\r\n            }\r\n\r\n            // If the nodes are already attached to a KO-generated container, we reuse that container without moving the\r\n            // elements to a new one (we check only the first node, as the nodes are always moved together)\r\n            let container = nodes[0] && nodes[0].parentNode;\r\n            if (!container || !getDomData(container, CLEAN_CONTAINER_DOM_DATA_KEY)) {\r\n                container = moveCleanedNodesToContainerElement(nodes);\r\n                setDomData(container, CLEAN_CONTAINER_DOM_DATA_KEY, true);\r\n            }\r\n\r\n            new AnonymousTemplate(element).nodes(container);\r\n        } else {\r\n            // It's an anonymous template - store the element contents, then clear the element\r\n            let templateNodes = childNodes(element);\r\n            if (templateNodes.length) {\r\n                let container = moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\r\n                new AnonymousTemplate(element).nodes(container);\r\n            } else {\r\n                throw new Error('Anonymous template defined, but no template content was provided');\r\n            }\r\n        }\r\n        return {controlsDescendantBindings: true};\r\n    },\r\n    update(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        let value = valueAccessor(),\r\n            options = unwrapObservable(value),\r\n            shouldDisplay = true,\r\n            templateComputed = null,\r\n            template;\r\n\r\n        if (typeof options === 'string') {\r\n            template = value;\r\n            options = {};\r\n        } else {\r\n            template = ('name' in options) ? options['name'] : element;\r\n\r\n            // Support \"if\"/\"ifnot\" conditions\r\n            if ('if' in options) {\r\n                shouldDisplay = unwrapObservable(options['if']);\r\n            }\r\n            if (shouldDisplay && 'ifnot' in options) {\r\n                shouldDisplay = !unwrapObservable(options['ifnot']);\r\n            }\r\n            // Don't show anything if an empty name is given (see #2446)\r\n            if (shouldDisplay && !template) {\r\n                shouldDisplay = false;\r\n            }\r\n        }\r\n\r\n        if ('foreach' in options) {\r\n            // Render once for each data point (treating data set as empty if shouldDisplay==false)\r\n            let dataArray = (shouldDisplay && options['foreach']) || [];\r\n            templateComputed = renderTemplateForEach(template, dataArray, options, element, bindingContext);\r\n        } else if (!shouldDisplay) {\r\n            emptyNode(element);\r\n        } else {\r\n            // Render once for this single data point (or use the viewModel if no data was provided)\r\n            let innerBindingContext = bindingContext;\r\n            if ('data' in options) {\r\n                innerBindingContext = bindingContext.createChildContext(options['data'], {\r\n                    'as': options['as'],\r\n                    'noChildContext': options['noChildContext'],\r\n                    'exportDependencies': true\r\n                });\r\n            }\r\n            templateComputed = renderTemplate(template, innerBindingContext, options, element);\r\n        }\r\n\r\n        // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\r\n        _disposeOldComputedAndStoreNewOne(element, templateComputed);\r\n    }\r\n};\r\n\r\n// Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\r\nbindingRewriteValidators.template = (bindingValue) => {\r\n    let parsedBindingValue = parseObjectLiteral(bindingValue);\r\n\r\n    if ((parsedBindingValue.length === 1) && parsedBindingValue[0].unknown) {\r\n        return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\r\n    }\r\n    if (keyValueArrayContainsKey(parsedBindingValue, 'name')) {\r\n        return null; // Named templates can be rewritten, so return \"no error\"\r\n    }\r\n    return 'This template engine does not support anonymous templates nested within its templates';\r\n};\r\n\r\nallowedBindings.template = true;\r\n","import {setTemplateEngine} from '../templating';\r\nimport {TemplateEngine} from '../templateEngine';\r\nimport {parseHtmlFragment} from '../../utils.domManipulation';\r\n\r\nexport class NativeTemplateEngine extends TemplateEngine {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.allowTemplateRewriting = false;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    renderTemplateSource(templateSource, bindingContext, options, templateDocument) {\r\n        let templateNode = templateSource.nodes();\r\n        \r\n        if (templateNode) {\r\n            // Use-case \"single-child templateNode\" is very frequent, so deserves a faster treatment\r\n            // Array.from is 35% slower than spread in Chrome 79; \r\n            // Spread is 25% slower than copy-by-for-loop, but more readable\r\n            return (templateNode.childNodes.length === 1) ? [templateNode.firstChild.cloneNode(true)]\r\n                                                          : [...templateNode.cloneNode(true).childNodes];\r\n        }\r\n        let templateText = templateSource.text();\r\n        return parseHtmlFragment(templateText, templateDocument);\r\n    }\r\n}\r\n\r\nsetTemplateEngine(NativeTemplateEngine.instance = new NativeTemplateEngine());\r\n","import {pureComputed} from './dependentObservable';\r\n\r\nexport const when = (predicate, callback, context) => {\r\n\r\n    const _kowhen = (resolve) => {\r\n        let _observable = pureComputed(predicate, context).extend({notify:'always'});\r\n        let subscription = _observable.subscribe(value => {\r\n            if (value) {\r\n                subscription.dispose();\r\n                resolve(value);\r\n            }\r\n        });\r\n        // In case the initial value is true, process it right away\r\n        _observable.notifySubscribers(_observable.peek());\r\n\r\n        return subscription;\r\n    };\r\n\r\n    return callback ? _kowhen(context ? callback.bind(context) : callback) : new Promise(_kowhen);\r\n};\r\n","import {bindingHandlers} from '../bindingHandlers';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nbindingHandlers.attr = {\r\n    update(element, valueAccessor, allBindings) {\r\n        let value = unwrapObservable(valueAccessor()) || {};\r\n        for (let attrName of Object.keys(value)) {\r\n            let attrValue = unwrapObservable(value[attrName]);\r\n\r\n            // Find the namespace of this attribute, if any.\r\n            let prefixLen = attrName.indexOf(':');\r\n            let namespace = prefixLen > 0 && element.lookupNamespaceURI && element.lookupNamespaceURI(attrName.substring(0, prefixLen));\r\n\r\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\r\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\r\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\r\n            let toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\r\n            if (toRemove) {\r\n                namespace ? element.removeAttributeNS(namespace, attrName) : element.removeAttribute(attrName);\r\n            } else {\r\n                attrValue = attrValue.toString();\r\n                namespace ? element.setAttributeNS(namespace, attrName, attrValue) : element.setAttribute(attrName, attrValue);\r\n            }\r\n            \r\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\r\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\r\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\r\n            // entirely, and there's no strong reason to allow for such casing in HTML.\r\n            if (attrName === 'name') {\r\n                element.name = toRemove ? '' : attrValue;\r\n            }\r\n        }\r\n    }\r\n};\r\n","import {\r\n    isInitialDependency,\r\n    getDependenciesCount,\r\n    ignoreDependencyDetectionNoArgs\r\n} from '../../subscribables/dependencyDetection';\r\nimport {writeValueToProperty, twoWayBindings} from '../expressionRewriting';\r\nimport {registerEventHandler, addOrRemoveItem} from '../../utils';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\nimport {computed, pureComputed} from '../../subscribables/dependentObservable';\r\nimport {isWritableObservable, unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nbindingHandlers.checked = {\r\n    after: ['value', 'attr'],\r\n    init(element, valueAccessor, allBindings) {\r\n        let checkedValue = pureComputed(() => {\r\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\r\n            if (allBindings.has('checkedValue')) {\r\n                return unwrapObservable(allBindings.get('checkedValue'));\r\n            } \r\n            if (useElementValue) {\r\n                return allBindings.has('value') ? unwrapObservable(allBindings.get('value')) : element.value;\r\n            }\r\n        });\r\n\r\n        const _updateModel = () => {\r\n            // This updates the model value from the view value.\r\n            // It runs in response to DOM events (click) and changes in checkedValue.\r\n            let isChecked = element.checked,\r\n                elemValue = checkedValue();\r\n\r\n            // When we're first setting up this computed, don't change any model state.\r\n            if (isInitialDependency()) {\r\n                return;\r\n            }\r\n\r\n            // We can ignore unchecked radio buttons, because some other radio\r\n            // button will be checked, and that one can take care of updating state.\r\n            // Also ignore value changes to an already unchecked checkbox.\r\n            if (!isChecked && (isRadio || getDependenciesCount())) {\r\n                return;\r\n            }\r\n\r\n            let modelValue = ignoreDependencyDetectionNoArgs(valueAccessor);\r\n            if (valueIsArray) {\r\n                let writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue,\r\n                    saveOldValue = oldElemValue;\r\n                \r\n                oldElemValue = elemValue;\r\n\r\n                if (saveOldValue !== elemValue) {\r\n                    // When we're responding to the checkedValue changing, and the element is\r\n                    // currently checked, replace the old elem value with the new elem value\r\n                    // in the model array.\r\n                    if (isChecked) {\r\n                        addOrRemoveItem(writableValue, elemValue, true);\r\n                        addOrRemoveItem(writableValue, saveOldValue, false);\r\n                    }\r\n                } else {\r\n                    // When we're responding to the user having checked/unchecked a checkbox,\r\n                    // add/remove the element value to the model array.\r\n                    addOrRemoveItem(writableValue, elemValue, isChecked);\r\n                }\r\n\r\n                if (rawValueIsNonArrayObservable && isWritableObservable(modelValue)) {\r\n                    modelValue(writableValue);\r\n                }\r\n            } else {\r\n                if (isCheckbox) {\r\n                    if (elemValue === undefined) {\r\n                        elemValue = isChecked;\r\n                    } else if (!isChecked) {\r\n                        elemValue = undefined;\r\n                    }\r\n                }\r\n                writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\r\n            }\r\n        };\r\n\r\n        const _updateView = () => {\r\n            // This updates the view value from the model value.\r\n            // It runs in response to changes in the bound (checked) value.\r\n            let modelValue = unwrapObservable(valueAccessor()),\r\n                elemValue = checkedValue();\r\n\r\n            if (valueIsArray) {\r\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\r\n                element.checked = modelValue.includes(elemValue);\r\n                oldElemValue = elemValue;\r\n            } else if (isCheckbox && elemValue === undefined) {\r\n                // When a checkbox is bound to any other value (not an array) and \"checkedValue\" is not defined,\r\n                // being checked represents the value being trueish\r\n                element.checked = !!modelValue;\r\n            } else {\r\n                // Otherwise, being checked means that the checkbox or radio button's value corresponds to the model value\r\n                element.checked = (checkedValue() === modelValue);\r\n            }\r\n        };\r\n\r\n        let isCheckbox = element.type === 'checkbox',\r\n            isRadio = element.type === 'radio';\r\n\r\n        // Only bind to check boxes and radio buttons\r\n        if (!isCheckbox && !isRadio) {\r\n            return;\r\n        }\r\n\r\n        let rawValue = valueAccessor(),\r\n            valueIsArray = isCheckbox && Array.isArray(unwrapObservable(rawValue)),\r\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\r\n            useElementValue = isRadio || valueIsArray,\r\n            oldElemValue = valueIsArray ? checkedValue() : undefined;\r\n\r\n        // Set up two computeds to update the binding:\r\n\r\n        // The first responds to changes in the checkedValue value and to element clicks\r\n        computed(_updateModel, null, {disposeWhenNodeIsRemoved: element});\r\n        registerEventHandler(element, \"click\", _updateModel);\r\n\r\n        // The second responds to changes in the model value (the one associated with the checked binding)\r\n        computed(_updateView, null, {disposeWhenNodeIsRemoved: element});\r\n\r\n        rawValue = undefined;\r\n    }\r\n};\r\n\r\ntwoWayBindings['checked'] = true;\r\n\r\nbindingHandlers.checkedValue = {\r\n    update(element, valueAccessor) {\r\n        element.value = unwrapObservable(valueAccessor());\r\n    }\r\n};\r\n","import {bindingHandlers} from '../bindingHandlers';\r\n\r\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\r\n// e.g. click:handler instead of the usual full-length event:{click:handler}\r\nimport {registerEventHandler} from '../../utils';\r\n\r\nexport const _makeEventHandlerShortcut = (eventName) => {\r\n    bindingHandlers[eventName] = {\r\n        init (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            let newValueAccessor = () => ({[eventName]: valueAccessor()});\r\n            return _eventBindingInitFn(element, newValueAccessor, allBindings, viewModel, bindingContext);\r\n        }\r\n    };\r\n};\r\n\r\nconst _eventBindingInitFn = (element, valueAccessor, allBindings, viewModel, bindingContext) => {\r\n    let eventsToHandle = valueAccessor() || {};\r\n    if (!eventsToHandle) {\r\n        return;\r\n    }\r\n    for (let eventName of Object.keys(eventsToHandle)) {\r\n        if (typeof eventName !== 'string') {\r\n            continue;\r\n        }\r\n        registerEventHandler(element, eventName, (event, ...otherArgs) => {\r\n            let handlerReturnValue,\r\n                handlerFunction = valueAccessor()[eventName];\r\n            \r\n            if (!handlerFunction) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                // Take all the event args, and prefix with the viewmodel\r\n                let viewModel = bindingContext['$data'];\r\n                // call the event handler with like handler(viewModel, event, ...otherArgs);\r\n                handlerReturnValue = handlerFunction.call(viewModel, viewModel, event, ...otherArgs);\r\n            } finally {\r\n                if (handlerReturnValue !== true) { \r\n                    // Normally we want to prevent default action. Developer can override this be explicitly returning true.\r\n                    event.preventDefault();\r\n                    // removed historic 'event.returnValue = false'\r\n                }\r\n            }\r\n\r\n            let bubble = allBindings.get(eventName + 'Bubble') !== false;\r\n            if (!bubble) {\r\n                event.stopPropagation();\r\n                // removed historic 'event.cancelBubble = true'\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nbindingHandlers.event = {\r\n    init: _eventBindingInitFn\r\n};\r\n","// 'click' is just a shorthand for the usual full-length event:{click:handler}\r\nimport {_makeEventHandlerShortcut} from './event';\r\n\r\n_makeEventHandlerShortcut('click');\r\n","import {bindingHandlers} from '../bindingHandlers';\r\nimport {stringTrim, toggleDomNodeCssClass} from '../../utils';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nconst CLASSES_WRITTEN_BY_BINDING_KEY = Symbol('__ko__cssValue');\r\n\r\nconst _classBindingUpdateFn = (element, valueAccessor) => {\r\n    let value = stringTrim(unwrapObservable(valueAccessor()));\r\n    toggleDomNodeCssClass(element, element[CLASSES_WRITTEN_BY_BINDING_KEY], false);\r\n    element[CLASSES_WRITTEN_BY_BINDING_KEY] = value;\r\n    toggleDomNodeCssClass(element, value, true);\r\n};\r\n\r\nbindingHandlers.class = { \r\n    update: _classBindingUpdateFn\r\n};\r\n\r\nbindingHandlers.css = {\r\n    update(element, valueAccessor) {\r\n        let value = unwrapObservable(valueAccessor());\r\n        if (!value || typeof value !== 'object') {\r\n            _classBindingUpdateFn(element, valueAccessor);\r\n            return;\r\n        }\r\n        for (let className of Object.keys(value)) {\r\n            let shouldHaveClass = unwrapObservable( value[className] );\r\n            toggleDomNodeCssClass(element, className, shouldHaveClass);\r\n        }\r\n    }\r\n};\r\n","import {bindingHandlers} from '../bindingHandlers';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nconst _enableBindingUpdateFn = (element, valueAccessor) => {\r\n    let value = unwrapObservable(valueAccessor());\r\n    if (value && element.disabled) {\r\n        element.removeAttribute(\"disabled\");\r\n    } else if ((!value) && (!element.disabled)) {\r\n        element.disabled = true;\r\n    }\r\n};\r\n\r\nbindingHandlers.enable = {\r\n    update: _enableBindingUpdateFn\r\n};\r\n\r\nbindingHandlers.disable = {\r\n    update(element, valueAccessor) {\r\n        _enableBindingUpdateFn(element, () => !unwrapObservable(valueAccessor()));\r\n    }\r\n};\r\n","import {bindingRewriteValidators} from '../expressionRewriting';\r\nimport {isObservable, unwrapObservable} from '../../subscribables/observableUtils';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\nimport {NativeTemplateEngine} from '../../templating/native/nativeTemplateEngine';\r\nimport {allowedVirtualElementBindings} from '../../virtualElements';\r\n\r\nconst _foreachBindingMakeTemplateValueAccessor = (valueAccessor) => () => {\r\n    let modelValue = valueAccessor(),\r\n        // Unwrap without setting a dependency here\r\n        unwrappedValue = isObservable(modelValue) ? modelValue.peek() : modelValue;\r\n    \r\n    // If unwrappedValue is the array, pass in the wrapped value on its own\r\n    // The value will be unwrapped and tracked within the template binding\r\n    // (See https://github.com/SteveSanderson/knockout/issues/523)\r\n    if (!unwrappedValue || typeof unwrappedValue.length === 'number') {\r\n        return {\r\n            foreach: modelValue, \r\n            templateEngine: NativeTemplateEngine.instance\r\n        };\r\n    }\r\n\r\n    // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\r\n    unwrapObservable(modelValue);\r\n    return {\r\n        foreach: unwrappedValue.data,\r\n        as: unwrappedValue.as,\r\n        noChildContext: unwrappedValue.noChildContext,\r\n        includeDestroyed: unwrappedValue.includeDestroyed,\r\n        afterAdd: unwrappedValue.afterAdd,\r\n        beforeRemove: unwrappedValue.beforeRemove,\r\n        afterRender: unwrappedValue.afterRender,\r\n        beforeMove: unwrappedValue.beforeMove,\r\n        afterMove: unwrappedValue.afterMove,\r\n        templateEngine: NativeTemplateEngine.instance\r\n    };\r\n};\r\n\r\n\r\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\r\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\r\n\r\nbindingHandlers.foreach = {\r\n    makeTemplateValueAccessor: _foreachBindingMakeTemplateValueAccessor,\r\n    init(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        return bindingHandlers.template.init(element, _foreachBindingMakeTemplateValueAccessor(valueAccessor));\r\n    },\r\n    update(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        return bindingHandlers.template.update(element, _foreachBindingMakeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\r\n    }\r\n};\r\n\r\nbindingRewriteValidators.foreach = false; // Can't rewrite control flow bindings\r\nallowedVirtualElementBindings.foreach = true;\r\n","import {writeValueToProperty, twoWayBindings} from '../expressionRewriting';\r\nimport {registerEventHandler, triggerEvent} from '../../utils';\r\nimport {ignoreDependencyDetection} from '../../subscribables/dependencyDetection';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nconst HAS_FOCUS_UPDATING_PROPERTY = Symbol('ko_hasfocusUpdating');\r\nconst HAS_FOCUS_LAST_VALUE = Symbol('ko_hasfocusLastValue');\r\n\r\nbindingHandlers.hasfocus = bindingHandlers.hasFocus = {\r\n    init(element, valueAccessor, allBindings) {\r\n        let _handleElementFocusChange = (isFocused) => {\r\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\r\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\r\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\r\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\r\n            // from calling 'blur()' on the element when it loses focus.\r\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\r\n            element[HAS_FOCUS_UPDATING_PROPERTY] = true;\r\n            let ownerDoc = element.ownerDocument;\r\n            if (ownerDoc.activeElement) {\r\n                isFocused = (ownerDoc.activeElement === element);\r\n            }\r\n            let modelValue = valueAccessor();\r\n            writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\r\n\r\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\r\n            element[HAS_FOCUS_LAST_VALUE] = isFocused;\r\n            element[HAS_FOCUS_UPDATING_PROPERTY] = false;\r\n        };\r\n        let handleElementFocusIn = _handleElementFocusChange.bind(null, true);\r\n        let handleElementFocusOut = _handleElementFocusChange.bind(null, false);\r\n\r\n        registerEventHandler(element, \"focus\", handleElementFocusIn);\r\n        registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\r\n        registerEventHandler(element, \"blur\",  handleElementFocusOut);\r\n        registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\r\n\r\n        // Assume element is not focused (prevents \"blur\" being called initially)\r\n        element[HAS_FOCUS_LAST_VALUE] = false;\r\n    },\r\n    update(element, valueAccessor) {\r\n        let value = !!unwrapObservable(valueAccessor());\r\n\r\n        if (!element[HAS_FOCUS_UPDATING_PROPERTY] && element[HAS_FOCUS_LAST_VALUE] !== value) {\r\n            value ? element.focus() : element.blur();\r\n\r\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\r\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\r\n            // element was focused already.\r\n            if (!value && element[HAS_FOCUS_LAST_VALUE]) {\r\n                element.ownerDocument.body.focus();\r\n            }\r\n\r\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\r\n            // TODO check if this is still required for Edge+ \r\n            ignoreDependencyDetection(triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\r\n        }\r\n    }\r\n};\r\n\r\ntwoWayBindings.hasfocus = true;\r\ntwoWayBindings.hasFocus = 'hasfocus';\r\n","import {setHtml} from '../../utils.domManipulation';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\n\r\n\r\nbindingHandlers.html = {\r\n    // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\r\n    init: () => ({controlsDescendantBindings: true}),\r\n    update(element, valueAccessor) {\r\n        // setHtml will unwrap the value if needed\r\n        setHtml(element, valueAccessor());\r\n    }\r\n};\r\n","import {getCurrentComputed, getDependenciesCount} from '../../subscribables/dependencyDetection';\r\nimport {bindingRewriteValidators} from '../expressionRewriting';\r\nimport {cloneNodes} from '../../utils';\r\nimport {childNodes, setDomNodeChildren, allowedVirtualElementBindings, emptyNode} from '../../virtualElements';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\nimport {\r\n    EVENT_CHILDREN_COMPLETE,\r\n    EVENT_DESCENDENTS_COMPLETE,\r\n    bindingEvent,\r\n    applyBindingsToDescendants\r\n} from '../bindingAttributeSyntax';\r\nimport {computed} from '../../subscribables/dependentObservable';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nconst {startPossiblyAsyncContentBinding, notify} = bindingEvent;\r\n\r\n// Makes a binding like with or if\r\nconst _makeWithIfBinding = (bindingKey, isWith, isNot) => {\r\n    \r\n    bindingHandlers[bindingKey] = {\r\n        init(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            let didDisplayOnLastUpdate, \r\n                savedNodes, \r\n                contextOptions = {}, \r\n                completeOnRender, \r\n                needAsyncContext,\r\n                renderOnEveryChange;\r\n\r\n            if (isWith) {\r\n                let as = allBindings.get('as'), \r\n                    noChildContext = allBindings.get('noChildContext');\r\n                \r\n                renderOnEveryChange = !(as && noChildContext);\r\n                contextOptions = {\r\n                    as,\r\n                    noChildContext,\r\n                    exportDependencies: renderOnEveryChange\r\n                };\r\n            }\r\n\r\n            completeOnRender = allBindings.get('completeOn') === 'render';\r\n            needAsyncContext = completeOnRender || allBindings.has(EVENT_DESCENDENTS_COMPLETE);\r\n\r\n            computed(() => {\r\n                let value = unwrapObservable(valueAccessor()),\r\n                    shouldDisplay = isNot ? !value : !!value,\r\n                    isInitial = !savedNodes,\r\n                    childContext;\r\n\r\n                if (!renderOnEveryChange && shouldDisplay === didDisplayOnLastUpdate) {\r\n                    return;\r\n                }\r\n\r\n                if (needAsyncContext) {\r\n                    bindingContext = startPossiblyAsyncContentBinding(element, bindingContext);\r\n                }\r\n\r\n                if (shouldDisplay) {\r\n                    if (!isWith || renderOnEveryChange) {\r\n                        contextOptions['dataDependency'] = getCurrentComputed();\r\n                    }\r\n\r\n                    if (isWith) {\r\n                        childContext = bindingContext.createChildContext(typeof value === 'function' ? value : valueAccessor, contextOptions);\r\n                    } else if (getDependenciesCount()) {\r\n                        childContext = bindingContext.extend(null, contextOptions);\r\n                    } else {\r\n                        childContext = bindingContext;\r\n                    }\r\n                }\r\n\r\n                // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\r\n                if (isInitial && getDependenciesCount()) {\r\n                    savedNodes = cloneNodes(childNodes(element), true /* shouldCleanNodes */);\r\n                }\r\n\r\n                if (shouldDisplay) {\r\n                    if (!isInitial) {\r\n                        setDomNodeChildren(element, cloneNodes(savedNodes));\r\n                    }\r\n\r\n                    applyBindingsToDescendants(childContext, element);\r\n                } else {\r\n                    emptyNode(element);\r\n\r\n                    if (!completeOnRender) {\r\n                        notify(element, EVENT_CHILDREN_COMPLETE);\r\n                    }\r\n                }\r\n\r\n                didDisplayOnLastUpdate = shouldDisplay;\r\n\r\n            }, null, {disposeWhenNodeIsRemoved: element});\r\n\r\n            return {controlsDescendantBindings: true};\r\n        }\r\n    };\r\n    bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\r\n    allowedVirtualElementBindings[bindingKey] = true;\r\n};\r\n\r\n// Construct the actual binding handlers\r\n_makeWithIfBinding('if');\r\n_makeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\r\n_makeWithIfBinding('with', true /* isWith */);\r\n","import {applyBindingsToDescendants} from '../bindingAttributeSyntax';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\nimport {allowedVirtualElementBindings} from '../../virtualElements';\r\n\r\nbindingHandlers.let = {\r\n    init(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        // Make a modified binding context, with extra properties, and apply it to descendant elements\r\n        let innerContext = bindingContext.extend(valueAccessor);\r\n        applyBindingsToDescendants(innerContext, element);\r\n\r\n        return {controlsDescendantBindings: true};\r\n    }\r\n};\r\n\r\nallowedVirtualElementBindings.let = true;\r\n","import {getDomData, setDomData, nextDomDataKey} from '../utils.domData';\r\n\r\nconst HAS_DOM_DATA_EXPANDO_PROPERTY = Symbol('ko_hasDomDataOptionValue');\r\n\r\nconst OPTION_VALUE_DOM_DATA_KEY = nextDomDataKey();\r\n\r\n\r\nexport const readSelectOrOptionValue = (element) => {\r\n    switch (element.tagName.toLowerCase()) {\r\n        case 'option':\r\n            return element[HAS_DOM_DATA_EXPANDO_PROPERTY] ? getDomData(element, OPTION_VALUE_DOM_DATA_KEY) : element.value;\r\n        case 'select': {\r\n            let selectedIndex = element.selectedIndex;\r\n            return selectedIndex >= 0 ? readSelectOrOptionValue(element.options[selectedIndex]) : undefined;\r\n        }\r\n    }\r\n    return element.value;\r\n};\r\n\r\n// Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\r\n// are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\r\n// that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\r\nexport const writeSelectOrOptionValue = (element, value, allowUnset) => {\r\n    let tagNameLower = element.tagName.toLowerCase();\r\n    if (tagNameLower === 'option') {\r\n        let valueType = typeof value;\r\n        if (valueType === 'string') {\r\n            setDomData(element, OPTION_VALUE_DOM_DATA_KEY, undefined);\r\n            // just set undefined instead of 'delete' since delete is 50x slower in Chrome 80\r\n            element[HAS_DOM_DATA_EXPANDO_PROPERTY] = undefined;\r\n            element.value = value;\r\n        } else {\r\n            // Store arbitrary object using DomData\r\n            setDomData(element, OPTION_VALUE_DOM_DATA_KEY, value);\r\n            element[HAS_DOM_DATA_EXPANDO_PROPERTY] = true;\r\n\r\n            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\r\n            element.value = (valueType === 'number') ? value : '';\r\n        }\r\n        return;\r\n    }\r\n    if (tagNameLower === 'select') {\r\n        if (value === '' || value === null) {       // A blank string or null value will select the caption\r\n            value = undefined;\r\n        }\r\n        let selection = -1;\r\n        for (let i = 0, n = element.options.length, optionValue; i < n; ++i) {\r\n            optionValue = readSelectOrOptionValue(element.options[i]);\r\n            // Include special check to handle selecting a caption with a blank string value\r\n            if (optionValue === value || (optionValue === '' && value === undefined)) {\r\n                selection = i;\r\n                break;\r\n            }\r\n        }\r\n        if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\r\n            element.selectedIndex = selection;\r\n        }\r\n        return;\r\n    }\r\n    element.value = (value === null || value === undefined) ? '' : value;\r\n};\r\n","import {isInitialDependency, ignoreDependencyDetection} from '../../subscribables/dependencyDetection';\r\nimport {EVENT_CHILDREN_COMPLETE, bindingEvent} from '../bindingAttributeSyntax';\r\nimport {setDomNodeChildrenFromArrayMapping} from '../editDetection/arrayToDomNodeChildren';\r\nimport {readSelectOrOptionValue, writeSelectOrOptionValue} from '../selectExtensions';\r\nimport {setOptionNodeSelectionState, triggerEvent} from '../../utils';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nconst CAPTION_PLACEHOLDER = Symbol();\r\n\r\nconst _unwrapBindingForOption = (binding, propertyHolder, defaultValue) => {\r\n    let bindingType = typeof binding,\r\n        value = (bindingType === 'function') ? binding(propertyHolder) :\r\n            (bindingType === 'string') ? propertyHolder[binding] : defaultValue,\r\n        needsUnwrap = typeof value === 'function';\r\n\r\n    // values are mostly NOT observable themselves, so let's save some useless unwrap calls\r\n    return needsUnwrap ? unwrapObservable(value) : value;\r\n};\r\n\r\nbindingHandlers.options = {\r\n    /**\r\n     * @param {HTMLSelectElement} element\r\n     */\r\n    init(element) {\r\n        if (element.tagName.toLowerCase() !== 'select') {\r\n            throw new Error(\"options binding applies only to SELECT elements\");\r\n        }\r\n\r\n        // Remove all existing <option>s.\r\n        while (element.length > 0) {\r\n            element.remove(0);\r\n        }\r\n\r\n        // Ensures that the binding processor doesn't try to bind the options\r\n        return {controlsDescendantBindings: true};\r\n    },\r\n    /**\r\n     * @param {HTMLSelectElement} element\r\n     * @param {function} valueAccessor\r\n     */\r\n    update(element, valueAccessor, allBindings) {\r\n        const _getSelectedOptions = (optionalMappingFn) => {\r\n            let result = [],\r\n                nextResultIndex = 0;\r\n            for (let option of element.options) {\r\n                if (option.selected) {\r\n                    result[nextResultIndex++] = optionalMappingFn ? optionalMappingFn(option) : option;\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        \r\n        let selectWasPreviouslyEmpty = element.length === 0,\r\n            multiple = element.multiple,\r\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\r\n            unwrappedArray = unwrapObservable(valueAccessor()),\r\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings.has('value'),\r\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\r\n            arrayToDomNodeChildrenOptions = {},\r\n            captionValue,\r\n            filteredArray,\r\n            previousSelectedValues = [];\r\n\r\n        if (!valueAllowUnset) {\r\n            if (multiple) {\r\n                previousSelectedValues = _getSelectedOptions(readSelectOrOptionValue);\r\n            } else if (element.selectedIndex >= 0) {\r\n                previousSelectedValues.push(readSelectOrOptionValue(element.options[element.selectedIndex]));\r\n            }\r\n        } \r\n        \r\n        if (unwrappedArray) {\r\n            if (typeof unwrappedArray.length === 'undefined') {// Coerce single value into array\r\n                unwrappedArray = [unwrappedArray];\r\n            }\r\n\r\n            // Filter out any entries marked as destroyed\r\n            filteredArray = unwrappedArray.filter(item => includeDestroyed || item === undefined || item === null || !unwrapObservable(item['_destroy']));\r\n\r\n            // If caption is included, add it to the array\r\n            if (allBindings.has('optionsCaption')) {\r\n                captionValue = unwrapObservable(allBindings.get('optionsCaption'));\r\n                // If caption value is null or undefined, don't show a caption\r\n                if (captionValue !== null && captionValue !== undefined) {\r\n                    filteredArray.unshift(CAPTION_PLACEHOLDER);\r\n                }\r\n            }\r\n        } else {\r\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\r\n        }\r\n\r\n        // The following functions can run at two different times:\r\n        // The first is when the whole array is being updated directly from this binding handler.\r\n        // The second is when an observable value for a specific array entry is updated.\r\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\r\n        let itemUpdate = false;\r\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\r\n            if (oldOptions.length) {\r\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [readSelectOrOptionValue(oldOptions[0])] : [];\r\n                itemUpdate = true;\r\n            }\r\n            let option = element.ownerDocument.createElement(\"option\");\r\n            if (arrayEntry === CAPTION_PLACEHOLDER) {\r\n                let captionText = unwrapObservable(allBindings.get('optionsCaption'));\r\n                // we have a fresh option element, so let's not use ko.utils.setTextContent\r\n                option.textContent = (captionText === null || captionText === undefined) ? '' : captionText;\r\n                writeSelectOrOptionValue(option, undefined);\r\n            } else {\r\n                // Apply a value to the option element\r\n                let optionValue = _unwrapBindingForOption(allBindings.get('optionsValue'), arrayEntry, arrayEntry);\r\n                writeSelectOrOptionValue(option, optionValue);\r\n\r\n                // Apply some text to the option element\r\n                let optionText = _unwrapBindingForOption(allBindings.get('optionsText'), arrayEntry, optionValue);\r\n                // we have a fresh option element, so let's not use ko.utils.setTextContent\r\n                option.textContent = (optionText === null || optionText === undefined) ? '' : optionText;\r\n            }\r\n            return [option];\r\n        }\r\n\r\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\r\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\r\n        arrayToDomNodeChildrenOptions.beforeRemove = option => element.removeChild(option);\r\n\r\n        const _setSelectionCallback = (arrayEntry, newOptions) => {\r\n            if (itemUpdate && valueAllowUnset) {\r\n                // The model value is authoritative, so make sure its value is the one selected\r\n                bindingEvent.notify(element, EVENT_CHILDREN_COMPLETE);\r\n            } else if (previousSelectedValues.length) {\r\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\r\n                // That's why we first added them without selection. Now it's time to set the selection.\r\n                let isSelected = previousSelectedValues.includes(readSelectOrOptionValue(newOptions[0]));\r\n                setOptionNodeSelectionState(newOptions[0], isSelected);\r\n\r\n                // If this option was changed from being selected during a single-item update, notify the change\r\n                if (itemUpdate && !isSelected) {\r\n                    ignoreDependencyDetection(triggerEvent, null, [element, \"change\"]);\r\n                }\r\n            }\r\n        };\r\n\r\n        let _optionsAfterRender = allBindings.get('optionsAfterRender'),\r\n            callback = (typeof _optionsAfterRender !== 'function') ? _setSelectionCallback : (arrayEntry, newOptions) => {\r\n                _setSelectionCallback(arrayEntry, newOptions);\r\n                ignoreDependencyDetection(_optionsAfterRender, null, [newOptions[0], arrayEntry !== CAPTION_PLACEHOLDER ? arrayEntry : undefined]);\r\n            };\r\n\r\n        setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\r\n\r\n        if (!valueAllowUnset) {\r\n            // Determine if the selection has changed as a result of updating the options list\r\n            let selectionChanged;\r\n            if (multiple) {\r\n                // For a multiple-select box, compare the new selection count to the previous one\r\n                // But if nothing was selected before, the selection can't have changed\r\n                selectionChanged = previousSelectedValues.length && _getSelectedOptions().length < previousSelectedValues.length;\r\n            } else {\r\n                // For a single-select box, compare the current value to the previous value\r\n                // But if nothing was selected before or nothing is selected now, just look for a change in selection\r\n                selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\r\n                    ? (readSelectOrOptionValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\r\n                    : (previousSelectedValues.length || element.selectedIndex >= 0);\r\n            }\r\n\r\n            // Ensure consistency between model value and selected option.\r\n            // If the dropdown was changed so that selection is no longer the same,\r\n            // notify the value or selectedOptions binding.\r\n            if (selectionChanged) {\r\n                ignoreDependencyDetection(triggerEvent, null, [element, \"change\"]);\r\n            }\r\n        }\r\n\r\n        if (valueAllowUnset || isInitialDependency()) {\r\n            bindingEvent.notify(element, EVENT_CHILDREN_COMPLETE);\r\n        }\r\n\r\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20) {\r\n            element.scrollTop = previousScrollTop;\r\n        }\r\n    }\r\n};\r\n","import {writeValueToProperty, twoWayBindings} from '../expressionRewriting';\r\nimport {bindingEvent, EVENT_CHILDREN_COMPLETE} from '../bindingAttributeSyntax';\r\nimport {registerEventHandler, setOptionNodeSelectionState} from '../../utils';\r\nimport {computed} from '../../subscribables/dependentObservable';\r\nimport {readSelectOrOptionValue} from '../selectExtensions';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nbindingHandlers.selectedOptions = {\r\n    /**\r\n     * @param {HTMLSelectElement} element\r\n     */\r\n    init(element, valueAccessor, allBindings) {\r\n        if (element.tagName.toLowerCase() !== 'select') {\r\n            throw new Error(\"selectedOptions binding applies only to SELECT elements\");\r\n        }\r\n        \r\n        const _updateFromView = () => {\r\n            let value = valueAccessor(), \r\n                valueToWrite = [];\r\n            \r\n            for (let option of element.options) {\r\n                option.selected && valueToWrite.push(readSelectOrOptionValue(option)); \r\n            }\r\n            writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\r\n        };\r\n\r\n        function updateFromModel() {\r\n            let newValue = unwrapObservable(valueAccessor()),\r\n                previousScrollTop = element.scrollTop;\r\n\r\n            if (newValue && typeof newValue.length === 'number') {\r\n                for (let node of element.options) {\r\n                    let isSelected = newValue.includes(readSelectOrOptionValue(node));\r\n                    if (node.selected !== isSelected /* This check prevents flashing of the select element in IE */ ) {      \r\n                        setOptionNodeSelectionState(node, isSelected);\r\n                    }\r\n                }\r\n            }\r\n\r\n            element.scrollTop = previousScrollTop;\r\n        }\r\n\r\n        let isChangeHandlerBound = false;\r\n        bindingEvent.subscribe(element, EVENT_CHILDREN_COMPLETE, () => {\r\n            if (isChangeHandlerBound) {\r\n                _updateFromView();\r\n            } else {\r\n                registerEventHandler(element, \"change\", _updateFromView);\r\n                computed(updateFromModel, null, {disposeWhenNodeIsRemoved: element});\r\n                isChangeHandlerBound = true;\r\n            }\r\n        }, null, {notifyImmediately: true});\r\n    },\r\n    update() {\r\n        // Keep for backwards compatibility with code that may have wrapped binding\r\n    } \r\n};\r\n\r\ntwoWayBindings.selectedOptions = true;\r\n","import {bindingHandlers} from '../bindingHandlers';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\nimport {kebabToCamelCase} from '../../utils.js';\r\n\r\nbindingHandlers.style = {\r\n    update(element, valueAccessor) {\r\n        let value = unwrapObservable(valueAccessor() || {});\r\n        if (!value) {\r\n            return;\r\n        }\r\n        \r\n        const _elementStyle = element.style;\r\n        \r\n        for (let styleName of Object.keys(value)) {\r\n            let newStyleValue = unwrapObservable(value[styleName]);\r\n\r\n            if (newStyleValue === null || newStyleValue === undefined || newStyleValue === false) {\r\n                // Empty string removes the value, whereas null/undefined have no effect\r\n                newStyleValue = '';\r\n            }\r\n\r\n            if (styleName.startsWith('--')) {\r\n                // Is styleName a custom CSS property?\r\n                _elementStyle.setProperty(styleName, newStyleValue);\r\n            } else {\r\n                styleName = kebabToCamelCase(styleName);\r\n\r\n                let previousStyleValue = _elementStyle[styleName];\r\n                _elementStyle[styleName] = newStyleValue;\r\n\r\n                if (newStyleValue !== previousStyleValue && _elementStyle[styleName] === previousStyleValue && !isNaN(newStyleValue)) {\r\n                    _elementStyle[styleName] = newStyleValue + 'px';\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","import {registerEventHandler} from '../../utils';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\n\r\nbindingHandlers.submit = {\r\n    init(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        if (typeof valueAccessor() !== 'function') {\r\n            throw new Error('The value for a submit binding must be a function');\r\n        }\r\n        registerEventHandler(element, 'submit', event => {\r\n            let handlerReturnValue,\r\n                value = valueAccessor();\r\n            try {\r\n                handlerReturnValue = value.call(bindingContext['$data'], element);\r\n            } finally {\r\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n","import {setTextContent} from '../../utils';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\nimport {allowedVirtualElementBindings} from '../../virtualElements';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nbindingHandlers.text = {\r\n    init() {\r\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\r\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\r\n        return {controlsDescendantBindings: true};\r\n    },\r\n    update(element, valueAccessor) {\r\n        \r\n        if (element.nodeType === 1) {\r\n            let text = unwrapObservable(valueAccessor());\r\n            // We have an element node and 'controlsDescendantBindings' is true, so there is no point in \r\n            // wasting cycles trying to cleanup any child nodes, because whatever there is, it wasn't generated by knockout.  \r\n            // (see thrown error \"trying to control descendant bindings of the same element\" in 'bindingAttributeSyntax.js')\r\n            element.textContent = (text === undefined || text === null) ? '' : text;\r\n            return;\r\n        }\r\n        \r\n        setTextContent(element, valueAccessor());\r\n    }\r\n};\r\n\r\nallowedVirtualElementBindings.text = true;\r\n","import {setTimeoutWithCatchError, registerEventHandler} from '../../utils';\r\nimport {writeValueToProperty, twoWayBindings} from '../expressionRewriting';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\nimport {computed} from '../../subscribables/dependentObservable';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nbindingHandlers.textInput = {\r\n    /** \r\n     * @param {HTMLInputElement|HTMLSelectElement|HTMLButtonElement} element \r\n     **/\r\n    init(element, valueAccessor, allBindings) {\r\n\r\n        let previousElementValue = element.value,\r\n            timeoutHandle,\r\n            elementValueBeforeEvent;\r\n\r\n        const _updateModel = (event) => {\r\n            timeoutHandle = timeoutHandle && void clearTimeout(timeoutHandle);\r\n            elementValueBeforeEvent = undefined;\r\n\r\n            let elementValue = element.value;\r\n            if (previousElementValue !== elementValue) {\r\n                if (DEBUG && event) {\r\n                    // Provide a way for tests to know exactly which event was processed\r\n                    element['_ko_textInputProcessedEvent'] = event.type;\r\n                }\r\n                previousElementValue = elementValue;\r\n                writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\r\n            }\r\n        };\r\n\r\n        const _deferUpdateModel = (event) => {\r\n            if (timeoutHandle) {\r\n                return;\r\n            }\r\n            // The elementValueBeforeEvent variable is set *only* during the brief gap between an\r\n            // event firing and the updateModel function running. This allows us to ignore model\r\n            // updates that are from the previous state of the element, usually due to techniques\r\n            // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\r\n            elementValueBeforeEvent = element.value;\r\n            let handler = DEBUG ? () => _updateModel({type: event.type}) : _updateModel;\r\n            timeoutHandle = setTimeoutWithCatchError(handler, 4);\r\n        };\r\n        \r\n        const _updateView = function () {\r\n            let modelValue = unwrapObservable(valueAccessor());\r\n\r\n            if (modelValue === null || modelValue === undefined) {\r\n                modelValue = '';\r\n            }\r\n\r\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\r\n                setTimeoutWithCatchError(_updateView, 4);\r\n                return;\r\n            }\r\n            \r\n            // Update the element only if the element and model are different. On some browsers, updating the value\r\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\r\n            if (element.value !== modelValue) {\r\n                element.value = modelValue;\r\n                previousElementValue = element.value; // In case the browser changes the value (see #2281)\r\n            }\r\n        };\r\n\r\n        /** @type {string[]} */\r\n        const _forceUpdateOn = DEBUG && bindingHandlers.textInput._forceUpdateOn; \r\n        if (_forceUpdateOn) {\r\n            // Provide a way for tests to specify exactly which events are bound\r\n            for (let eventName of _forceUpdateOn) {\r\n                if (eventName.startsWith('after')) {\r\n                    registerEventHandler(element, eventName.slice(5), _deferUpdateModel);\r\n                } else {\r\n                    registerEventHandler(element, eventName, _updateModel);\r\n                }\r\n            }\r\n        } else {\r\n            registerEventHandler(element, 'input', _updateModel);\r\n        }\r\n\r\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\r\n        registerEventHandler(element, 'change', _updateModel);\r\n\r\n        // To deal with browsers that don't notify any kind of event for some changes (IE, Safari, etc.)\r\n        registerEventHandler(element, 'blur', _updateModel);\r\n\r\n        computed(_updateView, null, {disposeWhenNodeIsRemoved: element});\r\n    }\r\n};\r\n\r\ntwoWayBindings['textInput'] = true;\r\n\r\n// TODO this textinput alias should rather throw an error than foster sloppy programming\r\n// textinput is an alias for textInput\r\nbindingHandlers.textinput = {\r\n    // preprocess is the only way to set up a full alias\r\n    preprocess(value, name, addBinding) {\r\n        addBinding('textInput', value);\r\n    }\r\n};\r\n","import {bindingHandlers} from '../bindingHandlers';\r\n\r\nlet __uniqueNameCurrentIndex = 0;\r\n\r\nbindingHandlers.uniqueName = {\r\n    init: (element, valueAccessor) => valueAccessor() && (element.name = 'ko_unique_' + (++__uniqueNameCurrentIndex))\r\n};\r\n","import {applyBindingsToDescendants} from '../bindingAttributeSyntax';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\nimport {allowedBindings} from '../../virtualElements';\r\n\r\nbindingHandlers.using = {\r\n    init(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        let options;\r\n\r\n        if (allBindings.has('as')) {\r\n            options = {as: allBindings.get('as'), noChildContext: allBindings.get('noChildContext')};\r\n        }\r\n\r\n        let innerContext = bindingContext.createChildContext(valueAccessor, options);\r\n        applyBindingsToDescendants(innerContext, element);\r\n\r\n        return {controlsDescendantBindings: true};\r\n    }\r\n};\r\n\r\nallowedBindings.using = true;\r\n","import {readSelectOrOptionValue, writeSelectOrOptionValue} from '../selectExtensions';\r\nimport {registerEventHandler, setTimeoutWithCatchError, arrayGetDistinctValues, arrayRemoveItem} from '../../utils';\r\nimport {writeValueToProperty, twoWayBindings} from '../expressionRewriting';\r\nimport {EVENT_CHILDREN_COMPLETE, applyBindingAccessorsToNode, bindingEvent} from '../bindingAttributeSyntax';\r\nimport {ignoreDependencyDetectionNoArgs} from '../../subscribables/dependencyDetection';\r\nimport {bindingHandlers} from '../bindingHandlers';\r\nimport {computed} from '../../subscribables/dependentObservable';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nbindingHandlers.value = {\r\n    /** \r\n     * @param {HTMLInputElement|HTMLButtonElement|HTMLSelectElement} element \r\n     **/\r\n    init(element, valueAccessor, allBindings) {\r\n        let tagName = element.nodeName.toLowerCase(),\r\n            isInputElement = tagName === 'input',\r\n            inputType = isInputElement && element.type;\r\n\r\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\r\n        if (inputType === 'checkbox' || inputType === 'radio') {\r\n            applyBindingAccessorsToNode(element, {checkedValue: valueAccessor});\r\n            return;\r\n        }\r\n        \r\n        let requestedEventsToCatch = allBindings.get('valueUpdate'),\r\n            elementValueBeforeEvent = null,\r\n            eventsToCatch = [];\r\n        \r\n        if (requestedEventsToCatch) {\r\n            // Allow both individual event names, and arrays of event names\r\n            if (typeof requestedEventsToCatch === 'string') {\r\n                eventsToCatch.push(requestedEventsToCatch);\r\n            } else {\r\n                eventsToCatch = arrayGetDistinctValues(requestedEventsToCatch);\r\n            }\r\n            arrayRemoveItem(eventsToCatch, 'change');  // We'll subscribe to 'change' events later\r\n        }\r\n\r\n        const _valueUpdateHandler = () => {\r\n            elementValueBeforeEvent = null;\r\n            let modelValue = valueAccessor(),\r\n                elementValue = readSelectOrOptionValue(element);\r\n            writeValueToProperty(modelValue, allBindings, 'value', elementValue);\r\n        };\r\n\r\n        for (let eventName of eventsToCatch) {\r\n            // The syntax 'after<eventname>' means 'run the handler asynchronously after the event'\r\n            // This is useful, for example, to catch 'keydown' events after the browser has updated the control\r\n            // (otherwise, readSelectOrOptionValue(this) will receive the control's value *before* the key event)\r\n            if (eventName.startsWith('after')) {\r\n                registerEventHandler(element, eventName.substring(5), () => {\r\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\r\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\r\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\r\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\r\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\r\n                    // techniques like rateLimit can trigger model changes at critical moments that will\r\n                    // override the user's inputs, causing keystrokes to be lost.\r\n                    elementValueBeforeEvent = readSelectOrOptionValue(element);\r\n                    setTimeoutWithCatchError(_valueUpdateHandler, 0);\r\n                });\r\n            } else {\r\n                registerEventHandler(element, eventName, _valueUpdateHandler);\r\n            }\r\n        }\r\n\r\n        let _updateFromModel;\r\n\r\n        if (inputType === 'file') {\r\n            // For file input elements, can only write the empty string\r\n            _updateFromModel = () => {\r\n                let newValue = unwrapObservable(valueAccessor());\r\n                if (newValue === null || newValue === undefined || newValue === '') {\r\n                    element.value = '';\r\n                } else {\r\n                    ignoreDependencyDetectionNoArgs(_valueUpdateHandler);  // reset the model to match the element\r\n                }\r\n            };\r\n        } else {\r\n            _updateFromModel = () => {\r\n                let newValue = unwrapObservable(valueAccessor()),\r\n                    elementValue = readSelectOrOptionValue(element);\r\n\r\n                if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\r\n                    setTimeoutWithCatchError(_updateFromModel, 0);\r\n                    return;\r\n                }\r\n                if (newValue === elementValue && elementValue !== undefined) {\r\n                    return; // no changes\r\n                }\r\n                if (tagName === 'select') {\r\n                    let allowUnset = allBindings.get('valueAllowUnset');\r\n                    writeSelectOrOptionValue(element, newValue, allowUnset);\r\n                    if (!allowUnset && newValue !== readSelectOrOptionValue(element)) {\r\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\r\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\r\n                        ignoreDependencyDetectionNoArgs(_valueUpdateHandler);\r\n                    }\r\n                    return;\r\n                }\r\n                writeSelectOrOptionValue(element, newValue);\r\n            };\r\n        }\r\n\r\n        if (tagName === 'select') {\r\n            let isChangeHandlerBound = false;\r\n            bindingEvent.subscribe(element, EVENT_CHILDREN_COMPLETE, () => {\r\n                if (!isChangeHandlerBound) {\r\n                    registerEventHandler(element, 'change', _valueUpdateHandler);\r\n                    isChangeHandlerBound = !!computed(_updateFromModel, null, {disposeWhenNodeIsRemoved: element});\r\n                } else if (allBindings.get('valueAllowUnset')) {\r\n                    _updateFromModel();\r\n                } else {\r\n                    _valueUpdateHandler();\r\n                }\r\n            }, null, {notifyImmediately: true});\r\n        } else {\r\n            registerEventHandler(element, 'change', _valueUpdateHandler);\r\n            computed(_updateFromModel, null, {disposeWhenNodeIsRemoved: element});\r\n        }\r\n    },\r\n    update() {} // Keep for backwards compatibility with code that may have wrapped value binding\r\n};\r\n\r\ntwoWayBindings.value = true;\r\n","import {bindingHandlers} from '../bindingHandlers';\r\nimport {unwrapObservable} from '../../subscribables/observableUtils';\r\n\r\nconst __visibleBindingUpdateFn = (element, valueAccessor) => {\r\n    let value = unwrapObservable(valueAccessor()),\r\n        isCurrentlyVisible = element.style.display !== 'none';\r\n    \r\n    if (value && !isCurrentlyVisible) {\r\n        element.style.display = '';\r\n    } else if ((!value) && isCurrentlyVisible) {\r\n        element.style.display = 'none';\r\n    }\r\n}; \r\n\r\nbindingHandlers.visible = {\r\n    update: __visibleBindingUpdateFn \r\n};\r\n\r\nbindingHandlers.hidden = {\r\n    update: (element, valueAccessor) => __visibleBindingUpdateFn(element, () => !unwrapObservable(valueAccessor()))\r\n};\r\n","import {applyBindingsToDescendants, bindingEvent, EVENT_DESCENDENTS_COMPLETE} from '../binding/bindingAttributeSyntax';\r\nimport {allowedBindings, childNodes, emptyNode, setDomNodeChildren} from '../virtualElements';\r\nimport {addDisposeCallback} from '../utils.domNodeDisposal';\r\nimport {cloneNodes} from '../utils';\r\nimport {getComponent} from './loaderRegistry';\r\nimport {bindingHandlers} from '../binding/bindingHandlers';\r\nimport {computed} from '../subscribables/dependentObservable';\r\nimport {unwrapObservable} from '../subscribables/observableUtils';\r\n\r\nlet componentLoadingOperationUniqueId = 0;\r\n\r\nallowedBindings.component = true;\r\n\r\nbindingHandlers.component = {\r\n    init: (element, valueAccessor, ignored1, ignored2, bindingContext) => {\r\n        let currentViewModel,\r\n            currentLoadingOperationId,\r\n            afterRenderSub,\r\n            disposeAssociatedComponentViewModel = () => {\r\n                let currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\r\n                if (typeof currentViewModelDispose === 'function') {\r\n                    currentViewModelDispose.call(currentViewModel);\r\n                }\r\n                if (afterRenderSub) {\r\n                    afterRenderSub.dispose();\r\n                }\r\n                afterRenderSub = null;\r\n                currentViewModel = null;\r\n                // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\r\n                currentLoadingOperationId = null;\r\n            },\r\n            originalChildNodes = Array.from(childNodes(element));\r\n\r\n        emptyNode(element);\r\n        addDisposeCallback(element, disposeAssociatedComponentViewModel);\r\n\r\n        computed(function () {\r\n            let value = unwrapObservable(valueAccessor()),\r\n                componentName, componentParams;\r\n\r\n            if (typeof value === 'string') {\r\n                componentName = value;\r\n            } else {\r\n                componentName = unwrapObservable(value['name']);\r\n                componentParams = unwrapObservable(value['params']);\r\n            }\r\n\r\n            if (!componentName) {\r\n                throw new Error('No component name specified');\r\n            }\r\n\r\n            let asyncContext = bindingEvent.startPossiblyAsyncContentBinding(element, bindingContext);\r\n\r\n            let loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\r\n            getComponent(componentName, componentDefinition => {\r\n                if (currentLoadingOperationId !== loadingOperationId) {\r\n                    // If this is not the current load operation for this element, ignore it.\r\n                    return;\r\n                }\r\n\r\n                // Clean up previous state\r\n                disposeAssociatedComponentViewModel();\r\n\r\n                // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\r\n                if (!componentDefinition) {\r\n                    throw new Error('Unknown component \\'' + componentName + '\\'');\r\n                }\r\n                _cloneTemplateIntoElement(componentName, componentDefinition, element);\r\n\r\n                let componentInfo = {\r\n                    element,\r\n                    templateNodes: originalChildNodes\r\n                };\r\n\r\n                let componentViewModel = _createViewModel(componentDefinition, componentParams, componentInfo),\r\n                    childBindingContext = asyncContext['createChildContext'](componentViewModel, {\r\n                        extend(ctx) {\r\n                            ctx['$component'] = componentViewModel;\r\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\r\n                        }\r\n                    });\r\n\r\n                let _viewModelDescendantsComplete = componentViewModel && componentViewModel.koDescendantsComplete;\r\n                if (_viewModelDescendantsComplete) {\r\n                    afterRenderSub = bindingEvent.subscribe(element, EVENT_DESCENDENTS_COMPLETE, _viewModelDescendantsComplete, componentViewModel);\r\n                }\r\n\r\n                currentViewModel = componentViewModel;\r\n                applyBindingsToDescendants(childBindingContext, element);\r\n            });\r\n        }, null, {disposeWhenNodeIsRemoved: element});\r\n\r\n        return {controlsDescendantBindings: true};\r\n    }\r\n};\r\n\r\nconst _cloneTemplateIntoElement = (componentName, componentDefinition, element) => {\r\n    let template = componentDefinition['template'];\r\n    if (!template) {\r\n        throw new Error('Component \\'' + componentName + '\\' has no template');\r\n    }\r\n    let clonedNodesArray = cloneNodes(template);\r\n    setDomNodeChildren(element, clonedNodesArray);\r\n};\r\n\r\nconst _createViewModel = (componentDefinition, componentParams, componentInfo) => {\r\n    let componentViewModelFactory = componentDefinition['createViewModel'];\r\n    return componentViewModelFactory\r\n        ? componentViewModelFactory.call(componentDefinition, componentParams, componentInfo)\r\n        : componentParams; // Template-only component\r\n};\r\n","// This is the final knockout library to be built. \r\n// Anything that's not contained in the default export at the bottom of this file won't be accessible later.  \r\n\r\nimport {onError, _overrideOnError} from './onError';\r\nimport {childNodes, firstChild, nextSibling, emptyNode, insertAfter, allowedBindings, prepend, setDomNodeChildren} from './virtualElements';\r\nimport {cleanNode, removeNode, addDisposeCallback, removeDisposeCallback, _cleanExternalData, _overrideCleanExternalData} from './utils.domNodeDisposal';\r\nimport {dataFor, contextFor, applyBindings, applyBindingsToNode, applyBindingsToDescendants,\r\n        bindingEvent, applyBindingAccessorsToNode, _setKoReferenceForBindingContexts} from './binding/bindingAttributeSyntax';\r\nimport {bindingHandlers, getBindingHandler, _overrideGetBindingHandler} from './binding/bindingHandlers';\r\nimport * as utils from './utils';\r\nimport {parseHtmlForTemplateNodes, parseHtmlFragment, setHtml} from './utils.domManipulation';\r\nimport {cancelTask, runEarly, resetForTesting, scheduleTask, _scheduler, _overrideScheduler} from './tasks';\r\nimport {options} from './options';\r\nimport {computed, dependentObservable, pureComputed} from './subscribables/dependentObservable';\r\nimport {observable} from './subscribables/observable';\r\nimport {isWritableObservable, isSubscribable, isComputed, isPureComputed, isObservable, isObservableArray, unwrapObservable} from './subscribables/observableUtils';\r\nimport {Subscribable} from './subscribables/subscribable';\r\nimport {observableArray} from './subscribables/observableArray';\r\nimport {memoize, unmemoize, parseMemoText, unmemoizeDomNodeAndDescendants} from './memoization';\r\nimport {applyMemoizedBindingsToNextSibling} from './templating/templateRewriting';\r\nimport {getDomData, setDomData, clearDomData} from './utils.domData';\r\nimport {extenders} from './subscribables/extenders';\r\nimport {ignoreDependencyDetection, getDependencies, getDependenciesCount, isInitialDependency, registerDependencyExternal} from './subscribables/dependencyDetection';\r\nimport {toJS, toJSON} from './subscribables/mappingHelpers';\r\nimport {NativeTemplateEngine} from './templating/native/nativeTemplateEngine';\r\nimport {setTemplateEngine} from './templating/templating';\r\nimport {when} from './subscribables/when';\r\nimport {TemplateEngine} from './templating/templateEngine';\r\nimport {AnonymousTemplate, DomElementTemplate} from './templating/templateSources';\r\nimport {bindingRewriteValidators, parseObjectLiteral, preProcessBindings, _twoWayBindings} from './binding/expressionRewriting';\r\nimport {loaders as componentLoaders, _setComponentLoaders, getComponent, clearCachedDefinition} from './components/loaderRegistry';\r\nimport {defaultLoader, isComponentRegistered, registerComponent, unregisterComponent} from './components/defaultLoader';\r\nimport {setDomNodeChildrenFromArrayMapping} from './binding/editDetection/arrayToDomNodeChildren';\r\nimport {renderTemplate} from './templating/templating';\r\nimport {compareArrays, _overrideCompareArrays, findMovesInArrayComparison} from './binding/editDetection/compareArrays';\r\nimport {KoBindingProvider} from './binding/bindingProvider';\r\nimport {addBindingsForCustomElement, getComponentNameForNode, _overrideGetComponentNameForNode} from './components/customElements';\r\nimport './binding/defaultBindings/allDefaultBindings';\r\nimport {readSelectOrOptionValue, writeSelectOrOptionValue} from './binding/selectExtensions';\r\n\r\nconst expressionRewriting = {\r\n    bindingRewriteValidators,\r\n    parseObjectLiteral,\r\n    preProcessBindings,\r\n    _twoWayBindings,\r\n    insertPropertyAccessorsIntoJson: preProcessBindings // alias for backwards compat\r\n};\r\n\r\n\r\n// ********************** export all props/methods/namespaces to be exposed publicly *********************************\r\n\r\nconst ko = {\r\n    version, // eslint-disable-line no-undef\r\n    options,\r\n    utils: Object.assign({\r\n        setTimeout: utils.setTimeoutWithCatchError,  // alias for backwards compat.\r\n\r\n        parseHtmlFragment,\r\n        parseHtmlForTemplateNodes,\r\n        setHtml,\r\n        parseJson: JSON.parse,\r\n        setDomNodeChildrenFromArrayMapping,\r\n        get compareArrays() { return compareArrays; },\r\n        set compareArrays(fn) { _overrideCompareArrays(fn); },\r\n        findMovesInArrayComparison,\r\n\r\n        domData: {\r\n            get: getDomData,\r\n            set: setDomData,\r\n            clear: clearDomData\r\n        },\r\n        domNodeDisposal: {\r\n            removeNode,\r\n            get cleanExternalData() { return _cleanExternalData; },\r\n            set cleanExternalData(fn) { _overrideCleanExternalData(fn); },\r\n            addDisposeCallback,\r\n            removeDisposeCallback\r\n        },\r\n        unwrapObservable\r\n    }, utils),\r\n    unwrap: unwrapObservable,\r\n    removeNode,\r\n    cleanNode,\r\n    memoization: {\r\n        memoize,\r\n        unmemoize,\r\n        parseMemoText,\r\n        unmemoizeDomNodeAndDescendants\r\n    },\r\n    tasks: {\r\n        cancel: cancelTask,\r\n        runEarly,\r\n        resetForTesting,\r\n        schedule: scheduleTask,\r\n        get scheduler() { return _scheduler; },\r\n        set scheduler(s) { _overrideScheduler(s); }\r\n    },\r\n    extenders,\r\n    subscribable: Subscribable,\r\n    isSubscribable,\r\n    computedContext: {\r\n        getDependenciesCount,\r\n        getDependencies,\r\n        isInitial: isInitialDependency,\r\n        registerDependency: registerDependencyExternal\r\n    },\r\n    ignoreDependencies: ignoreDependencyDetection,\r\n    observable,\r\n    isObservable,\r\n    isWritableObservable,\r\n    isWriteableObservable: isWritableObservable,\r\n    observableArray,\r\n    isObservableArray,\r\n    computed,\r\n    dependentObservable,\r\n    isComputed,\r\n    isPureComputed,\r\n    pureComputed,\r\n    toJSON,\r\n    toJS,\r\n    when,\r\n    selectExtensions: {\r\n        readValue: readSelectOrOptionValue,\r\n        writeValue: writeSelectOrOptionValue\r\n    },\r\n    expressionRewriting,\r\n    jsonExpressionRewriting: expressionRewriting,\r\n    virtualElements: {\r\n        childNodes,\r\n        firstChild,\r\n        nextSibling,\r\n        allowedBindings,\r\n        emptyNode,\r\n        insertAfter,\r\n        prepend,\r\n        setDomNodeChildren\r\n    },\r\n    bindingProvider: KoBindingProvider,\r\n    get getBindingHandler() { return getBindingHandler; },\r\n    set getBindingHandler(fn) { _overrideGetBindingHandler(fn); },\r\n    bindingHandlers,\r\n    bindingEvent,\r\n    applyBindings,\r\n    applyBindingsToDescendants,\r\n    applyBindingAccessorsToNode,\r\n    applyBindingsToNode,\r\n    contextFor,\r\n    dataFor,\r\n    components: {\r\n        get loaders() { return componentLoaders; },\r\n        set loaders(newLoaders) { _setComponentLoaders(newLoaders); },\r\n        // Expose the default loader so that developers can directly ask it for configuration or to resolve configuration\r\n        defaultLoader,\r\n        get: getComponent,\r\n        clearCachedDefinition,\r\n        isRegistered: isComponentRegistered,\r\n        register: registerComponent,\r\n        unregister: unregisterComponent,\r\n        addBindingsForCustomElement,\r\n        get getComponentNameForNode() { return getComponentNameForNode; },\r\n        set getComponentNameForNode(fn) { _overrideGetComponentNameForNode(fn); }\r\n    },\r\n    templateEngine: TemplateEngine,\r\n    __tr_ambtns: applyMemoizedBindingsToNextSibling, // eslint-disable-line camelcase\r\n    templateSources: {\r\n        domElement: DomElementTemplate,\r\n        anonymousTemplate: AnonymousTemplate\r\n    },\r\n    setTemplateEngine,\r\n    renderTemplate,\r\n    nativeTemplateEngine: NativeTemplateEngine,\r\n    get onError() { return onError; },\r\n    set onError(fnOrNull) { _overrideOnError(fnOrNull); }\r\n};\r\n\r\n_setKoReferenceForBindingContexts(ko);\r\n\r\nexport default ko;\r\n"],"names":["setDomNodeChildren","utilsSetDomNodeChildren","virtualElementsSetDomNodeChildren","options","koOptions","utils.setTimeoutWithCatchError","componentLoaders"],"mappings":"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"}